

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Dec 29 15:41:57 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Version 2.40
    68                           ; Generated 17/11/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F4580 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   000000                     
   103                           	psect	idataCOMRAM
   104   002DDE                     __pidataCOMRAM:
   105                           	callstack 0
   106                           
   107                           ;initializer for _pq
   108   002DDE  0001               	dw	1
   109                           
   110                           ;initializer for read_switches@once
   111   002DE0  01                 	db	1
   112                           
   113                           	psect	idataBANK0
   114   002952                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for _menu
   118   002952  56                 	db	86
   119   002953  69                 	db	105
   120   002954  65                 	db	101
   121   002955  77                 	db	119
   122   002956  20                 	db	32
   123   002957  6C                 	db	108
   124   002958  6F                 	db	111
   125   002959  67                 	db	103
   126   00295A  20                 	db	32
   127   00295B  20                 	db	32
   128   00295C  20                 	db	32
   129   00295D  20                 	db	32
   130   00295E  20                 	db	32
   131   00295F  20                 	db	32
   132   002960  00                 	db	0
   133   002961  00                 	db	0
   134   002962  00                 	db	0
   135   002963  00                 	db	0
   136   002964  00                 	db	0
   137   002965  00                 	db	0
   138   002966  43                 	db	67
   139   002967  6C                 	db	108
   140   002968  65                 	db	101
   141   002969  61                 	db	97
   142   00296A  72                 	db	114
   143   00296B  20                 	db	32
   144   00296C  6C                 	db	108
   145   00296D  6F                 	db	111
   146   00296E  67                 	db	103
   147   00296F  20                 	db	32
   148   002970  20                 	db	32
   149   002971  20                 	db	32
   150   002972  20                 	db	32
   151   002973  20                 	db	32
   152   002974  20                 	db	32
   153   002975  20                 	db	32
   154   002976  00                 	db	0
   155   002977  00                 	db	0
   156   002978  00                 	db	0
   157   002979  00                 	db	0
   158   00297A  44                 	db	68
   159   00297B  6F                 	db	111
   160   00297C  77                 	db	119
   161   00297D  6E                 	db	110
   162   00297E  6C                 	db	108
   163   00297F  6F                 	db	111
   164   002980  61                 	db	97
   165   002981  64                 	db	100
   166   002982  20                 	db	32
   167   002983  6C                 	db	108
   168   002984  6F                 	db	111
   169   002985  67                 	db	103
   170   002986  20                 	db	32
   171   002987  20                 	db	32
   172   002988  20                 	db	32
   173   002989  20                 	db	32
   174   00298A  20                 	db	32
   175   00298B  00                 	db	0
   176   00298C  00                 	db	0
   177   00298D  00                 	db	0
   178   00298E  53                 	db	83
   179   00298F  65                 	db	101
   180   002990  74                 	db	116
   181   002991  20                 	db	32
   182   002992  74                 	db	116
   183   002993  69                 	db	105
   184   002994  6D                 	db	109
   185   002995  65                 	db	101
   186   002996  20                 	db	32
   187   002997  20                 	db	32
   188   002998  20                 	db	32
   189   002999  20                 	db	32
   190   00299A  20                 	db	32
   191   00299B  20                 	db	32
   192   00299C  00                 	db	0
   193   00299D  00                 	db	0
   194   00299E  00                 	db	0
   195   00299F  00                 	db	0
   196   0029A0  00                 	db	0
   197   0029A1  00                 	db	0
   198   0029A2  43                 	db	67
   199   0029A3  68                 	db	104
   200   0029A4  61                 	db	97
   201   0029A5  6E                 	db	110
   202   0029A6  67                 	db	103
   203   0029A7  65                 	db	101
   204   0029A8  20                 	db	32
   205   0029A9  70                 	db	112
   206   0029AA  61                 	db	97
   207   0029AB  73                 	db	115
   208   0029AC  73                 	db	115
   209   0029AD  77                 	db	119
   210   0029AE  6F                 	db	111
   211   0029AF  72                 	db	114
   212   0029B0  64                 	db	100
   213   0029B1  20                 	db	32
   214   0029B2  20                 	db	32
   215   0029B3  20                 	db	32
   216   0029B4  20                 	db	32
   217   0029B5  20                 	db	32
   218                           
   219                           	psect	idataBANK1
   220   002BA2                     __pidataBANK1:
   221                           	callstack 0
   222                           
   223                           ;initializer for main@F10708
   224   002BA2  57                 	db	87
   225   002BA3  45                 	db	69
   226   002BA4  4C                 	db	76
   227   002BA5  43                 	db	67
   228   002BA6  4F                 	db	79
   229   002BA7  4D                 	db	77
   230   002BA8  45                 	db	69
   231   002BA9  00                 	db	0
   232   002BAA  00                 	db	0
   233   002BAB  00                 	db	0
   234                           
   235                           ;initializer for _count
   236   002BAC  0078               	dw	120
   237                           
   238                           ;initializer for _ev
   239   002BAE  4F                 	db	79
   240   002BAF  4E                 	db	78
   241   002BB0  00                 	db	0
   242   002BB1  47                 	db	71
   243   002BB2  52                 	db	82
   244   002BB3  00                 	db	0
   245   002BB4  47                 	db	71
   246   002BB5  4E                 	db	78
   247   002BB6  00                 	db	0
   248   002BB7  47                 	db	71
   249   002BB8  31                 	db	49
   250   002BB9  00                 	db	0
   251   002BBA  47                 	db	71
   252   002BBB  32                 	db	50
   253   002BBC  00                 	db	0
   254   002BBD  47                 	db	71
   255   002BBE  33                 	db	51
   256   002BBF  00                 	db	0
   257   002BC0  47                 	db	71
   258   002BC1  34                 	db	52
   259   002BC2  00                 	db	0
   260   002BC3  43                 	db	67
   261   002BC4  20                 	db	32
   262   002BC5  00                 	db	0
   263   002BC6  44                 	db	68
   264   002BC7  4C                 	db	76
   265   002BC8  00                 	db	0
   266   002BC9  43                 	db	67
   267   002BCA  4C                 	db	76
   268   002BCB  00                 	db	0
   269   002BCC  53                 	db	83
   270   002BCD  54                 	db	84
   271   002BCE  00                 	db	0
   272   002BCF  43                 	db	67
   273   002BD0  50                 	db	80
   274   002BD1  00                 	db	0
   275   000000                     _SSPADD	set	4040
   276   000000                     _SSPCON1	set	4038
   277   000000                     _RCREG	set	4014
   278   000000                     _TXREG	set	4013
   279   000000                     _SPBRG	set	4015
   280   000000                     _EECON2	set	4007
   281   000000                     _ADRESL	set	4035
   282   000000                     _ADRESH	set	4036
   283   000000                     _ACKSTAT	set	32302
   284   000000                     _CKE	set	32318
   285   000000                     _ABDOVF	set	32199
   286   000000                     _T08BIT	set	32430
   287   000000                     _RBPU	set	32655
   288   000000                     _VCFG1	set	32269
   289   000000                     _GODONE	set	32273
   290   000000                     _PORTBbits	set	3969
   291   000000                     _ADCON1	set	4033
   292   000000                     _ADCON0	set	4034
   293   000000                     _TRISD	set	3989
   294   000000                     _ACKEN	set	32300
   295   000000                     _ACKDT	set	32301
   296   000000                     _RCEN	set	32299
   297   000000                     _RSEN	set	32297
   298   000000                     _PEN	set	32298
   299   000000                     _SEN	set	32296
   300   000000                     _BCLIF	set	32011
   301   000000                     _SSPIF	set	31987
   302   000000                     _SMP	set	32319
   303   000000                     _TRISC4	set	31908
   304   000000                     _TRISC3	set	31907
   305   000000                     _RCIF	set	31989
   306   000000                     _RCIE	set	31981
   307   000000                     _ABDEN	set	32192
   308   000000                     _WUE	set	32193
   309   000000                     _BRG16	set	32195
   310   000000                     _CREN	set	32092
   311   000000                     _RX9	set	32094
   312   000000                     _BRGH	set	32098
   313   000000                     _SENDB	set	32099
   314   000000                     _SYNC	set	32100
   315   000000                     _TXEN	set	32101
   316   000000                     _TRISC6	set	31910
   317   000000                     _TRISC7	set	31911
   318   000000                     _TMR0IF	set	32658
   319   000000                     _PSA	set	32427
   320   000000                     _TMR0ON	set	32431
   321   000000                     _T0CS	set	32429
   322   000000                     _GO	set	32273
   323   000000                     _ADON	set	32272
   324   000000                     _VCFG0	set	32268
   325   000000                     _ADCS2	set	32258
   326   000000                     _ADCS1	set	32257
   327   000000                     _ADCS0	set	32256
   328   000000                     _ACQT0	set	32259
   329   000000                     _ACQT1	set	32260
   330   000000                     _ACQT2	set	32261
   331   000000                     _RD7	set	31775
   332   000000                     _RC0	set	31760
   333   000000                     _RC2	set	31762
   334   000000                     _PEIE	set	32662
   335   000000                     _TMR0IE	set	32661
   336   000000                     _PORTB	set	3969
   337   000000                     _RC1	set	31761
   338   000000                     _GIE	set	32663
   339   000000                     _TRISB	set	3987
   340   000000                     _TRISC	set	3988
   341   000000                     _PORTD	set	3971
   342   000000                     _TRISD7	set	31919
   343   000000                     _PIR2bits	set	4001
   344   000000                     _EECON1bits	set	4006
   345   000000                     _EEDATA	set	4008
   346   000000                     _EEADR	set	4009
   347   000000                     _TXIE	set	31980
   348   000000                     _ADFM	set	32263
   349   000000                     _SPEN	set	32095
   350   000000                     _TX9	set	32102
   351   000000                     _TMR0	set	4054
   352   000000                     _TXIF	set	31988
   353   000000                     _SSPBUF	set	4041
   354                           
   355                           	psect	mediumconst
   356   002E94                     __pmediumconst:
   357                           	callstack 0
   358   002E94  00                 	db	0
   359   002E95                     STR_23:
   360   002E95  53                 	db	83	;'S'
   361   002E96  2E                 	db	46
   362   002E97  4E                 	db	78	;'N'
   363   002E98  4F                 	db	79	;'O'
   364   002E99  20                 	db	32
   365   002E9A  20                 	db	32
   366   002E9B  20                 	db	32
   367   002E9C  54                 	db	84	;'T'
   368   002E9D  49                 	db	73	;'I'
   369   002E9E  4D                 	db	77	;'M'
   370   002E9F  45                 	db	69	;'E'
   371   002EA0  20                 	db	32
   372   002EA1  20                 	db	32
   373   002EA2  20                 	db	32
   374   002EA3  20                 	db	32
   375   002EA4  20                 	db	32
   376   002EA5  20                 	db	32
   377   002EA6  45                 	db	69	;'E'
   378   002EA7  56                 	db	86	;'V'
   379   002EA8  20                 	db	32
   380   002EA9  20                 	db	32
   381   002EAA  20                 	db	32
   382   002EAB  20                 	db	32
   383   002EAC  20                 	db	32
   384   002EAD  53                 	db	83	;'S'
   385   002EAE  50                 	db	80	;'P'
   386   002EAF  0A                 	db	10
   387   002EB0  0D                 	db	13
   388   002EB1  00                 	db	0
   389   002EB2                     STR_29:
   390   002EB2  72                 	db	114	;'r'
   391   002EB3  65                 	db	101	;'e'
   392   002EB4  5F                 	db	95	;'_'
   393   002EB5  65                 	db	101	;'e'
   394   002EB6  6E                 	db	110	;'n'
   395   002EB7  74                 	db	116	;'t'
   396   002EB8  72                 	db	114	;'r'
   397   002EB9  20                 	db	32
   398   002EBA  6E                 	db	110	;'n'
   399   002EBB  65                 	db	101	;'e'
   400   002EBC  77                 	db	119	;'w'
   401   002EBD  20                 	db	32
   402   002EBE  70                 	db	112	;'p'
   403   002EBF  61                 	db	97	;'a'
   404   002EC0  73                 	db	115	;'s'
   405   002EC1  73                 	db	115	;'s'
   406   002EC2  77                 	db	119	;'w'
   407   002EC3  6F                 	db	111	;'o'
   408   002EC4  72                 	db	114	;'r'
   409   002EC5  64                 	db	100	;'d'
   410   002EC6  00                 	db	0
   411   002EC7                     STR_20:
   412   002EC7  20                 	db	32
   413   002EC8  20                 	db	32
   414   002EC9  20                 	db	32
   415   002ECA  44                 	db	68	;'D'
   416   002ECB  4F                 	db	79	;'O'
   417   002ECC  57                 	db	87	;'W'
   418   002ECD  4E                 	db	78	;'N'
   419   002ECE  4C                 	db	76	;'L'
   420   002ECF  4F                 	db	79	;'O'
   421   002ED0  41                 	db	65	;'A'
   422   002ED1  44                 	db	68	;'D'
   423   002ED2  20                 	db	32
   424   002ED3  4C                 	db	76	;'L'
   425   002ED4  4F                 	db	79	;'O'
   426   002ED5  47                 	db	71	;'G'
   427   002ED6  20                 	db	32
   428   002ED7  20                 	db	32
   429   002ED8  20                 	db	32
   430   002ED9  20                 	db	32
   431   002EDA  00                 	db	0
   432   002EDB                     STR_21:
   433   002EDB  20                 	db	32
   434   002EDC  20                 	db	32
   435   002EDD  20                 	db	32
   436   002EDE  20                 	db	32
   437   002EDF  53                 	db	83	;'S'
   438   002EE0  55                 	db	85	;'U'
   439   002EE1  43                 	db	67	;'C'
   440   002EE2  43                 	db	67	;'C'
   441   002EE3  45                 	db	69	;'E'
   442   002EE4  53                 	db	83	;'S'
   443   002EE5  53                 	db	83	;'S'
   444   002EE6  46                 	db	70	;'F'
   445   002EE7  55                 	db	85	;'U'
   446   002EE8  4C                 	db	76	;'L'
   447   002EE9  4C                 	db	76	;'L'
   448   002EEA  20                 	db	32
   449   002EEB  20                 	db	32
   450   002EEC  20                 	db	32
   451   002EED  20                 	db	32
   452   002EEE  00                 	db	0
   453   002EEF                     STR_19:
   454   002EEF  53                 	db	83	;'S'
   455   002EF0  55                 	db	85	;'U'
   456   002EF1  43                 	db	67	;'C'
   457   002EF2  43                 	db	67	;'C'
   458   002EF3  45                 	db	69	;'E'
   459   002EF4  53                 	db	83	;'S'
   460   002EF5  53                 	db	83	;'S'
   461   002EF6  46                 	db	70	;'F'
   462   002EF7  55                 	db	85	;'U'
   463   002EF8  4C                 	db	76	;'L'
   464   002EF9  4C                 	db	76	;'L'
   465   002EFA  20                 	db	32
   466   002EFB  2E                 	db	46
   467   002EFC  2E                 	db	46
   468   002EFD  2E                 	db	46
   469   002EFE  2E                 	db	46
   470   002EFF  2E                 	db	46
   471   002F00  00                 	db	0
   472   002F01                     STR_5:
   473   002F01  20                 	db	32
   474   002F02  20                 	db	32
   475   002F03  20                 	db	32
   476   002F04  20                 	db	32
   477   002F05  20                 	db	32
   478   002F06  20                 	db	32
   479   002F07  20                 	db	32
   480   002F08  20                 	db	32
   481   002F09  20                 	db	32
   482   002F0A  20                 	db	32
   483   002F0B  20                 	db	32
   484   002F0C  20                 	db	32
   485   002F0D  20                 	db	32
   486   002F0E  20                 	db	32
   487   002F0F  20                 	db	32
   488   002F10  20                 	db	32
   489   002F11  00                 	db	0
   490   002F12                     STR_26:
   491   002F12  20                 	db	32
   492   002F13  20                 	db	32
   493   002F14  53                 	db	83	;'S'
   494   002F15  45                 	db	69	;'E'
   495   002F16  54                 	db	84	;'T'
   496   002F17  20                 	db	32
   497   002F18  54                 	db	84	;'T'
   498   002F19  49                 	db	73	;'I'
   499   002F1A  4D                 	db	77	;'M'
   500   002F1B  45                 	db	69	;'E'
   501   002F1C  20                 	db	32
   502   002F1D  20                 	db	32
   503   002F1E  20                 	db	32
   504   002F1F  20                 	db	32
   505   002F20  20                 	db	32
   506   002F21  20                 	db	32
   507   002F22  00                 	db	0
   508   002F23                     STR_31:
   509   002F23  20                 	db	32
   510   002F24  20                 	db	32
   511   002F25  53                 	db	83	;'S'
   512   002F26  55                 	db	85	;'U'
   513   002F27  43                 	db	67	;'C'
   514   002F28  43                 	db	67	;'C'
   515   002F29  45                 	db	69	;'E'
   516   002F2A  53                 	db	83	;'S'
   517   002F2B  53                 	db	83	;'S'
   518   002F2C  46                 	db	70	;'F'
   519   002F2D  55                 	db	85	;'U'
   520   002F2E  4C                 	db	76	;'L'
   521   002F2F  4C                 	db	76	;'L'
   522   002F30  20                 	db	32
   523   002F31  20                 	db	32
   524   002F32  20                 	db	32
   525   002F33  00                 	db	0
   526   002F34                     STR_27:
   527   002F34  20                 	db	32
   528   002F35  20                 	db	32
   529   002F36  20                 	db	32
   530   002F37  53                 	db	83	;'S'
   531   002F38  55                 	db	85	;'U'
   532   002F39  43                 	db	67	;'C'
   533   002F3A  43                 	db	67	;'C'
   534   002F3B  45                 	db	69	;'E'
   535   002F3C  53                 	db	83	;'S'
   536   002F3D  53                 	db	83	;'S'
   537   002F3E  46                 	db	70	;'F'
   538   002F3F  55                 	db	85	;'U'
   539   002F40  4C                 	db	76	;'L'
   540   002F41  4C                 	db	76	;'L'
   541   002F42  20                 	db	32
   542   002F43  20                 	db	32
   543   002F44  00                 	db	0
   544   002F45                     STR_7:
   545   002F45  20                 	db	32
   546   002F46  57                 	db	87	;'W'
   547   002F47  52                 	db	82	;'R'
   548   002F48  4F                 	db	79	;'O'
   549   002F49  4E                 	db	78	;'N'
   550   002F4A  47                 	db	71	;'G'
   551   002F4B  20                 	db	32
   552   002F4C  50                 	db	80	;'P'
   553   002F4D  41                 	db	65	;'A'
   554   002F4E  53                 	db	83	;'S'
   555   002F4F  53                 	db	83	;'S'
   556   002F50  57                 	db	87	;'W'
   557   002F51  4F                 	db	79	;'O'
   558   002F52  52                 	db	82	;'R'
   559   002F53  44                 	db	68	;'D'
   560   002F54  20                 	db	32
   561   002F55  00                 	db	0
   562   002F56                     STR_6:
   563   002F56  20                 	db	32
   564   002F57  45                 	db	69	;'E'
   565   002F58  4E                 	db	78	;'N'
   566   002F59  54                 	db	84	;'T'
   567   002F5A  45                 	db	69	;'E'
   568   002F5B  52                 	db	82	;'R'
   569   002F5C  20                 	db	32
   570   002F5D  50                 	db	80	;'P'
   571   002F5E  41                 	db	65	;'A'
   572   002F5F  53                 	db	83	;'S'
   573   002F60  53                 	db	83	;'S'
   574   002F61  57                 	db	87	;'W'
   575   002F62  4F                 	db	79	;'O'
   576   002F63  52                 	db	82	;'R'
   577   002F64  44                 	db	68	;'D'
   578   002F65  20                 	db	32
   579   002F66  00                 	db	0
   580   002F67                     STR_30:
   581   002F67  50                 	db	80	;'P'
   582   002F68  41                 	db	65	;'A'
   583   002F69  53                 	db	83	;'S'
   584   002F6A  53                 	db	83	;'S'
   585   002F6B  57                 	db	87	;'W'
   586   002F6C  4F                 	db	79	;'O'
   587   002F6D  52                 	db	82	;'R'
   588   002F6E  44                 	db	68	;'D'
   589   002F6F  20                 	db	32
   590   002F70  43                 	db	67	;'C'
   591   002F71  48                 	db	72	;'H'
   592   002F72  41                 	db	65	;'A'
   593   002F73  4E                 	db	78	;'N'
   594   002F74  47                 	db	71	;'G'
   595   002F75  45                 	db	69	;'E'
   596   002F76  20                 	db	32
   597   002F77  00                 	db	0
   598   002F78                     STR_18:
   599   002F78  43                 	db	67	;'C'
   600   002F79  4C                 	db	76	;'L'
   601   002F7A  45                 	db	69	;'E'
   602   002F7B  41                 	db	65	;'A'
   603   002F7C  52                 	db	82	;'R'
   604   002F7D  20                 	db	32
   605   002F7E  4C                 	db	76	;'L'
   606   002F7F  4F                 	db	79	;'O'
   607   002F80  47                 	db	71	;'G'
   608   002F81  20                 	db	32
   609   002F82  20                 	db	32
   610   002F83  2E                 	db	46
   611   002F84  2E                 	db	46
   612   002F85  2E                 	db	46
   613   002F86  2E                 	db	46
   614   002F87  2E                 	db	46
   615   002F88  00                 	db	0
   616   002F89                     STR_17:
   617   002F89  76                 	db	118	;'v'
   618   002F8A  69                 	db	105	;'i'
   619   002F8B  65                 	db	101	;'e'
   620   002F8C  77                 	db	119	;'w'
   621   002F8D  20                 	db	32
   622   002F8E  6C                 	db	108	;'l'
   623   002F8F  6F                 	db	111	;'o'
   624   002F90  67                 	db	103	;'g'
   625   002F91  2E                 	db	46
   626   002F92  2E                 	db	46
   627   002F93  2E                 	db	46
   628   002F94  3E                 	db	62	;'>'
   629   002F95  3E                 	db	62	;'>'
   630   002F96  3E                 	db	62	;'>'
   631   002F97  3E                 	db	62	;'>'
   632   002F98  3E                 	db	62	;'>'
   633   002F99  00                 	db	0
   634   002F9A                     STR_9:
   635   002F9A  59                 	db	89	;'Y'
   636   002F9B  4F                 	db	79	;'O'
   637   002F9C  55                 	db	85	;'U'
   638   002F9D  20                 	db	32
   639   002F9E  41                 	db	65	;'A'
   640   002F9F  52                 	db	82	;'R'
   641   002FA0  45                 	db	69	;'E'
   642   002FA1  20                 	db	32
   643   002FA2  42                 	db	66	;'B'
   644   002FA3  4C                 	db	76	;'L'
   645   002FA4  4F                 	db	79	;'O'
   646   002FA5  43                 	db	67	;'C'
   647   002FA6  4B                 	db	75	;'K'
   648   002FA7  45                 	db	69	;'E'
   649   002FA8  44                 	db	68	;'D'
   650   002FA9  3E                 	db	62	;'>'
   651   002FAA  00                 	db	0
   652   002FAB                     STR_25:
   653   002FAB  54                 	db	84	;'T'
   654   002FAC  49                 	db	73	;'I'
   655   002FAD  4D                 	db	77	;'M'
   656   002FAE  45                 	db	69	;'E'
   657   002FAF  20                 	db	32
   658   002FB0  28                 	db	40
   659   002FB1  48                 	db	72	;'H'
   660   002FB2  48                 	db	72	;'H'
   661   002FB3  3A                 	db	58	;':'
   662   002FB4  4D                 	db	77	;'M'
   663   002FB5  4D                 	db	77	;'M'
   664   002FB6  3A                 	db	58	;':'
   665   002FB7  53                 	db	83	;'S'
   666   002FB8  53                 	db	83	;'S'
   667   002FB9  29                 	db	41
   668   002FBA  00                 	db	0
   669   002FBB                     STR_33:
   670   002FBB  20                 	db	32
   671   002FBC  20                 	db	32
   672   002FBD  46                 	db	70	;'F'
   673   002FBE  41                 	db	65	;'A'
   674   002FBF  49                 	db	73	;'I'
   675   002FC0  4C                 	db	76	;'L'
   676   002FC1  55                 	db	85	;'U'
   677   002FC2  52                 	db	82	;'R'
   678   002FC3  45                 	db	69	;'E'
   679   002FC4  20                 	db	32
   680   002FC5  20                 	db	32
   681   002FC6  20                 	db	32
   682   002FC7  00                 	db	0
   683   002FC8                     STR_8:
   684   002FC8  41                 	db	65	;'A'
   685   002FC9  54                 	db	84	;'T'
   686   002FCA  54                 	db	84	;'T'
   687   002FCB  45                 	db	69	;'E'
   688   002FCC  4D                 	db	77	;'M'
   689   002FCD  50                 	db	80	;'P'
   690   002FCE  54                 	db	84	;'T'
   691   002FCF  20                 	db	32
   692   002FD0  4C                 	db	76	;'L'
   693   002FD1  45                 	db	69	;'E'
   694   002FD2  46                 	db	70	;'F'
   695   002FD3  54                 	db	84	;'T'
   696   002FD4  00                 	db	0
   697   002FD5                     STR_2:
   698   002FD5  20                 	db	32
   699   002FD6  54                 	db	84	;'T'
   700   002FD7  49                 	db	73	;'I'
   701   002FD8  4D                 	db	77	;'M'
   702   002FD9  45                 	db	69	;'E'
   703   002FDA  20                 	db	32
   704   002FDB  20                 	db	32
   705   002FDC  20                 	db	32
   706   002FDD  20                 	db	32
   707   002FDE  00                 	db	0
   708   002FDF                     STR_10:
   709   002FDF  57                 	db	87	;'W'
   710   002FE0  41                 	db	65	;'A'
   711   002FE1  49                 	db	73	;'I'
   712   002FE2  54                 	db	84	;'T'
   713   002FE3  2D                 	db	45
   714   002FE4  2D                 	db	45
   715   002FE5  3E                 	db	62	;'>'
   716   002FE6  20                 	db	32
   717   002FE7  00                 	db	0
   718   002FE8                     STR_11:
   719   002FE8  20                 	db	32
   720   002FE9  73                 	db	115	;'s'
   721   002FEA  65                 	db	101	;'e'
   722   002FEB  63                 	db	99	;'c'
   723   002FEC  20                 	db	32
   724   002FED  00                 	db	0
   725   002FEE                     STR_1:
   726   002FEE  4F                 	db	79	;'O'
   727   002FEF  4E                 	db	78	;'N'
   728   002FF0  20                 	db	32
   729   002FF1  20                 	db	32
   730   002FF2  00                 	db	0
   731   002FF3                     STR_3:
   732   002FF3  45                 	db	69	;'E'
   733   002FF4  56                 	db	86	;'V'
   734   002FF5  20                 	db	32
   735   002FF6  20                 	db	32
   736   002FF7  00                 	db	0
   737   002FF8                     STR_4:
   738   002FF8  53                 	db	83	;'S'
   739   002FF9  50                 	db	80	;'P'
   740   002FFA  20                 	db	32
   741   002FFB  00                 	db	0
   742   002FFC                     STR_13:
   743   002FFC  2A                 	db	42
   744   002FFD  20                 	db	32
   745   002FFE  00                 	db	0
   746   002FFF  00                 	db	0	; dummy byte at the end
   747   000000                     
   748                           ; #config settings
   749                           
   750                           	psect	cinit
   751   00268C                     __pcinit:
   752                           	callstack 0
   753   00268C                     start_initialization:
   754                           	callstack 0
   755   00268C                     __initialization:
   756                           	callstack 0
   757                           
   758                           ; Initialize objects allocated to BANK1 (48 bytes)
   759                           ; load TBLPTR registers with __pidataBANK1
   760   00268C  0EA2               	movlw	low __pidataBANK1
   761   00268E  6EF6               	movwf	tblptrl,c
   762   002690  0E2B               	movlw	high __pidataBANK1
   763   002692  6EF7               	movwf	tblptrh,c
   764   002694  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   765   002696  6EF8               	movwf	tblptru,c
   766   002698  EE01  F0B0         	lfsr	0,__pdataBANK1
   767   00269C  EE10 F030          	lfsr	1,48
   768   0026A0                     copy_data0:
   769   0026A0  0009               	tblrd		*+
   770   0026A2  CFF5 FFEE          	movff	tablat,postinc0
   771   0026A6  50E5               	movf	postdec1,w,c
   772   0026A8  50E1               	movf	fsr1l,w,c
   773   0026AA  E1FA               	bnz	copy_data0
   774                           
   775                           ; Initialize objects allocated to BANK0 (100 bytes)
   776                           ; load TBLPTR registers with __pidataBANK0
   777   0026AC  0E52               	movlw	low __pidataBANK0
   778   0026AE  6EF6               	movwf	tblptrl,c
   779   0026B0  0E29               	movlw	high __pidataBANK0
   780   0026B2  6EF7               	movwf	tblptrh,c
   781   0026B4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   782   0026B6  6EF8               	movwf	tblptru,c
   783   0026B8  EE00  F060         	lfsr	0,__pdataBANK0
   784   0026BC  EE10 F064          	lfsr	1,100
   785   0026C0                     copy_data1:
   786   0026C0  0009               	tblrd		*+
   787   0026C2  CFF5 FFEE          	movff	tablat,postinc0
   788   0026C6  50E5               	movf	postdec1,w,c
   789   0026C8  50E1               	movf	fsr1l,w,c
   790   0026CA  E1FA               	bnz	copy_data1
   791                           
   792                           ; Initialize objects allocated to COMRAM (3 bytes)
   793                           ; load TBLPTR registers with __pidataCOMRAM
   794   0026CC  0EDE               	movlw	low __pidataCOMRAM
   795   0026CE  6EF6               	movwf	tblptrl,c
   796   0026D0  0E2D               	movlw	high __pidataCOMRAM
   797   0026D2  6EF7               	movwf	tblptrh,c
   798   0026D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   799   0026D6  6EF8               	movwf	tblptru,c
   800   0026D8  0009               	tblrd		*+	;fetch initializer
   801   0026DA  CFF5 F05A          	movff	tablat,__pdataCOMRAM
   802   0026DE  0009               	tblrd		*+	;fetch initializer
   803   0026E0  CFF5 F05B          	movff	tablat,__pdataCOMRAM+1
   804   0026E4  0009               	tblrd		*+	;fetch initializer
   805   0026E6  CFF5 F05C          	movff	tablat,__pdataCOMRAM+2
   806                           
   807                           ; Clear objects allocated to BANK1 (23 bytes)
   808   0026EA  EE01  F0E0         	lfsr	0,__pbssBANK1
   809   0026EE  0E17               	movlw	23
   810   0026F0                     clear_0:
   811   0026F0  6AEE               	clrf	postinc0,c
   812   0026F2  06E8               	decf	wreg,f,c
   813   0026F4  E1FD               	bnz	clear_0
   814                           
   815                           ; Clear objects allocated to COMRAM (30 bytes)
   816   0026F6  EE00  F03C         	lfsr	0,__pbssCOMRAM
   817   0026FA  0E1E               	movlw	30
   818   0026FC                     clear_1:
   819   0026FC  6AEE               	clrf	postinc0,c
   820   0026FE  06E8               	decf	wreg,f,c
   821   002700  E1FD               	bnz	clear_1
   822   002702                     end_of_initialization:
   823                           	callstack 0
   824   002702                     __end_of__initialization:
   825                           	callstack 0
   826   002702  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   827   002704  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   828   002706  0E00               	movlw	low (__Lmediumconst shr (0+16))
   829   002708  6EF8               	movwf	tblptru,c
   830   00270A  0100               	movlb	0
   831   00270C  EF09  F000         	goto	_main	;jump to C main() function
   832                           
   833                           	psect	bssCOMRAM
   834   00003C                     __pbssCOMRAM:
   835                           	callstack 0
   836   00003C                     _date:
   837                           	callstack 0
   838   00003C                     	ds	11
   839   000047                     _calender_reg:
   840                           	callstack 0
   841   000047                     	ds	4
   842   00004B                     _clock_reg:
   843                           	callstack 0
   844   00004B                     	ds	3
   845   00004E                     isr@count1:
   846                           	callstack 0
   847   00004E                     	ds	2
   848   000050                     read_switches@key:
   849                           	callstack 0
   850   000050                     	ds	1
   851   000051                     _time:
   852                           	callstack 0
   853   000051                     	ds	9
   854                           
   855                           	psect	dataCOMRAM
   856   00005A                     __pdataCOMRAM:
   857                           	callstack 0
   858   00005A                     _pq:
   859                           	callstack 0
   860   00005A                     	ds	2
   861   00005C                     read_switches@once:
   862                           	callstack 0
   863   00005C                     	ds	1
   864                           
   865                           	psect	dataBANK0
   866   000060                     __pdataBANK0:
   867                           	callstack 0
   868   000060                     _menu:
   869                           	callstack 0
   870   000060                     	ds	100
   871                           
   872                           	psect	bssBANK1
   873   0001E0                     __pbssBANK1:
   874                           	callstack 0
   875   0001E0                     	ds	5
   876   0001E5                     	ds	5
   877   0001EA                     	ds	5
   878   0001EF                     main@address:
   879                           	callstack 0
   880   0001EF                     	ds	2
   881   0001F1                     _o_flag:
   882                           	callstack 0
   883   0001F1                     	ds	1
   884   0001F2                     main@password:
   885                           	callstack 0
   886   0001F2                     	ds	5
   887                           
   888                           	psect	dataBANK1
   889   0001B0                     __pdataBANK1:
   890                           	callstack 0
   891   0001B0                     main@F10708:
   892                           	callstack 0
   893   0001B0                     	ds	10
   894   0001BA                     _count:
   895                           	callstack 0
   896   0001BA                     	ds	2
   897   0001BC                     _ev:
   898                           	callstack 0
   899   0001BC                     	ds	36
   900                           
   901                           	psect	cstackBANK1
   902   000100                     __pcstackBANK1:
   903                           	callstack 0
   904   000100                     main@array:
   905                           	callstack 0
   906                           
   907                           ; 10 bytes @ 0x0
   908   000100                     	ds	10
   909   00010A                     main@c:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0xA
   913   00010A                     	ds	2
   914   00010C                     main@flag:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0xC
   918   00010C                     	ds	2
   919   00010E                     main@once1:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0xE
   923   00010E                     	ds	2
   924   000110                     main@del25:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x10
   928   000110                     	ds	2
   929   000112                     main@comeback:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x12
   933   000112                     	ds	2
   934   000114                     main@setf:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x14
   938   000114                     	ds	2
   939   000116                     main@enter_password:
   940                           	callstack 0
   941                           
   942                           ; 5 bytes @ 0x16
   943   000116                     	ds	5
   944   00011B                     main@enter_password1:
   945                           	callstack 0
   946                           
   947                           ; 5 bytes @ 0x1B
   948   00011B                     	ds	5
   949   000120                     main@h:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x20
   953   000120                     	ds	2
   954   000122                     main@h1:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x22
   958   000122                     	ds	2
   959   000124                     main@m_263:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x24
   963   000124                     	ds	2
   964   000126                     main@m1:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x26
   968   000126                     	ds	2
   969   000128                     main@s_265:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x28
   973   000128                     	ds	2
   974   00012A                     main@s1:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x2A
   978   00012A                     	ds	2
   979   00012C                     main@i:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x2C
   983   00012C                     	ds	2
   984   00012E                     _main$1250:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x2E
   988   00012E                     	ds	2
   989   000130                     main@previous_g:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x30
   993   000130                     	ds	2
   994   000132                     main@q:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x32
   998   000132                     	ds	2
   999   000134                     main@del:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x34
  1003   000134                     	ds	2
  1004   000136                     main@cf:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x36
  1008   000136                     	ds	2
  1009   000138                     main@del1:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x38
  1013   000138                     	ds	2
  1014   00013A                     main@del23:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x3A
  1018   00013A                     	ds	2
  1019   00013C                     main@event1:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x3C
  1023   00013C                     	ds	1
  1024   00013D                     main@event2:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x3D
  1028   00013D                     	ds	1
  1029   00013E                     main@event3:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x3E
  1033   00013E                     	ds	1
  1034   00013F                     main@event4:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x3F
  1038   00013F                     	ds	1
  1039   000140                     main@event5:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x40
  1043   000140                     	ds	1
  1044   000141                     main@event6:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x41
  1048   000141                     	ds	1
  1049   000142                     main@event7:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x42
  1053   000142                     	ds	1
  1054   000143                     main@event8:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x43
  1058   000143                     	ds	1
  1059   000144                     main@event9:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x44
  1063   000144                     	ds	1
  1064   000145                     main@event10:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x45
  1068   000145                     	ds	1
  1069   000146                     main@eevent1:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x46
  1073   000146                     	ds	1
  1074   000147                     main@eevent2:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x47
  1078   000147                     	ds	1
  1079   000148                     main@eevent3:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x48
  1083   000148                     	ds	1
  1084   000149                     main@eevent4:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x49
  1088   000149                     	ds	1
  1089   00014A                     main@eevent5:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x4A
  1093   00014A                     	ds	1
  1094   00014B                     main@eevent6:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x4B
  1098   00014B                     	ds	1
  1099   00014C                     main@eevent7:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x4C
  1103   00014C                     	ds	1
  1104   00014D                     main@eevent8:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x4D
  1108   00014D                     	ds	1
  1109   00014E                     main@eevent9:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x4E
  1113   00014E                     	ds	1
  1114   00014F                     main@eevent10:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x4F
  1118   00014F                     	ds	1
  1119   000150                     main@enter_password2:
  1120                           	callstack 0
  1121                           
  1122                           ; 5 bytes @ 0x50
  1123   000150                     	ds	5
  1124   000155                     main@once:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x55
  1128   000155                     	ds	2
  1129   000157                     main@del24:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x57
  1133   000157                     	ds	2
  1134   000159                     main@settime:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x59
  1138   000159                     	ds	2
  1139   00015B                     main@prekey:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x5B
  1143   00015B                     	ds	2
  1144   00015D                     main@prekey2:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x5D
  1148   00015D                     	ds	2
  1149   00015F                     main@hour:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x5F
  1153   00015F                     	ds	2
  1154   000161                     main@minutes:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x61
  1158   000161                     	ds	2
  1159   000163                     main@seconds:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x63
  1163   000163                     	ds	2
  1164   000165                     main@bsw:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x65
  1168   000165                     	ds	2
  1169   000167                     main@de:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x67
  1173   000167                     	ds	4
  1174   00016B                     main@attempt:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x6B
  1178   00016B                     	ds	2
  1179   00016D                     main@key2:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x6D
  1183   00016D                     	ds	2
  1184   00016F                     main@ad:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x6F
  1188   00016F                     	ds	2
  1189   000171                     main@ad_206:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x71
  1193   000171                     	ds	2
  1194   000173                     main@ad_239:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x73
  1198   000173                     	ds	2
  1199   000175                     main@ad_244:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x75
  1203   000175                     	ds	2
  1204   000177                     main@mode:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x77
  1208   000177                     	ds	2
  1209   000179                     main@time1:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x79
  1213   000179                     	ds	2
  1214   00017B                     main@time2:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x7B
  1218   00017B                     	ds	2
  1219   00017D                     main@time23:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x7D
  1223   00017D                     	ds	2
  1224   00017F                     main@key1:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x7F
  1228   00017F                     	ds	2
  1229   000181                     main@key3:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x81
  1233   000181                     	ds	2
  1234   000183                     main@pq1:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x83
  1238   000183                     	ds	2
  1239   000185                     main@delay1234:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x85
  1243   000185                     	ds	2
  1244   000187                     main@arr:
  1245                           	callstack 0
  1246                           
  1247                           ; 10 bytes @ 0x87
  1248   000187                     	ds	10
  1249   000191                     main@m:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x91
  1253   000191                     	ds	2
  1254   000193                     main@sflag:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x93
  1258   000193                     	ds	2
  1259   000195                     main@hour12:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x95
  1263   000195                     	ds	2
  1264   000197                     main@minutes12:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x97
  1268   000197                     	ds	2
  1269   000199                     main@seconds12:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x99
  1273   000199                     	ds	2
  1274   00019B                     main@p:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x9B
  1278   00019B                     	ds	2
  1279   00019D                     main@p1:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x9D
  1283   00019D                     	ds	2
  1284   00019F                     main@p2:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x9F
  1288   00019F                     	ds	2
  1289   0001A1                     main@adc_reg_val:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0xA1
  1293   0001A1                     	ds	2
  1294   0001A3                     main@x2:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0xA3
  1298   0001A3                     	ds	2
  1299   0001A5                     main@g:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0xA5
  1303   0001A5                     	ds	2
  1304   0001A7                     main@s:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0xA7
  1308   0001A7                     	ds	2
  1309   0001A9                     main@a:
  1310                           	callstack 0
  1311                           
  1312                           ; 1 bytes @ 0xA9
  1313   0001A9                     	ds	1
  1314   0001AA                     main@d:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0xAA
  1318   0001AA                     	ds	2
  1319   0001AC                     main@key:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0xAC
  1323   0001AC                     	ds	2
  1324   0001AE                     main@scv:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0xAE
  1328   0001AE                     	ds	2
  1329                           
  1330                           	psect	cstackCOMRAM
  1331   000001                     __pcstackCOMRAM:
  1332                           	callstack 0
  1333   000001                     ?_read_adc:
  1334                           	callstack 0
  1335   000001                     ?_strcmp:
  1336                           	callstack 0
  1337   000001                     ?___wmul:
  1338                           	callstack 0
  1339   000001                     ?___awdiv:
  1340                           	callstack 0
  1341   000001                     ?___lwdiv:
  1342                           	callstack 0
  1343   000001                     ?___lwmod:
  1344                           	callstack 0
  1345   000001                     clcd_write@control_bit:
  1346                           	callstack 0
  1347   000001                     read_switches@detection_type:
  1348                           	callstack 0
  1349   000001                     write_internal_eeprom@data:
  1350                           	callstack 0
  1351   000001                     read_internal_eeprom@address:
  1352                           	callstack 0
  1353   000001                     putch@byte:
  1354                           	callstack 0
  1355   000001                     i2c_write@data:
  1356                           	callstack 0
  1357   000001                     ___wmul@multiplier:
  1358                           	callstack 0
  1359   000001                     ___awdiv@dividend:
  1360                           	callstack 0
  1361   000001                     ___lwdiv@dividend:
  1362                           	callstack 0
  1363   000001                     ___lwmod@dividend:
  1364                           	callstack 0
  1365   000001                     strcmp@l:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x0
  1369   000001                     	ds	1
  1370   000002                     clcd_write@byte:
  1371                           	callstack 0
  1372   000002                     write_internal_eeprom@address:
  1373                           	callstack 0
  1374   000002                     read_ds1307@address:
  1375                           	callstack 0
  1376   000002                     write_ext_eeprom@data:
  1377                           	callstack 0
  1378   000002                     read_ext_eeprom@address:
  1379                           	callstack 0
  1380   000002                     puts@s:
  1381                           	callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x1
  1384   000002                     	ds	1
  1385   000003                     ??_init_clcd:
  1386   000003                     ??_read_adc:
  1387   000003                     read_ds1307@data:
  1388                           	callstack 0
  1389   000003                     read_ext_eeprom@data:
  1390                           	callstack 0
  1391   000003                     write_ext_eeprom@i:
  1392                           	callstack 0
  1393   000003                     ___wmul@multiplicand:
  1394                           	callstack 0
  1395   000003                     ___awdiv@divisor:
  1396                           	callstack 0
  1397   000003                     ___lwdiv@divisor:
  1398                           	callstack 0
  1399   000003                     ___lwmod@divisor:
  1400                           	callstack 0
  1401   000003                     strcmp@r:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x2
  1405   000003                     	ds	1
  1406   000004                     
  1407                           ; 1 bytes @ 0x3
  1408   000004                     	ds	1
  1409   000005                     ??_strcmp:
  1410   000005                     write_ext_eeprom@address:
  1411                           	callstack 0
  1412   000005                     ___awdiv@counter:
  1413                           	callstack 0
  1414   000005                     ___lwmod@counter:
  1415                           	callstack 0
  1416   000005                     read_adc@reg_val:
  1417                           	callstack 0
  1418   000005                     ___wmul@product:
  1419                           	callstack 0
  1420   000005                     ___lwdiv@quotient:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x4
  1424   000005                     	ds	1
  1425   000006                     ___awdiv@sign:
  1426                           	callstack 0
  1427                           
  1428                           ; 1 bytes @ 0x5
  1429   000006                     	ds	1
  1430   000007                     read_adc@channel:
  1431                           	callstack 0
  1432   000007                     ___lwdiv@counter:
  1433                           	callstack 0
  1434   000007                     clcd_print@data:
  1435                           	callstack 0
  1436   000007                     ___awdiv@quotient:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x6
  1440   000007                     	ds	1
  1441   000008                     ?___xxtofl:
  1442                           	callstack 0
  1443   000008                     ___xxtofl@val:
  1444                           	callstack 0
  1445                           
  1446                           ; 4 bytes @ 0x7
  1447   000008                     	ds	1
  1448   000009                     ?___awmod:
  1449                           	callstack 0
  1450   000009                     clcd_print@addr:
  1451                           	callstack 0
  1452   000009                     ___awmod@dividend:
  1453                           	callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x8
  1456   000009                     	ds	1
  1457   00000A                     
  1458                           ; 1 bytes @ 0x9
  1459   00000A                     	ds	1
  1460   00000B                     ___awmod@divisor:
  1461                           	callstack 0
  1462                           
  1463                           ; 2 bytes @ 0xA
  1464   00000B                     	ds	1
  1465   00000C                     ??___xxtofl:
  1466                           
  1467                           ; 1 bytes @ 0xB
  1468   00000C                     	ds	1
  1469   00000D                     ___awmod@counter:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0xC
  1473   00000D                     	ds	1
  1474   00000E                     ___awmod@sign:
  1475                           	callstack 0
  1476                           
  1477                           ; 1 bytes @ 0xD
  1478   00000E                     	ds	1
  1479   00000F                     clcd_putch@addr:
  1480                           	callstack 0
  1481   00000F                     write_ds1307@data:
  1482                           	callstack 0
  1483                           
  1484                           ; 1 bytes @ 0xE
  1485   00000F                     	ds	1
  1486   000010                     clcd_putch@data:
  1487                           	callstack 0
  1488   000010                     write_ds1307@address:
  1489                           	callstack 0
  1490   000010                     ___xxtofl@sign:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0xF
  1494   000010                     	ds	1
  1495   000011                     init_ds1307@dummy:
  1496                           	callstack 0
  1497   000011                     ___xxtofl@exp:
  1498                           	callstack 0
  1499                           
  1500                           ; 1 bytes @ 0x10
  1501   000011                     	ds	1
  1502   000012                     ___xxtofl@arg:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x11
  1506   000012                     	ds	4
  1507   000016                     ?___fldiv:
  1508                           	callstack 0
  1509   000016                     ___fldiv@b:
  1510                           	callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x15
  1513   000016                     	ds	4
  1514   00001A                     ___fldiv@a:
  1515                           	callstack 0
  1516                           
  1517                           ; 4 bytes @ 0x19
  1518   00001A                     	ds	4
  1519   00001E                     ??___fldiv:
  1520                           
  1521                           ; 1 bytes @ 0x1D
  1522   00001E                     	ds	4
  1523   000022                     ___fldiv@rem:
  1524                           	callstack 0
  1525                           
  1526                           ; 4 bytes @ 0x21
  1527   000022                     	ds	4
  1528   000026                     ___fldiv@sign:
  1529                           	callstack 0
  1530                           
  1531                           ; 1 bytes @ 0x25
  1532   000026                     	ds	1
  1533   000027                     ___fldiv@new_exp:
  1534                           	callstack 0
  1535                           
  1536                           ; 2 bytes @ 0x26
  1537   000027                     	ds	2
  1538   000029                     ___fldiv@grs:
  1539                           	callstack 0
  1540                           
  1541                           ; 4 bytes @ 0x28
  1542   000029                     	ds	4
  1543   00002D                     ___fldiv@bexp:
  1544                           	callstack 0
  1545                           
  1546                           ; 1 bytes @ 0x2C
  1547   00002D                     	ds	1
  1548   00002E                     ___fldiv@aexp:
  1549                           	callstack 0
  1550                           
  1551                           ; 1 bytes @ 0x2D
  1552   00002E                     	ds	1
  1553   00002F                     ?___fltol:
  1554                           	callstack 0
  1555   00002F                     ___fltol@f1:
  1556                           	callstack 0
  1557                           
  1558                           ; 4 bytes @ 0x2E
  1559   00002F                     	ds	4
  1560   000033                     ??___fltol:
  1561                           
  1562                           ; 1 bytes @ 0x32
  1563   000033                     	ds	4
  1564   000037                     ___fltol@sign1:
  1565                           	callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x36
  1568   000037                     	ds	1
  1569   000038                     ___fltol@exp1:
  1570                           	callstack 0
  1571                           
  1572                           ; 1 bytes @ 0x37
  1573   000038                     	ds	1
  1574   000039                     ??_main:
  1575                           
  1576                           ; 1 bytes @ 0x38
  1577   000039                     	ds	3
  1578                           
  1579 ;;
  1580 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1581 ;;
  1582 ;; *************** function _main *****************
  1583 ;; Defined at:
  1584 ;;		line 78 in file "main.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  i               2   44[BANK1 ] int 
  1589 ;;  eevent10        1   79[BANK1 ] unsigned char 
  1590 ;;  eevent9         1   78[BANK1 ] unsigned char 
  1591 ;;  eevent8         1   77[BANK1 ] unsigned char 
  1592 ;;  eevent7         1   76[BANK1 ] unsigned char 
  1593 ;;  eevent6         1   75[BANK1 ] unsigned char 
  1594 ;;  eevent5         1   74[BANK1 ] unsigned char 
  1595 ;;  eevent4         1   73[BANK1 ] unsigned char 
  1596 ;;  eevent3         1   72[BANK1 ] unsigned char 
  1597 ;;  eevent2         1   71[BANK1 ] unsigned char 
  1598 ;;  eevent1         1   70[BANK1 ] unsigned char 
  1599 ;;  ad              2  117[BANK1 ] int 
  1600 ;;  ad              2  115[BANK1 ] int 
  1601 ;;  key3            2  129[BANK1 ] unsigned int 
  1602 ;;  seconds         2   99[BANK1 ] int 
  1603 ;;  minutes         2   97[BANK1 ] int 
  1604 ;;  hour            2   95[BANK1 ] int 
  1605 ;;  s1              2   42[BANK1 ] int 
  1606 ;;  s               2   40[BANK1 ] int 
  1607 ;;  m1              2   38[BANK1 ] int 
  1608 ;;  m               2   36[BANK1 ] int 
  1609 ;;  h1              2   34[BANK1 ] int 
  1610 ;;  h               2   32[BANK1 ] int 
  1611 ;;  s               2  167[BANK1 ] int 
  1612 ;;  key2            2  109[BANK1 ] unsigned int 
  1613 ;;  a               1  169[BANK1 ] unsigned char 
  1614 ;;  event10         1   69[BANK1 ] unsigned char 
  1615 ;;  event9          1   68[BANK1 ] unsigned char 
  1616 ;;  event8          1   67[BANK1 ] unsigned char 
  1617 ;;  event7          1   66[BANK1 ] unsigned char 
  1618 ;;  event6          1   65[BANK1 ] unsigned char 
  1619 ;;  event5          1   64[BANK1 ] unsigned char 
  1620 ;;  event4          1   63[BANK1 ] unsigned char 
  1621 ;;  event3          1   62[BANK1 ] unsigned char 
  1622 ;;  event2          1   61[BANK1 ] unsigned char 
  1623 ;;  event1          1   60[BANK1 ] unsigned char 
  1624 ;;  key1            2  127[BANK1 ] unsigned int 
  1625 ;;  ad              2  113[BANK1 ] int 
  1626 ;;  key             2  172[BANK1 ] unsigned int 
  1627 ;;  ad              2  111[BANK1 ] int 
  1628 ;;  arr            10  135[BANK1 ] unsigned char [10]
  1629 ;;  array          10    0[BANK1 ] unsigned char [10]
  1630 ;;  enter_passwo    5   80[BANK1 ] unsigned char [5]
  1631 ;;  enter_passwo    5   27[BANK1 ] unsigned char [5]
  1632 ;;  enter_passwo    5   22[BANK1 ] unsigned char [5]
  1633 ;;  de              4  103[BANK1 ] unsigned long 
  1634 ;;  scv             2  174[BANK1 ] int 
  1635 ;;  d               2  170[BANK1 ] int 
  1636 ;;  g               2  165[BANK1 ] int 
  1637 ;;  x2              2  163[BANK1 ] int 
  1638 ;;  adc_reg_val     2  161[BANK1 ] unsigned short 
  1639 ;;  p2              2  159[BANK1 ] int 
  1640 ;;  p1              2  157[BANK1 ] int 
  1641 ;;  p               2  155[BANK1 ] int 
  1642 ;;  seconds12       2  153[BANK1 ] int 
  1643 ;;  minutes12       2  151[BANK1 ] int 
  1644 ;;  hour12          2  149[BANK1 ] int 
  1645 ;;  sflag           2  147[BANK1 ] int 
  1646 ;;  m               2  145[BANK1 ] int 
  1647 ;;  delay1234       2  133[BANK1 ] int 
  1648 ;;  pq1             2  131[BANK1 ] int 
  1649 ;;  time23          2  125[BANK1 ] unsigned int 
  1650 ;;  time2           2  123[BANK1 ] int 
  1651 ;;  time1           2  121[BANK1 ] int 
  1652 ;;  mode            2  119[BANK1 ] unsigned int 
  1653 ;;  attempt         2  107[BANK1 ] int 
  1654 ;;  bsw             2  101[BANK1 ] int 
  1655 ;;  prekey2         2   93[BANK1 ] int 
  1656 ;;  prekey          2   91[BANK1 ] int 
  1657 ;;  settime         2   89[BANK1 ] int 
  1658 ;;  del24           2   87[BANK1 ] unsigned int 
  1659 ;;  once            2   85[BANK1 ] int 
  1660 ;;  del23           2   58[BANK1 ] unsigned int 
  1661 ;;  del1            2   56[BANK1 ] int 
  1662 ;;  cf              2   54[BANK1 ] int 
  1663 ;;  del             2   52[BANK1 ] unsigned int 
  1664 ;;  q               2   50[BANK1 ] int 
  1665 ;;  previous_g      2   48[BANK1 ] int 
  1666 ;;  setf            2   20[BANK1 ] int 
  1667 ;;  comeback        2   18[BANK1 ] unsigned int 
  1668 ;;  del25           2   16[BANK1 ] int 
  1669 ;;  once1           2   14[BANK1 ] int 
  1670 ;;  flag            2   12[BANK1 ] int 
  1671 ;;  c               2   10[BANK1 ] int 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1681 ;;      Params:         0       0       0       0       0       0       0
  1682 ;;      Locals:         0       0     176       0       0       0       0
  1683 ;;      Temps:          3       0       0       0       0       0       0
  1684 ;;      Totals:         3       0     176       0       0       0       0
  1685 ;;Total ram usage:      179 bytes
  1686 ;; Hardware stack levels required when called: 7
  1687 ;; This function calls:
  1688 ;;		___awdiv
  1689 ;;		___awmod
  1690 ;;		___fldiv
  1691 ;;		___fltol
  1692 ;;		___lwdiv
  1693 ;;		___lwmod
  1694 ;;		___wmul
  1695 ;;		___xxtofl
  1696 ;;		_clcd_print
  1697 ;;		_clcd_putch
  1698 ;;		_clcd_write
  1699 ;;		_display_time
  1700 ;;		_get_time
  1701 ;;		_init_config
  1702 ;;		_init_uart
  1703 ;;		_putch
  1704 ;;		_puts
  1705 ;;		_read_adc
  1706 ;;		_read_ds1307
  1707 ;;		_read_ext_eeprom
  1708 ;;		_read_internal_eeprom
  1709 ;;		_read_switches
  1710 ;;		_strcmp
  1711 ;;		_write_ds1307
  1712 ;;		_write_ext_eeprom
  1713 ;;		_write_internal_eeprom
  1714 ;; This function is called by:
  1715 ;;		Startup code after reset
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text0
  1720   000012                     __ptext0:
  1721                           	callstack 0
  1722   000012                     _main:
  1723                           	callstack 24
  1724   000012                     
  1725                           ;main.c: 79:     init_config();
  1726   000012  EC72  F016         	call	_init_config	;wreg free
  1727   000016                     
  1728                           ;main.c: 80:     unsigned int mode = 1;
  1729   000016  0E00               	movlw	0
  1730   000018  0101               	movlb	1	; () banked
  1731   00001A  6F78               	movwf	(main@mode+1)& (0+255),b
  1732   00001C  0E01               	movlw	1
  1733   00001E  6F77               	movwf	main@mode& (0+255),b
  1734   000020                     
  1735                           ; BSR set to: 1
  1736                           ;main.c: 81:     char array[10] = "WELCOME";
  1737   000020  EE21  F0B0         	lfsr	2,main@F10708
  1738   000024  EE11  F000         	lfsr	1,main@array
  1739   000028  0E09               	movlw	9
  1740   00002A                     u2821:
  1741   00002A  CFDB FFE3          	movff	plusw2,plusw1
  1742   00002E  06E8               	decf	wreg,f,c
  1743   000030  E2FC               	bc	u2821
  1744   000032                     
  1745                           ; BSR set to: 1
  1746                           ;main.c: 82:     clcd_print(array, (0x80 + (5)));
  1747   000032  0E00               	movlw	low main@array
  1748   000034  6E07               	movwf	clcd_print@data^0,c
  1749   000036  0E01               	movlw	high main@array
  1750   000038  6E08               	movwf	(clcd_print@data+1)^0,c
  1751   00003A  0E85               	movlw	133
  1752   00003C  6E09               	movwf	clcd_print@addr^0,c
  1753   00003E  EC73  F014         	call	_clcd_print	;wreg free
  1754   000042                     
  1755                           ;main.c: 83:     unsigned long int de = 0;
  1756   000042  0E00               	movlw	0
  1757   000044  0101               	movlb	1	; () banked
  1758   000046  6F67               	movwf	main@de& (0+255),b
  1759   000048  0E00               	movlw	0
  1760   00004A  6F68               	movwf	(main@de+1)& (0+255),b
  1761   00004C  0E00               	movlw	0
  1762   00004E  6F69               	movwf	(main@de+2)& (0+255),b
  1763   000050  0E00               	movlw	0
  1764   000052  6F6A               	movwf	(main@de+3)& (0+255),b
  1765   000054                     
  1766                           ; BSR set to: 1
  1767                           ;main.c: 84:     unsigned int comeback = 0;
  1768   000054  0E00               	movlw	0
  1769   000056  6F13               	movwf	(main@comeback+1)& (0+255),b
  1770   000058  0E00               	movlw	0
  1771   00005A  6F12               	movwf	main@comeback& (0+255),b
  1772   00005C                     
  1773                           ; BSR set to: 1
  1774                           ;main.c: 86:     for (de = 0; de < 100000; de++);
  1775   00005C  0E00               	movlw	0
  1776   00005E  6F67               	movwf	main@de& (0+255),b
  1777   000060  0E00               	movlw	0
  1778   000062  6F68               	movwf	(main@de+1)& (0+255),b
  1779   000064  0E00               	movlw	0
  1780   000066  6F69               	movwf	(main@de+2)& (0+255),b
  1781   000068  0E00               	movlw	0
  1782   00006A  6F6A               	movwf	(main@de+3)& (0+255),b
  1783   00006C                     
  1784                           ; BSR set to: 1
  1785   00006C  516A               	movf	(main@de+3)& (0+255),w,b
  1786   00006E  E10D               	bnz	u2830
  1787   000070  0EA0               	movlw	160
  1788   000072  5D67               	subwf	main@de& (0+255),w,b
  1789   000074  0E86               	movlw	134
  1790   000076  5968               	subwfb	(main@de+1)& (0+255),w,b
  1791   000078  0E01               	movlw	1
  1792   00007A  5969               	subwfb	(main@de+2)& (0+255),w,b
  1793   00007C  A0D8               	btfss	status,0,c
  1794   00007E  EF43  F000         	goto	u2831
  1795   000082  EF45  F000         	goto	u2830
  1796   000086                     u2831:
  1797   000086  EF47  F000         	goto	l3686
  1798   00008A                     u2830:
  1799   00008A  EF5C  F000         	goto	l3688
  1800   00008E                     l3686:
  1801                           
  1802                           ; BSR set to: 1
  1803   00008E  0E01               	movlw	1
  1804   000090  2767               	addwf	main@de& (0+255),f,b
  1805   000092  0E00               	movlw	0
  1806   000094  2368               	addwfc	(main@de+1)& (0+255),f,b
  1807   000096  2369               	addwfc	(main@de+2)& (0+255),f,b
  1808   000098  236A               	addwfc	(main@de+3)& (0+255),f,b
  1809   00009A  516A               	movf	(main@de+3)& (0+255),w,b
  1810   00009C  E10D               	bnz	u2840
  1811   00009E  0EA0               	movlw	160
  1812   0000A0  5D67               	subwf	main@de& (0+255),w,b
  1813   0000A2  0E86               	movlw	134
  1814   0000A4  5968               	subwfb	(main@de+1)& (0+255),w,b
  1815   0000A6  0E01               	movlw	1
  1816   0000A8  5969               	subwfb	(main@de+2)& (0+255),w,b
  1817   0000AA  A0D8               	btfss	status,0,c
  1818   0000AC  EF5A  F000         	goto	u2841
  1819   0000B0  EF5C  F000         	goto	u2840
  1820   0000B4                     u2841:
  1821   0000B4  EF47  F000         	goto	l3686
  1822   0000B8                     u2840:
  1823   0000B8                     l3688:
  1824                           
  1825                           ; BSR set to: 1
  1826                           ;main.c: 87:     unsigned short adc_reg_val;;main.c: 88:     int g = 0, c = 0, previous_
      +                          g = 0;
  1827   0000B8  0E00               	movlw	0
  1828   0000BA  6FA6               	movwf	(main@g+1)& (0+255),b
  1829   0000BC  0E00               	movlw	0
  1830   0000BE  6FA5               	movwf	main@g& (0+255),b
  1831   0000C0  0E00               	movlw	0
  1832   0000C2  6F0B               	movwf	(main@c+1)& (0+255),b
  1833   0000C4  0E00               	movlw	0
  1834   0000C6  6F0A               	movwf	main@c& (0+255),b
  1835   0000C8  0E00               	movlw	0
  1836   0000CA  6F31               	movwf	(main@previous_g+1)& (0+255),b
  1837   0000CC  0E00               	movlw	0
  1838   0000CE  6F30               	movwf	main@previous_g& (0+255),b
  1839                           
  1840                           ;main.c: 89:     int flag = 2;
  1841   0000D0  0E00               	movlw	0
  1842   0000D2  6F0D               	movwf	(main@flag+1)& (0+255),b
  1843   0000D4  0E02               	movlw	2
  1844   0000D6  6F0C               	movwf	main@flag& (0+255),b
  1845   0000D8                     
  1846                           ; BSR set to: 1
  1847                           ;main.c: 90:     char arr[10];;main.c: 91:     static int address = 0x00;;main.c: 93:   
      +                            clcd_print("ON  ", (0xC0 + (9)));
  1848   0000D8  0EEE               	movlw	low STR_1
  1849   0000DA  6E07               	movwf	clcd_print@data^0,c
  1850   0000DC  0E2F               	movlw	high STR_1
  1851   0000DE  6E08               	movwf	(clcd_print@data+1)^0,c
  1852   0000E0  0EC9               	movlw	201
  1853   0000E2  6E09               	movwf	clcd_print@addr^0,c
  1854   0000E4  EC73  F014         	call	_clcd_print	;wreg free
  1855   0000E8                     
  1856                           ;main.c: 95:     static char password[5];;main.c: 104:     int pq1;;main.c: 105:     for
      +                           (pq1 = 0; pq1 < 4; pq1++) {
  1857   0000E8  0E00               	movlw	0
  1858   0000EA  0101               	movlb	1	; () banked
  1859   0000EC  6F84               	movwf	(main@pq1+1)& (0+255),b
  1860   0000EE  0E00               	movlw	0
  1861   0000F0  6F83               	movwf	main@pq1& (0+255),b
  1862   0000F2                     l3694:
  1863                           
  1864                           ; BSR set to: 1
  1865   0000F2  BF84               	btfsc	(main@pq1+1)& (0+255),7,b
  1866   0000F4  EF85  F000         	goto	u2851
  1867   0000F8  5184               	movf	(main@pq1+1)& (0+255),w,b
  1868   0000FA  E109               	bnz	u2850
  1869   0000FC  0E04               	movlw	4
  1870   0000FE  5D83               	subwf	main@pq1& (0+255),w,b
  1871   000100  A0D8               	btfss	status,0,c
  1872   000102  EF85  F000         	goto	u2851
  1873   000106  EF87  F000         	goto	u2850
  1874   00010A                     u2851:
  1875   00010A  EF89  F000         	goto	l3698
  1876   00010E                     u2850:
  1877   00010E  EF99  F000         	goto	l3704
  1878   000112                     l3698:
  1879                           
  1880                           ; BSR set to: 1
  1881                           ;main.c: 106:         password[pq1] = read_ext_eeprom(200 + pq1);
  1882   000112  0EF2               	movlw	low main@password
  1883   000114  2583               	addwf	main@pq1& (0+255),w,b
  1884   000116  6ED9               	movwf	fsr2l,c
  1885   000118  0E01               	movlw	high main@password
  1886   00011A  2184               	addwfc	(main@pq1+1)& (0+255),w,b
  1887   00011C  6EDA               	movwf	fsr2h,c
  1888   00011E  5183               	movf	main@pq1& (0+255),w,b
  1889   000120  0FC8               	addlw	200
  1890   000122  EC01  F016         	call	_read_ext_eeprom
  1891   000126  6EDF               	movwf	indf2,c
  1892   000128                     
  1893                           ;main.c: 107:     }
  1894   000128  0101               	movlb	1	; () banked
  1895   00012A  4B83               	infsnz	main@pq1& (0+255),f,b
  1896   00012C  2B84               	incf	(main@pq1+1)& (0+255),f,b
  1897   00012E  EF79  F000         	goto	l3694
  1898   000132                     l3704:
  1899                           
  1900                           ; BSR set to: 1
  1901                           ;main.c: 113:     int p = 0;
  1902   000132  0E00               	movlw	0
  1903   000134  6F9C               	movwf	(main@p+1)& (0+255),b
  1904   000136  0E00               	movlw	0
  1905   000138  6F9B               	movwf	main@p& (0+255),b
  1906   00013A                     
  1907                           ; BSR set to: 1
  1908                           ;main.c: 114:     char enter_password[5] = {0};
  1909   00013A  EE21  F016         	lfsr	2,main@enter_password
  1910   00013E  0E04               	movlw	4
  1911   000140                     u2861:
  1912   000140  6ADE               	clrf	postinc2,c
  1913   000142  06E8               	decf	wreg,f,c
  1914   000144  E2FD               	bc	u2861
  1915   000146                     
  1916                           ; BSR set to: 1
  1917                           ;main.c: 116:     int attempt = 3, q = 0;
  1918   000146  0E00               	movlw	0
  1919   000148  6F6C               	movwf	(main@attempt+1)& (0+255),b
  1920   00014A  0E03               	movlw	3
  1921   00014C  6F6B               	movwf	main@attempt& (0+255),b
  1922   00014E                     
  1923                           ; BSR set to: 1
  1924   00014E  0E00               	movlw	0
  1925   000150  6F33               	movwf	(main@q+1)& (0+255),b
  1926   000152  0E00               	movlw	0
  1927   000154  6F32               	movwf	main@q& (0+255),b
  1928   000156                     
  1929                           ; BSR set to: 1
  1930                           ;main.c: 119:     int m = 0;
  1931   000156  0E00               	movlw	0
  1932   000158  6F92               	movwf	(main@m+1)& (0+255),b
  1933   00015A  0E00               	movlw	0
  1934   00015C  6F91               	movwf	main@m& (0+255),b
  1935   00015E                     
  1936                           ; BSR set to: 1
  1937                           ;main.c: 120:     int sflag = 0;
  1938   00015E  0E00               	movlw	0
  1939   000160  6F94               	movwf	(main@sflag+1)& (0+255),b
  1940   000162  0E00               	movlw	0
  1941   000164  6F93               	movwf	main@sflag& (0+255),b
  1942   000166                     
  1943                           ; BSR set to: 1
  1944                           ;main.c: 121:     int time1 = 0;
  1945   000166  0E00               	movlw	0
  1946   000168  6F7A               	movwf	(main@time1+1)& (0+255),b
  1947   00016A  0E00               	movlw	0
  1948   00016C  6F79               	movwf	main@time1& (0+255),b
  1949   00016E                     
  1950                           ; BSR set to: 1
  1951                           ;main.c: 122:     int prekey;;main.c: 124:     int scv = 0;
  1952   00016E  0E00               	movlw	0
  1953   000170  6FAF               	movwf	(main@scv+1)& (0+255),b
  1954   000172  0E00               	movlw	0
  1955   000174  6FAE               	movwf	main@scv& (0+255),b
  1956   000176                     
  1957                           ; BSR set to: 1
  1958                           ;main.c: 125:     int time2 = 0;
  1959   000176  0E00               	movlw	0
  1960   000178  6F7C               	movwf	(main@time2+1)& (0+255),b
  1961   00017A  0E00               	movlw	0
  1962   00017C  6F7B               	movwf	main@time2& (0+255),b
  1963   00017E                     
  1964                           ; BSR set to: 1
  1965                           ;main.c: 126:     int prekey2;;main.c: 127:     unsigned int del = 0;
  1966   00017E  0E00               	movlw	0
  1967   000180  6F35               	movwf	(main@del+1)& (0+255),b
  1968   000182  0E00               	movlw	0
  1969   000184  6F34               	movwf	main@del& (0+255),b
  1970   000186                     
  1971                           ; BSR set to: 1
  1972                           ;main.c: 128:     int once = 1;
  1973   000186  0E00               	movlw	0
  1974   000188  6F56               	movwf	(main@once+1)& (0+255),b
  1975   00018A  0E01               	movlw	1
  1976   00018C  6F55               	movwf	main@once& (0+255),b
  1977   00018E                     
  1978                           ; BSR set to: 1
  1979                           ;main.c: 130:     int cf;;main.c: 131:     int d;;main.c: 132:     int once1 = 1;
  1980   00018E  0E00               	movlw	0
  1981   000190  6F0F               	movwf	(main@once1+1)& (0+255),b
  1982   000192  0E01               	movlw	1
  1983   000194  6F0E               	movwf	main@once1& (0+255),b
  1984   000196                     
  1985                           ; BSR set to: 1
  1986                           ;main.c: 133:     int del1 = 0;
  1987   000196  0E00               	movlw	0
  1988   000198  6F39               	movwf	(main@del1+1)& (0+255),b
  1989   00019A  0E00               	movlw	0
  1990   00019C  6F38               	movwf	main@del1& (0+255),b
  1991   00019E                     
  1992                           ; BSR set to: 1
  1993                           ;main.c: 135:     int p1 = 0;
  1994   00019E  0E00               	movlw	0
  1995   0001A0  6F9E               	movwf	(main@p1+1)& (0+255),b
  1996   0001A2  0E00               	movlw	0
  1997   0001A4  6F9D               	movwf	main@p1& (0+255),b
  1998   0001A6                     
  1999                           ; BSR set to: 1
  2000                           ;main.c: 136:     int p2 = 0;
  2001   0001A6  0E00               	movlw	0
  2002   0001A8  6FA0               	movwf	(main@p2+1)& (0+255),b
  2003   0001AA  0E00               	movlw	0
  2004   0001AC  6F9F               	movwf	main@p2& (0+255),b
  2005                           
  2006                           ;main.c: 137:     char enter_password1[5] = {0};
  2007   0001AE  EE21  F01B         	lfsr	2,main@enter_password1
  2008   0001B2  0E04               	movlw	4
  2009   0001B4                     u2871:
  2010   0001B4  6ADE               	clrf	postinc2,c
  2011   0001B6  06E8               	decf	wreg,f,c
  2012   0001B8  E2FD               	bc	u2871
  2013                           
  2014                           ;main.c: 138:     char enter_password2[5] = {0};
  2015   0001BA  EE21  F050         	lfsr	2,main@enter_password2
  2016   0001BE  0E04               	movlw	4
  2017   0001C0                     u2881:
  2018   0001C0  6ADE               	clrf	postinc2,c
  2019   0001C2  06E8               	decf	wreg,f,c
  2020   0001C4  E2FD               	bc	u2881
  2021   0001C6                     
  2022                           ; BSR set to: 1
  2023                           ;main.c: 139:     unsigned int del23=0;
  2024   0001C6  0E00               	movlw	0
  2025   0001C8  6F3B               	movwf	(main@del23+1)& (0+255),b
  2026   0001CA  0E00               	movlw	0
  2027   0001CC  6F3A               	movwf	main@del23& (0+255),b
  2028   0001CE                     
  2029                           ; BSR set to: 1
  2030                           ;main.c: 140:      unsigned int del24=0;
  2031   0001CE  0E00               	movlw	0
  2032   0001D0  6F58               	movwf	(main@del24+1)& (0+255),b
  2033   0001D2  0E00               	movlw	0
  2034   0001D4  6F57               	movwf	main@del24& (0+255),b
  2035   0001D6                     
  2036                           ; BSR set to: 1
  2037                           ;main.c: 142:      int x2=0;
  2038   0001D6  0E00               	movlw	0
  2039   0001D8  6FA4               	movwf	(main@x2+1)& (0+255),b
  2040   0001DA  0E00               	movlw	0
  2041   0001DC  6FA3               	movwf	main@x2& (0+255),b
  2042   0001DE                     
  2043                           ; BSR set to: 1
  2044                           ;main.c: 146:      int settime=1;
  2045   0001DE  0E00               	movlw	0
  2046   0001E0  6F5A               	movwf	(main@settime+1)& (0+255),b
  2047   0001E2  0E01               	movlw	1
  2048   0001E4  6F59               	movwf	main@settime& (0+255),b
  2049   0001E6                     
  2050                           ; BSR set to: 1
  2051                           ;main.c: 147:      unsigned int time23=0;
  2052   0001E6  0E00               	movlw	0
  2053   0001E8  6F7E               	movwf	(main@time23+1)& (0+255),b
  2054   0001EA  0E00               	movlw	0
  2055   0001EC  6F7D               	movwf	main@time23& (0+255),b
  2056   0001EE                     
  2057                           ; BSR set to: 1
  2058                           ;main.c: 148:      int bsw=0;
  2059   0001EE  0E00               	movlw	0
  2060   0001F0  6F66               	movwf	(main@bsw+1)& (0+255),b
  2061   0001F2  0E00               	movlw	0
  2062   0001F4  6F65               	movwf	main@bsw& (0+255),b
  2063   0001F6                     
  2064                           ; BSR set to: 1
  2065                           ;main.c: 149:      int del25=0;
  2066   0001F6  0E00               	movlw	0
  2067   0001F8  6F11               	movwf	(main@del25+1)& (0+255),b
  2068   0001FA  0E00               	movlw	0
  2069   0001FC  6F10               	movwf	main@del25& (0+255),b
  2070   0001FE                     
  2071                           ; BSR set to: 1
  2072                           ;main.c: 150:      int setf=0;
  2073   0001FE  0E00               	movlw	0
  2074   000200  6F15               	movwf	(main@setf+1)& (0+255),b
  2075   000202  0E00               	movlw	0
  2076   000204  6F14               	movwf	main@setf& (0+255),b
  2077   000206                     
  2078                           ; BSR set to: 1
  2079                           ;main.c: 152:      int hour12;;main.c: 153:      int minutes12;;main.c: 154:      int se
      +                          conds12;;main.c: 155:      int delay1234=0;
  2080   000206  0E00               	movlw	0
  2081   000208  6F86               	movwf	(main@delay1234+1)& (0+255),b
  2082   00020A  0E00               	movlw	0
  2083   00020C  6F85               	movwf	main@delay1234& (0+255),b
  2084   00020E                     
  2085                           ; BSR set to: 1
  2086                           ;main.c: 156:     get_time();
  2087   00020E  EC88  F013         	call	_get_time	;wreg free
  2088   000212                     
  2089                           ;main.c: 158:     arr[0] = time[0];
  2090   000212  C051  F187         	movff	_time,main@arr
  2091   000216                     
  2092                           ;main.c: 159:     arr[1] = time[1];
  2093   000216  C052  F188         	movff	_time+1,main@arr+1
  2094   00021A                     
  2095                           ;main.c: 160:     arr[2] = time[3];
  2096   00021A  C054  F189         	movff	_time+3,main@arr+2
  2097   00021E                     
  2098                           ;main.c: 161:     arr[3] = time[4];
  2099   00021E  C055  F18A         	movff	_time+4,main@arr+3
  2100   000222                     
  2101                           ;main.c: 162:     arr[4] = time[6];
  2102   000222  C057  F18B         	movff	_time+6,main@arr+4
  2103   000226                     
  2104                           ;main.c: 163:     arr[5] = time[7];
  2105   000226  C058  F18C         	movff	_time+7,main@arr+5
  2106   00022A                     
  2107                           ;main.c: 165:     arr[6] = 'O';
  2108   00022A  0E4F               	movlw	79
  2109   00022C  0101               	movlb	1	; () banked
  2110   00022E  6F8D               	movwf	(main@arr+6)& (0+255),b
  2111   000230                     
  2112                           ; BSR set to: 1
  2113                           ;main.c: 166:     arr[7] = 'N';
  2114   000230  0E4E               	movlw	78
  2115   000232  6F8E               	movwf	(main@arr+7)& (0+255),b
  2116   000234                     
  2117                           ; BSR set to: 1
  2118                           ;main.c: 168:     arr[8] = 0 + 48;
  2119   000234  0E30               	movlw	48
  2120   000236  6F8F               	movwf	(main@arr+8)& (0+255),b
  2121   000238                     
  2122                           ; BSR set to: 1
  2123                           ;main.c: 169:     arr[9] = 0 + 48;
  2124   000238  0E30               	movlw	48
  2125   00023A  6F90               	movwf	(main@arr+9)& (0+255),b
  2126   00023C                     
  2127                           ; BSR set to: 1
  2128                           ;main.c: 170:     for (int ad = 0; ad < 10; ad++) {
  2129   00023C  0E00               	movlw	0
  2130   00023E  6F70               	movwf	(main@ad+1)& (0+255),b
  2131   000240  0E00               	movlw	0
  2132   000242  6F6F               	movwf	main@ad& (0+255),b
  2133   000244                     l3776:
  2134                           
  2135                           ; BSR set to: 1
  2136   000244  BF70               	btfsc	(main@ad+1)& (0+255),7,b
  2137   000246  EF2E  F001         	goto	u2891
  2138   00024A  5170               	movf	(main@ad+1)& (0+255),w,b
  2139   00024C  E109               	bnz	u2890
  2140   00024E  0E0A               	movlw	10
  2141   000250  5D6F               	subwf	main@ad& (0+255),w,b
  2142   000252  A0D8               	btfss	status,0,c
  2143   000254  EF2E  F001         	goto	u2891
  2144   000258  EF30  F001         	goto	u2890
  2145   00025C                     u2891:
  2146   00025C  EF32  F001         	goto	l3780
  2147   000260                     u2890:
  2148   000260  EF54  F001         	goto	l3792
  2149   000264                     l3780:
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;main.c: 172:         write_internal_eeprom((address), arr[ad]);
  2153   000264  0E87               	movlw	low main@arr
  2154   000266  256F               	addwf	main@ad& (0+255),w,b
  2155   000268  6ED9               	movwf	fsr2l,c
  2156   00026A  0E01               	movlw	high main@arr
  2157   00026C  2170               	addwfc	(main@ad+1)& (0+255),w,b
  2158   00026E  6EDA               	movwf	fsr2h,c
  2159   000270  50DF               	movf	indf2,w,c
  2160   000272  6E01               	movwf	write_internal_eeprom@data^0,c
  2161   000274  51EF               	movf	main@address& (0+255),w,b
  2162   000276  ECE9  F015         	call	_write_internal_eeprom
  2163   00027A                     
  2164                           ;main.c: 174:         address++;
  2165   00027A  0101               	movlb	1	; () banked
  2166   00027C  4BEF               	infsnz	main@address& (0+255),f,b
  2167   00027E  2BF0               	incf	(main@address+1)& (0+255),f,b
  2168   000280                     
  2169                           ; BSR set to: 1
  2170                           ;main.c: 175:         if (address == 100) {
  2171   000280  0E64               	movlw	100
  2172   000282  19EF               	xorwf	main@address& (0+255),w,b
  2173   000284  11F0               	iorwf	(main@address+1)& (0+255),w,b
  2174   000286  A4D8               	btfss	status,2,c
  2175   000288  EF48  F001         	goto	u2901
  2176   00028C  EF4A  F001         	goto	u2900
  2177   000290                     u2901:
  2178   000290  EF50  F001         	goto	l3788
  2179   000294                     u2900:
  2180   000294                     
  2181                           ; BSR set to: 1
  2182                           ;main.c: 176:             o_flag = 1;
  2183   000294  0E01               	movlw	1
  2184   000296  6FF1               	movwf	_o_flag& (0+255),b
  2185                           
  2186                           ;main.c: 177:             address = 0;
  2187   000298  0E00               	movlw	0
  2188   00029A  6FF0               	movwf	(main@address+1)& (0+255),b
  2189   00029C  0E00               	movlw	0
  2190   00029E  6FEF               	movwf	main@address& (0+255),b
  2191   0002A0                     l3788:
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;main.c: 179:     }
  2195   0002A0  4B6F               	infsnz	main@ad& (0+255),f,b
  2196   0002A2  2B70               	incf	(main@ad+1)& (0+255),f,b
  2197   0002A4  EF22  F001         	goto	l3776
  2198   0002A8                     l99:
  2199   0002A8                     l3792:
  2200                           
  2201                           ;main.c: 187:         unsigned int key = read_switches(1);
  2202   0002A8  0E01               	movlw	1
  2203   0002AA  ECC8  F013         	call	_read_switches
  2204   0002AE  6E39               	movwf	??_main^0,c
  2205   0002B0  5039               	movf	??_main^0,w,c
  2206   0002B2  0101               	movlb	1	; () banked
  2207   0002B4  6FAC               	movwf	main@key& (0+255),b
  2208   0002B6  6BAD               	clrf	(main@key+1)& (0+255),b
  2209                           
  2210                           ;main.c: 188:         get_time();
  2211   0002B8  EC88  F013         	call	_get_time	;wreg free
  2212   0002BC                     
  2213                           ;main.c: 189:         if (g == 7 && (key == 2 || key == 3)) {
  2214   0002BC  0E07               	movlw	7
  2215   0002BE  0101               	movlb	1	; () banked
  2216   0002C0  19A5               	xorwf	main@g& (0+255),w,b
  2217   0002C2  11A6               	iorwf	(main@g+1)& (0+255),w,b
  2218   0002C4  A4D8               	btfss	status,2,c
  2219   0002C6  EF67  F001         	goto	u2911
  2220   0002CA  EF69  F001         	goto	u2910
  2221   0002CE                     u2911:
  2222   0002CE  EF83  F001         	goto	l3802
  2223   0002D2                     u2910:
  2224   0002D2                     
  2225                           ; BSR set to: 1
  2226   0002D2  0E02               	movlw	2
  2227   0002D4  19AC               	xorwf	main@key& (0+255),w,b
  2228   0002D6  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2229   0002D8  B4D8               	btfsc	status,2,c
  2230   0002DA  EF71  F001         	goto	u2921
  2231   0002DE  EF73  F001         	goto	u2920
  2232   0002E2                     u2921:
  2233   0002E2  EF7D  F001         	goto	l3800
  2234   0002E6                     u2920:
  2235   0002E6                     
  2236                           ; BSR set to: 1
  2237   0002E6  0E03               	movlw	3
  2238   0002E8  19AC               	xorwf	main@key& (0+255),w,b
  2239   0002EA  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2240   0002EC  A4D8               	btfss	status,2,c
  2241   0002EE  EF7B  F001         	goto	u2931
  2242   0002F2  EF7D  F001         	goto	u2930
  2243   0002F6                     u2931:
  2244   0002F6  EF83  F001         	goto	l3802
  2245   0002FA                     u2930:
  2246   0002FA                     l3800:
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;main.c: 190:             g = 2;
  2250   0002FA  0E00               	movlw	0
  2251   0002FC  6FA6               	movwf	(main@g+1)& (0+255),b
  2252   0002FE  0E02               	movlw	2
  2253   000300  6FA5               	movwf	main@g& (0+255),b
  2254                           
  2255                           ;main.c: 191:         } else if (key == 2 && g < 6) {
  2256   000302  EFCB  F001         	goto	l3818
  2257   000306                     l3802:
  2258                           
  2259                           ; BSR set to: 1
  2260   000306  0E02               	movlw	2
  2261   000308  19AC               	xorwf	main@key& (0+255),w,b
  2262   00030A  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2263   00030C  A4D8               	btfss	status,2,c
  2264   00030E  EF8B  F001         	goto	u2941
  2265   000312  EF8D  F001         	goto	u2940
  2266   000316                     u2941:
  2267   000316  EF9F  F001         	goto	l3808
  2268   00031A                     u2940:
  2269   00031A                     
  2270                           ; BSR set to: 1
  2271   00031A  BFA6               	btfsc	(main@g+1)& (0+255),7,b
  2272   00031C  EF9B  F001         	goto	u2950
  2273   000320  51A6               	movf	(main@g+1)& (0+255),w,b
  2274   000322  E107               	bnz	u2951
  2275   000324  0E06               	movlw	6
  2276   000326  5DA5               	subwf	main@g& (0+255),w,b
  2277   000328  B0D8               	btfsc	status,0,c
  2278   00032A  EF99  F001         	goto	u2951
  2279   00032E  EF9B  F001         	goto	u2950
  2280   000332                     u2951:
  2281   000332  EF9F  F001         	goto	l3808
  2282   000336                     u2950:
  2283   000336                     
  2284                           ; BSR set to: 1
  2285                           ;main.c: 192:             g++;
  2286   000336  4BA5               	infsnz	main@g& (0+255),f,b
  2287   000338  2BA6               	incf	(main@g+1)& (0+255),f,b
  2288                           
  2289                           ;main.c: 193:         } else if (key == 3 && g > 1) {
  2290   00033A  EFCB  F001         	goto	l3818
  2291   00033E                     l3808:
  2292                           
  2293                           ; BSR set to: 1
  2294   00033E  0E03               	movlw	3
  2295   000340  19AC               	xorwf	main@key& (0+255),w,b
  2296   000342  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2297   000344  A4D8               	btfss	status,2,c
  2298   000346  EFA7  F001         	goto	u2961
  2299   00034A  EFA9  F001         	goto	u2960
  2300   00034E                     u2961:
  2301   00034E  EFBC  F001         	goto	l3814
  2302   000352                     u2960:
  2303   000352                     
  2304                           ; BSR set to: 1
  2305   000352  BFA6               	btfsc	(main@g+1)& (0+255),7,b
  2306   000354  EFB5  F001         	goto	u2971
  2307   000358  51A6               	movf	(main@g+1)& (0+255),w,b
  2308   00035A  E109               	bnz	u2970
  2309   00035C  0E02               	movlw	2
  2310   00035E  5DA5               	subwf	main@g& (0+255),w,b
  2311   000360  A0D8               	btfss	status,0,c
  2312   000362  EFB5  F001         	goto	u2971
  2313   000366  EFB7  F001         	goto	u2970
  2314   00036A                     u2971:
  2315   00036A  EFBC  F001         	goto	l3814
  2316   00036E                     u2970:
  2317   00036E                     
  2318                           ; BSR set to: 1
  2319                           ;main.c: 194:             g--;
  2320   00036E  07A5               	decf	main@g& (0+255),f,b
  2321   000370  A0D8               	btfss	status,0,c
  2322   000372  07A6               	decf	(main@g+1)& (0+255),f,b
  2323                           
  2324                           ;main.c: 195:         } else if (key == 1) {
  2325   000374  EFCB  F001         	goto	l3818
  2326   000378                     l3814:
  2327                           
  2328                           ; BSR set to: 1
  2329   000378  05AC               	decf	main@key& (0+255),w,b
  2330   00037A  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2331   00037C  A4D8               	btfss	status,2,c
  2332   00037E  EFC3  F001         	goto	u2981
  2333   000382  EFC5  F001         	goto	u2980
  2334   000386                     u2981:
  2335   000386  EFCB  F001         	goto	l107
  2336   00038A                     u2980:
  2337   00038A                     
  2338                           ; BSR set to: 1
  2339                           ;main.c: 196:             g = 7;
  2340   00038A  0E00               	movlw	0
  2341   00038C  6FA6               	movwf	(main@g+1)& (0+255),b
  2342   00038E  0E07               	movlw	7
  2343   000390  6FA5               	movwf	main@g& (0+255),b
  2344   000392  EFCB  F001         	goto	l3818
  2345   000396                     l107:
  2346   000396                     l3818:
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;main.c: 199:         if (g != previous_g) {
  2350   000396  5130               	movf	main@previous_g& (0+255),w,b
  2351   000398  19A5               	xorwf	main@g& (0+255),w,b
  2352   00039A  E109               	bnz	u2990
  2353   00039C  5131               	movf	(main@previous_g+1)& (0+255),w,b
  2354   00039E  19A6               	xorwf	(main@g+1)& (0+255),w,b
  2355   0003A0  B4D8               	btfsc	status,2,c
  2356   0003A2  EFD5  F001         	goto	u2991
  2357   0003A6  EFD7  F001         	goto	u2990
  2358   0003AA                     u2991:
  2359   0003AA  EF5B  F002         	goto	l111
  2360   0003AE                     u2990:
  2361   0003AE                     
  2362                           ; BSR set to: 1
  2363                           ;main.c: 200:             arr[0] = time[0];
  2364   0003AE  C051  F187         	movff	_time,main@arr
  2365                           
  2366                           ;main.c: 201:             arr[1] = time[1];
  2367   0003B2  C052  F188         	movff	_time+1,main@arr+1
  2368                           
  2369                           ;main.c: 202:             arr[2] = time[3];
  2370   0003B6  C054  F189         	movff	_time+3,main@arr+2
  2371                           
  2372                           ;main.c: 203:             arr[3] = time[4];
  2373   0003BA  C055  F18A         	movff	_time+4,main@arr+3
  2374                           
  2375                           ;main.c: 204:             arr[4] = time[6];
  2376   0003BE  C057  F18B         	movff	_time+6,main@arr+4
  2377                           
  2378                           ;main.c: 205:             arr[5] = time[7];
  2379   0003C2  C058  F18C         	movff	_time+7,main@arr+5
  2380   0003C6                     
  2381                           ; BSR set to: 1
  2382                           ;main.c: 207:             arr[6] = ev[g][0];
  2383   0003C6  C1A5  F001         	movff	main@g,___wmul@multiplier
  2384   0003CA  C1A6  F002         	movff	main@g+1,___wmul@multiplier+1
  2385   0003CE  0E00               	movlw	0
  2386   0003D0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2387   0003D2  0E03               	movlw	3
  2388   0003D4  6E03               	movwf	___wmul@multiplicand^0,c
  2389   0003D6  EC40  F016         	call	___wmul	;wreg free
  2390   0003DA  0EBC               	movlw	low _ev
  2391   0003DC  2401               	addwf	?___wmul^0,w,c
  2392   0003DE  6ED9               	movwf	fsr2l,c
  2393   0003E0  0E01               	movlw	high _ev
  2394   0003E2  2002               	addwfc	(?___wmul+1)^0,w,c
  2395   0003E4  6EDA               	movwf	fsr2h,c
  2396   0003E6  50DF               	movf	indf2,w,c
  2397   0003E8  0101               	movlb	1	; () banked
  2398   0003EA  6F8D               	movwf	(main@arr+6)& (0+255),b
  2399                           
  2400                           ;main.c: 208:             arr[7] = ev[g][1];
  2401   0003EC  C1A5  F001         	movff	main@g,___wmul@multiplier
  2402   0003F0  C1A6  F002         	movff	main@g+1,___wmul@multiplier+1
  2403   0003F4  0E00               	movlw	0
  2404   0003F6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2405   0003F8  0E03               	movlw	3
  2406   0003FA  6E03               	movwf	___wmul@multiplicand^0,c
  2407   0003FC  EC40  F016         	call	___wmul	;wreg free
  2408   000400  0EBD               	movlw	low (_ev+1)
  2409   000402  2401               	addwf	?___wmul^0,w,c
  2410   000404  6ED9               	movwf	fsr2l,c
  2411   000406  0E01               	movlw	high (_ev+1)
  2412   000408  2002               	addwfc	(?___wmul+1)^0,w,c
  2413   00040A  6EDA               	movwf	fsr2h,c
  2414   00040C  50DF               	movf	indf2,w,c
  2415   00040E  0101               	movlb	1	; () banked
  2416   000410  6F8E               	movwf	(main@arr+7)& (0+255),b
  2417   000412                     
  2418                           ; BSR set to: 1
  2419                           ;main.c: 210:             arr[8] = (adc_reg_val / 10) + 48;
  2420   000412  C1A1  F001         	movff	main@adc_reg_val,___lwdiv@dividend
  2421   000416  C1A2  F002         	movff	main@adc_reg_val+1,___lwdiv@dividend+1
  2422   00041A  0E00               	movlw	0
  2423   00041C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2424   00041E  0E0A               	movlw	10
  2425   000420  6E03               	movwf	___lwdiv@divisor^0,c
  2426   000422  EC03  F014         	call	___lwdiv	;wreg free
  2427   000426  5001               	movf	?___lwdiv^0,w,c
  2428   000428  0F30               	addlw	48
  2429   00042A  0101               	movlb	1	; () banked
  2430   00042C  6F8F               	movwf	(main@arr+8)& (0+255),b
  2431   00042E                     
  2432                           ; BSR set to: 1
  2433                           ;main.c: 211:             arr[9] = (adc_reg_val % 10) + 48;
  2434   00042E  C1A1  F001         	movff	main@adc_reg_val,___lwmod@dividend
  2435   000432  C1A2  F002         	movff	main@adc_reg_val+1,___lwmod@dividend+1
  2436   000436  0E00               	movlw	0
  2437   000438  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2438   00043A  0E0A               	movlw	10
  2439   00043C  6E03               	movwf	___lwmod@divisor^0,c
  2440   00043E  ECDB  F014         	call	___lwmod	;wreg free
  2441   000442  5001               	movf	?___lwmod^0,w,c
  2442   000444  0F30               	addlw	48
  2443   000446  0101               	movlb	1	; () banked
  2444   000448  6F90               	movwf	(main@arr+9)& (0+255),b
  2445   00044A                     
  2446                           ; BSR set to: 1
  2447                           ;main.c: 213:             for (int ad = 0; ad < 10; ad++) {
  2448   00044A  0E00               	movlw	0
  2449   00044C  6F72               	movwf	(main@ad_206+1)& (0+255),b
  2450   00044E  0E00               	movlw	0
  2451   000450  6F71               	movwf	main@ad_206& (0+255),b
  2452   000452                     l3830:
  2453                           
  2454                           ; BSR set to: 1
  2455   000452  BF72               	btfsc	(main@ad_206+1)& (0+255),7,b
  2456   000454  EF35  F002         	goto	u3001
  2457   000458  5172               	movf	(main@ad_206+1)& (0+255),w,b
  2458   00045A  E109               	bnz	u3000
  2459   00045C  0E0A               	movlw	10
  2460   00045E  5D71               	subwf	main@ad_206& (0+255),w,b
  2461   000460  A0D8               	btfss	status,0,c
  2462   000462  EF35  F002         	goto	u3001
  2463   000466  EF37  F002         	goto	u3000
  2464   00046A                     u3001:
  2465   00046A  EF39  F002         	goto	l3834
  2466   00046E                     u3000:
  2467   00046E  EF5B  F002         	goto	l111
  2468   000472                     l3834:
  2469                           
  2470                           ; BSR set to: 1
  2471                           ;main.c: 215:                 write_internal_eeprom((address), arr[ad]);
  2472   000472  0E87               	movlw	low main@arr
  2473   000474  2571               	addwf	main@ad_206& (0+255),w,b
  2474   000476  6ED9               	movwf	fsr2l,c
  2475   000478  0E01               	movlw	high main@arr
  2476   00047A  2172               	addwfc	(main@ad_206+1)& (0+255),w,b
  2477   00047C  6EDA               	movwf	fsr2h,c
  2478   00047E  50DF               	movf	indf2,w,c
  2479   000480  6E01               	movwf	write_internal_eeprom@data^0,c
  2480   000482  51EF               	movf	main@address& (0+255),w,b
  2481   000484  ECE9  F015         	call	_write_internal_eeprom
  2482   000488                     
  2483                           ;main.c: 217:                 address++;
  2484   000488  0101               	movlb	1	; () banked
  2485   00048A  4BEF               	infsnz	main@address& (0+255),f,b
  2486   00048C  2BF0               	incf	(main@address+1)& (0+255),f,b
  2487   00048E                     
  2488                           ; BSR set to: 1
  2489                           ;main.c: 218:                 if (address == 100) {
  2490   00048E  0E64               	movlw	100
  2491   000490  19EF               	xorwf	main@address& (0+255),w,b
  2492   000492  11F0               	iorwf	(main@address+1)& (0+255),w,b
  2493   000494  A4D8               	btfss	status,2,c
  2494   000496  EF4F  F002         	goto	u3011
  2495   00049A  EF51  F002         	goto	u3010
  2496   00049E                     u3011:
  2497   00049E  EF57  F002         	goto	l3842
  2498   0004A2                     u3010:
  2499   0004A2                     
  2500                           ; BSR set to: 1
  2501                           ;main.c: 219:                     o_flag = 1;
  2502   0004A2  0E01               	movlw	1
  2503   0004A4  6FF1               	movwf	_o_flag& (0+255),b
  2504                           
  2505                           ;main.c: 220:                     address = 0;
  2506   0004A6  0E00               	movlw	0
  2507   0004A8  6FF0               	movwf	(main@address+1)& (0+255),b
  2508   0004AA  0E00               	movlw	0
  2509   0004AC  6FEF               	movwf	main@address& (0+255),b
  2510   0004AE                     l3842:
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;main.c: 222:             }
  2514   0004AE  4B71               	infsnz	main@ad_206& (0+255),f,b
  2515   0004B0  2B72               	incf	(main@ad_206+1)& (0+255),f,b
  2516   0004B2  EF29  F002         	goto	l3830
  2517   0004B6                     l111:
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;main.c: 225:         previous_g = g;
  2521   0004B6  C1A5  F130         	movff	main@g,main@previous_g
  2522   0004BA  C1A6  F131         	movff	main@g+1,main@previous_g+1
  2523                           
  2524                           ;main.c: 228:         switch (mode) {
  2525   0004BE  EF5A  F00E         	goto	l4492
  2526   0004C2                     l3846:
  2527                           
  2528                           ; BSR set to: 1
  2529                           ;main.c: 231:                 get_time();
  2530   0004C2  EC88  F013         	call	_get_time	;wreg free
  2531   0004C6                     
  2532                           ;main.c: 232:                 display_time();
  2533   0004C6  ECC8  F016         	call	_display_time	;wreg free
  2534   0004CA                     
  2535                           ;main.c: 233:                 clcd_print(ev[g], (0xC0 + (9)));
  2536   0004CA  C1A5  F001         	movff	main@g,___wmul@multiplier
  2537   0004CE  C1A6  F002         	movff	main@g+1,___wmul@multiplier+1
  2538   0004D2  0E00               	movlw	0
  2539   0004D4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2540   0004D6  0E03               	movlw	3
  2541   0004D8  6E03               	movwf	___wmul@multiplicand^0,c
  2542   0004DA  EC40  F016         	call	___wmul	;wreg free
  2543   0004DE  0EBC               	movlw	low _ev
  2544   0004E0  2401               	addwf	?___wmul^0,w,c
  2545   0004E2  6E07               	movwf	clcd_print@data^0,c
  2546   0004E4  0E01               	movlw	high _ev
  2547   0004E6  2002               	addwfc	(?___wmul+1)^0,w,c
  2548   0004E8  6E08               	movwf	(clcd_print@data+1)^0,c
  2549   0004EA  0EC9               	movlw	201
  2550   0004EC  6E09               	movwf	clcd_print@addr^0,c
  2551   0004EE  EC73  F014         	call	_clcd_print	;wreg free
  2552   0004F2                     
  2553                           ;main.c: 234:                 clcd_print(" TIME    ", (0x80 + (0)));
  2554   0004F2  0ED5               	movlw	low STR_2
  2555   0004F4  6E07               	movwf	clcd_print@data^0,c
  2556   0004F6  0E2F               	movlw	high STR_2
  2557   0004F8  6E08               	movwf	(clcd_print@data+1)^0,c
  2558   0004FA  0E80               	movlw	128
  2559   0004FC  6E09               	movwf	clcd_print@addr^0,c
  2560   0004FE  EC73  F014         	call	_clcd_print	;wreg free
  2561   000502                     
  2562                           ;main.c: 235:                 clcd_print("EV  ", (0x80 + (9)));
  2563   000502  0EF3               	movlw	low STR_3
  2564   000504  6E07               	movwf	clcd_print@data^0,c
  2565   000506  0E2F               	movlw	high STR_3
  2566   000508  6E08               	movwf	(clcd_print@data+1)^0,c
  2567   00050A  0E89               	movlw	137
  2568   00050C  6E09               	movwf	clcd_print@addr^0,c
  2569   00050E  EC73  F014         	call	_clcd_print	;wreg free
  2570   000512                     
  2571                           ;main.c: 236:                 clcd_print("SP ", (0x80 + (13)));
  2572   000512  0EF8               	movlw	low STR_4
  2573   000514  6E07               	movwf	clcd_print@data^0,c
  2574   000516  0E2F               	movlw	high STR_4
  2575   000518  6E08               	movwf	(clcd_print@data+1)^0,c
  2576   00051A  0E8D               	movlw	141
  2577   00051C  6E09               	movwf	clcd_print@addr^0,c
  2578   00051E  EC73  F014         	call	_clcd_print	;wreg free
  2579   000522                     
  2580                           ;main.c: 241:                 adc_reg_val = read_adc(0x04) / 10.33;
  2581   000522  0EAE               	movlw	174
  2582   000524  6E1A               	movwf	___fldiv@a^0,c
  2583   000526  0E47               	movlw	71
  2584   000528  6E1B               	movwf	(___fldiv@a+1)^0,c
  2585   00052A  0E25               	movlw	37
  2586   00052C  6E1C               	movwf	(___fldiv@a+2)^0,c
  2587   00052E  0E41               	movlw	65
  2588   000530  6E1D               	movwf	(___fldiv@a+3)^0,c
  2589   000532  0E04               	movlw	4
  2590   000534  EC34  F015         	call	_read_adc
  2591   000538  C001  F008         	movff	?_read_adc,___xxtofl@val
  2592   00053C  C002  F009         	movff	?_read_adc+1,___xxtofl@val+1
  2593   000540  6A0A               	clrf	(___xxtofl@val+2)^0,c
  2594   000542  6A0B               	clrf	(___xxtofl@val+3)^0,c
  2595   000544  0E00               	movlw	0
  2596   000546  EC57  F010         	call	___xxtofl
  2597   00054A  C008  F016         	movff	?___xxtofl,___fldiv@b
  2598   00054E  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  2599   000552  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  2600   000556  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  2601   00055A  EC8A  F00E         	call	___fldiv	;wreg free
  2602   00055E  C016  F02F         	movff	?___fldiv,___fltol@f1
  2603   000562  C017  F030         	movff	?___fldiv+1,___fltol@f1+1
  2604   000566  C018  F031         	movff	?___fldiv+2,___fltol@f1+2
  2605   00056A  C019  F032         	movff	?___fldiv+3,___fltol@f1+3
  2606   00056E  ECB5  F011         	call	___fltol	;wreg free
  2607   000572  C02F  F1A1         	movff	?___fltol,main@adc_reg_val
  2608   000576  C030  F1A2         	movff	?___fltol+1,main@adc_reg_val+1
  2609   00057A                     
  2610                           ;main.c: 242:                 if (adc_reg_val < 100) {
  2611   00057A  0101               	movlb	1	; () banked
  2612   00057C  51A2               	movf	(main@adc_reg_val+1)& (0+255),w,b
  2613   00057E  E107               	bnz	u3021
  2614   000580  0E64               	movlw	100
  2615   000582  5DA1               	subwf	main@adc_reg_val& (0+255),w,b
  2616   000584  B0D8               	btfsc	status,0,c
  2617   000586  EFC7  F002         	goto	u3021
  2618   00058A  EFC9  F002         	goto	u3020
  2619   00058E                     u3021:
  2620   00058E  EFE9  F002         	goto	l3864
  2621   000592                     u3020:
  2622   000592                     
  2623                           ; BSR set to: 1
  2624                           ;main.c: 243:                     clcd_putch('0' + (adc_reg_val / 10), (0xC0 + (13)));
  2625   000592  0ECD               	movlw	205
  2626   000594  6E0F               	movwf	clcd_putch@addr^0,c
  2627   000596  C1A1  F001         	movff	main@adc_reg_val,___lwdiv@dividend
  2628   00059A  C1A2  F002         	movff	main@adc_reg_val+1,___lwdiv@dividend+1
  2629   00059E  0E00               	movlw	0
  2630   0005A0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2631   0005A2  0E0A               	movlw	10
  2632   0005A4  6E03               	movwf	___lwdiv@divisor^0,c
  2633   0005A6  EC03  F014         	call	___lwdiv	;wreg free
  2634   0005AA  5001               	movf	?___lwdiv^0,w,c
  2635   0005AC  0F30               	addlw	48
  2636   0005AE  EC80  F016         	call	_clcd_putch
  2637                           
  2638                           ;main.c: 244:                     clcd_putch('0' + (adc_reg_val % 10), (0xC0 + (14)));
  2639   0005B2  0ECE               	movlw	206
  2640   0005B4  6E0F               	movwf	clcd_putch@addr^0,c
  2641   0005B6  C1A1  F001         	movff	main@adc_reg_val,___lwmod@dividend
  2642   0005BA  C1A2  F002         	movff	main@adc_reg_val+1,___lwmod@dividend+1
  2643   0005BE  0E00               	movlw	0
  2644   0005C0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2645   0005C2  0E0A               	movlw	10
  2646   0005C4  6E03               	movwf	___lwmod@divisor^0,c
  2647   0005C6  ECDB  F014         	call	___lwmod	;wreg free
  2648   0005CA  5001               	movf	?___lwmod^0,w,c
  2649   0005CC  0F30               	addlw	48
  2650   0005CE  EC80  F016         	call	_clcd_putch
  2651   0005D2                     l3864:
  2652                           
  2653                           ;main.c: 247:                 clcd_putch(' ', (0xC0 + (15)));
  2654   0005D2  0ECF               	movlw	207
  2655   0005D4  6E0F               	movwf	clcd_putch@addr^0,c
  2656   0005D6  0E20               	movlw	32
  2657   0005D8  EC80  F016         	call	_clcd_putch
  2658   0005DC                     
  2659                           ;main.c: 249:                 if (key == 5) {
  2660   0005DC  0E05               	movlw	5
  2661   0005DE  0101               	movlb	1	; () banked
  2662   0005E0  19AC               	xorwf	main@key& (0+255),w,b
  2663   0005E2  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2664   0005E4  A4D8               	btfss	status,2,c
  2665   0005E6  EFF7  F002         	goto	u3031
  2666   0005EA  EFF9  F002         	goto	u3030
  2667   0005EE                     u3031:
  2668   0005EE  EF54  F001         	goto	l3792
  2669   0005F2                     u3030:
  2670   0005F2                     
  2671                           ; BSR set to: 1
  2672                           ;main.c: 250:                     mode = 2;
  2673   0005F2  0E00               	movlw	0
  2674   0005F4  6F78               	movwf	(main@mode+1)& (0+255),b
  2675   0005F6  0E02               	movlw	2
  2676   0005F8  6F77               	movwf	main@mode& (0+255),b
  2677                           
  2678                           ;main.c: 251:                     comeback = 0;
  2679   0005FA  0E00               	movlw	0
  2680   0005FC  6F13               	movwf	(main@comeback+1)& (0+255),b
  2681   0005FE  0E00               	movlw	0
  2682   000600  6F12               	movwf	main@comeback& (0+255),b
  2683   000602                     
  2684                           ; BSR set to: 1
  2685                           ;main.c: 252:                     clcd_print("                ", (0xC0 + (0)));
  2686   000602  0E01               	movlw	low STR_5
  2687   000604  6E07               	movwf	clcd_print@data^0,c
  2688   000606  0E2F               	movlw	high STR_5
  2689   000608  6E08               	movwf	(clcd_print@data+1)^0,c
  2690   00060A  0EC0               	movlw	192
  2691   00060C  6E09               	movwf	clcd_print@addr^0,c
  2692   00060E  EC73  F014         	call	_clcd_print	;wreg free
  2693   000612  EF54  F001         	goto	l3792
  2694   000616                     l3872:
  2695                           
  2696                           ; BSR set to: 1
  2697                           ;main.c: 257:                 if(del24++==1200)
  2698   000616  4B57               	infsnz	main@del24& (0+255),f,b
  2699   000618  2B58               	incf	(main@del24+1)& (0+255),f,b
  2700   00061A  0EB1               	movlw	177
  2701   00061C  1957               	xorwf	main@del24& (0+255),w,b
  2702   00061E  E107               	bnz	u3041
  2703   000620  0E04               	movlw	4
  2704   000622  1958               	xorwf	(main@del24+1)& (0+255),w,b
  2705   000624  A4D8               	btfss	status,2,c
  2706   000626  EF17  F003         	goto	u3041
  2707   00062A  EF19  F003         	goto	u3040
  2708   00062E                     u3041:
  2709   00062E  EF1F  F003         	goto	l3876
  2710   000632                     u3040:
  2711   000632                     
  2712                           ; BSR set to: 1
  2713                           ;main.c: 258:                 {;main.c: 259:                     mode=1;
  2714   000632  0E00               	movlw	0
  2715   000634  6F78               	movwf	(main@mode+1)& (0+255),b
  2716   000636  0E01               	movlw	1
  2717   000638  6F77               	movwf	main@mode& (0+255),b
  2718                           
  2719                           ;main.c: 260:                 }
  2720   00063A  EF2C  F003         	goto	l3880
  2721   00063E                     l3876:
  2722                           
  2723                           ; BSR set to: 1
  2724   00063E  29AC               	incf	main@key& (0+255),w,b
  2725   000640  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2726   000642  B4D8               	btfsc	status,2,c
  2727   000644  EF26  F003         	goto	u3051
  2728   000648  EF28  F003         	goto	u3050
  2729   00064C                     u3051:
  2730   00064C  EF2C  F003         	goto	l3880
  2731   000650                     u3050:
  2732   000650                     
  2733                           ; BSR set to: 1
  2734                           ;main.c: 262:                 {;main.c: 263:                     del24=0;
  2735   000650  0E00               	movlw	0
  2736   000652  6F58               	movwf	(main@del24+1)& (0+255),b
  2737   000654  0E00               	movlw	0
  2738   000656  6F57               	movwf	main@del24& (0+255),b
  2739   000658                     l3880:
  2740                           
  2741                           ; BSR set to: 1
  2742                           ;main.c: 266:                 password[0] = read_ext_eeprom(200 + 0);
  2743   000658  0EC8               	movlw	200
  2744   00065A  EC01  F016         	call	_read_ext_eeprom
  2745   00065E  0101               	movlb	1	; () banked
  2746   000660  6FF2               	movwf	main@password& (0+255),b
  2747   000662                     
  2748                           ; BSR set to: 1
  2749                           ;main.c: 267:                 password[1] = read_ext_eeprom(200 + 1);
  2750   000662  0EC9               	movlw	201
  2751   000664  EC01  F016         	call	_read_ext_eeprom
  2752   000668  0101               	movlb	1	; () banked
  2753   00066A  6FF3               	movwf	(main@password+1)& (0+255),b
  2754   00066C                     
  2755                           ; BSR set to: 1
  2756                           ;main.c: 268:                 password[2] = read_ext_eeprom(200 + 2);
  2757   00066C  0ECA               	movlw	202
  2758   00066E  EC01  F016         	call	_read_ext_eeprom
  2759   000672  0101               	movlb	1	; () banked
  2760   000674  6FF4               	movwf	(main@password+2)& (0+255),b
  2761   000676                     
  2762                           ; BSR set to: 1
  2763                           ;main.c: 269:                 password[3] = read_ext_eeprom(200 + 3);
  2764   000676  0ECB               	movlw	203
  2765   000678  EC01  F016         	call	_read_ext_eeprom
  2766   00067C  0101               	movlb	1	; () banked
  2767   00067E  6FF5               	movwf	(main@password+3)& (0+255),b
  2768   000680                     
  2769                           ; BSR set to: 1
  2770                           ;main.c: 271:                 if (p < 4) {
  2771   000680  BF9C               	btfsc	(main@p+1)& (0+255),7,b
  2772   000682  EF4E  F003         	goto	u3060
  2773   000686  519C               	movf	(main@p+1)& (0+255),w,b
  2774   000688  E107               	bnz	u3061
  2775   00068A  0E04               	movlw	4
  2776   00068C  5D9B               	subwf	main@p& (0+255),w,b
  2777   00068E  B0D8               	btfsc	status,0,c
  2778   000690  EF4C  F003         	goto	u3061
  2779   000694  EF4E  F003         	goto	u3060
  2780   000698                     u3061:
  2781   000698  EF8E  F003         	goto	l3908
  2782   00069C                     u3060:
  2783   00069C                     
  2784                           ; BSR set to: 1
  2785                           ;main.c: 272:                     clcd_print(" ENTER PASSWORD ", (0x80 + (0)));
  2786   00069C  0E56               	movlw	low STR_6
  2787   00069E  6E07               	movwf	clcd_print@data^0,c
  2788   0006A0  0E2F               	movlw	high STR_6
  2789   0006A2  6E08               	movwf	(clcd_print@data+1)^0,c
  2790   0006A4  0E80               	movlw	128
  2791   0006A6  6E09               	movwf	clcd_print@addr^0,c
  2792   0006A8  EC73  F014         	call	_clcd_print	;wreg free
  2793   0006AC                     
  2794                           ;main.c: 274:                     if (key == 5) {
  2795   0006AC  0E05               	movlw	5
  2796   0006AE  0101               	movlb	1	; () banked
  2797   0006B0  19AC               	xorwf	main@key& (0+255),w,b
  2798   0006B2  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2799   0006B4  A4D8               	btfss	status,2,c
  2800   0006B6  EF5F  F003         	goto	u3071
  2801   0006BA  EF61  F003         	goto	u3070
  2802   0006BE                     u3071:
  2803   0006BE  EF74  F003         	goto	l3900
  2804   0006C2                     u3070:
  2805   0006C2                     
  2806                           ; BSR set to: 1
  2807                           ;main.c: 275:                         enter_password[p] = '1';
  2808   0006C2  0E16               	movlw	low main@enter_password
  2809   0006C4  259B               	addwf	main@p& (0+255),w,b
  2810   0006C6  6ED9               	movwf	fsr2l,c
  2811   0006C8  0E01               	movlw	high main@enter_password
  2812   0006CA  219C               	addwfc	(main@p+1)& (0+255),w,b
  2813   0006CC  6EDA               	movwf	fsr2h,c
  2814   0006CE  0E31               	movlw	49
  2815   0006D0  6EDF               	movwf	indf2,c
  2816   0006D2                     
  2817                           ; BSR set to: 1
  2818                           ;main.c: 277:                         clcd_putch('*', (0xC0 + (p + 4)));
  2819   0006D2  519B               	movf	main@p& (0+255),w,b
  2820   0006D4  0FC4               	addlw	196
  2821   0006D6  6E0F               	movwf	clcd_putch@addr^0,c
  2822   0006D8  0E2A               	movlw	42
  2823   0006DA  EC80  F016         	call	_clcd_putch
  2824   0006DE                     l3898:
  2825                           
  2826                           ;main.c: 278:                         p++;
  2827   0006DE  0101               	movlb	1	; () banked
  2828   0006E0  4B9B               	infsnz	main@p& (0+255),f,b
  2829   0006E2  2B9C               	incf	(main@p+1)& (0+255),f,b
  2830                           
  2831                           ;main.c: 280:                     } else if (key == 6) {
  2832   0006E4  EF54  F001         	goto	l3792
  2833   0006E8                     l3900:
  2834                           
  2835                           ; BSR set to: 1
  2836   0006E8  0E06               	movlw	6
  2837   0006EA  19AC               	xorwf	main@key& (0+255),w,b
  2838   0006EC  11AD               	iorwf	(main@key+1)& (0+255),w,b
  2839   0006EE  A4D8               	btfss	status,2,c
  2840   0006F0  EF7C  F003         	goto	u3081
  2841   0006F4  EF7E  F003         	goto	u3080
  2842   0006F8                     u3081:
  2843   0006F8  EF54  F001         	goto	l3792
  2844   0006FC                     u3080:
  2845   0006FC                     
  2846                           ; BSR set to: 1
  2847                           ;main.c: 281:                         enter_password[p] = '0';
  2848   0006FC  0E16               	movlw	low main@enter_password
  2849   0006FE  259B               	addwf	main@p& (0+255),w,b
  2850   000700  6ED9               	movwf	fsr2l,c
  2851   000702  0E01               	movlw	high main@enter_password
  2852   000704  219C               	addwfc	(main@p+1)& (0+255),w,b
  2853   000706  6EDA               	movwf	fsr2h,c
  2854   000708  0E30               	movlw	48
  2855   00070A  6EDF               	movwf	indf2,c
  2856   00070C                     
  2857                           ; BSR set to: 1
  2858                           ;main.c: 283:                         clcd_putch('*', (0xC0 + (p + 4)));
  2859   00070C  519B               	movf	main@p& (0+255),w,b
  2860   00070E  0FC4               	addlw	196
  2861   000710  6E0F               	movwf	clcd_putch@addr^0,c
  2862   000712  0E2A               	movlw	42
  2863   000714  EC80  F016         	call	_clcd_putch
  2864   000718  EF6F  F003         	goto	l3898
  2865   00071C                     l3908:
  2866                           
  2867                           ; BSR set to: 1
  2868                           ;main.c: 287:                     if (strcmp(enter_password, password) == 0) {
  2869   00071C  0E16               	movlw	low main@enter_password
  2870   00071E  6E01               	movwf	strcmp@l^0,c
  2871   000720  0E01               	movlw	high main@enter_password
  2872   000722  6E02               	movwf	(strcmp@l+1)^0,c
  2873   000724  0EF2               	movlw	low main@password
  2874   000726  6E03               	movwf	strcmp@r^0,c
  2875   000728  0E01               	movlw	high main@password
  2876   00072A  6E04               	movwf	(strcmp@r+1)^0,c
  2877   00072C  EC3D  F014         	call	_strcmp	;wreg free
  2878   000730  5001               	movf	?_strcmp^0,w,c
  2879   000732  1002               	iorwf	(?_strcmp+1)^0,w,c
  2880   000734  A4D8               	btfss	status,2,c
  2881   000736  EF9F  F003         	goto	u3091
  2882   00073A  EFA1  F003         	goto	u3090
  2883   00073E                     u3091:
  2884   00073E  EFAC  F003         	goto	l3912
  2885   000742                     u3090:
  2886   000742                     
  2887                           ;main.c: 289:                         mode = 3;
  2888   000742  0E00               	movlw	0
  2889   000744  0101               	movlb	1	; () banked
  2890   000746  6F78               	movwf	(main@mode+1)& (0+255),b
  2891   000748  0E03               	movlw	3
  2892   00074A  6F77               	movwf	main@mode& (0+255),b
  2893                           
  2894                           ;main.c: 290:                         p=0;
  2895   00074C  0E00               	movlw	0
  2896   00074E  6F9C               	movwf	(main@p+1)& (0+255),b
  2897   000750  0E00               	movlw	0
  2898   000752  6F9B               	movwf	main@p& (0+255),b
  2899                           
  2900                           ;main.c: 292:                     } else {
  2901   000754  EF54  F001         	goto	l3792
  2902   000758                     l3912:
  2903                           
  2904                           ;main.c: 295:                         if (attempt > 1) {
  2905   000758  0101               	movlb	1	; () banked
  2906   00075A  BF6C               	btfsc	(main@attempt+1)& (0+255),7,b
  2907   00075C  EFB9  F003         	goto	u3101
  2908   000760  516C               	movf	(main@attempt+1)& (0+255),w,b
  2909   000762  E109               	bnz	u3100
  2910   000764  0E02               	movlw	2
  2911   000766  5D6B               	subwf	main@attempt& (0+255),w,b
  2912   000768  A0D8               	btfss	status,0,c
  2913   00076A  EFB9  F003         	goto	u3101
  2914   00076E  EFBB  F003         	goto	u3100
  2915   000772                     u3101:
  2916   000772  EFF7  F003         	goto	l3930
  2917   000776                     u3100:
  2918   000776                     
  2919                           ; BSR set to: 1
  2920                           ;main.c: 296:                             del24=0;
  2921   000776  0E00               	movlw	0
  2922   000778  6F58               	movwf	(main@del24+1)& (0+255),b
  2923   00077A  0E00               	movlw	0
  2924   00077C  6F57               	movwf	main@del24& (0+255),b
  2925   00077E                     
  2926                           ; BSR set to: 1
  2927                           ;main.c: 297:                             clcd_print(" WRONG PASSWORD ", (0x80 + (0)));
  2928   00077E  0E45               	movlw	low STR_7
  2929   000780  6E07               	movwf	clcd_print@data^0,c
  2930   000782  0E2F               	movlw	high STR_7
  2931   000784  6E08               	movwf	(clcd_print@data+1)^0,c
  2932   000786  0E80               	movlw	128
  2933   000788  6E09               	movwf	clcd_print@addr^0,c
  2934   00078A  EC73  F014         	call	_clcd_print	;wreg free
  2935   00078E                     
  2936                           ;main.c: 299:                             clcd_print("ATTEMPT LEFT", (0xC0 + (3)));
  2937   00078E  0EC8               	movlw	low STR_8
  2938   000790  6E07               	movwf	clcd_print@data^0,c
  2939   000792  0E2F               	movlw	high STR_8
  2940   000794  6E08               	movwf	(clcd_print@data+1)^0,c
  2941   000796  0EC3               	movlw	195
  2942   000798  6E09               	movwf	clcd_print@addr^0,c
  2943   00079A  EC73  F014         	call	_clcd_print	;wreg free
  2944   00079E                     
  2945                           ;main.c: 300:                             clcd_putch(attempt + 47, (0xC0 + (0)));
  2946   00079E  0EC0               	movlw	192
  2947   0007A0  6E0F               	movwf	clcd_putch@addr^0,c
  2948   0007A2  0101               	movlb	1	; () banked
  2949   0007A4  516B               	movf	main@attempt& (0+255),w,b
  2950   0007A6  0F2F               	addlw	47
  2951   0007A8  EC80  F016         	call	_clcd_putch
  2952   0007AC                     
  2953                           ;main.c: 301:                             if (q++ == 1000) {
  2954   0007AC  0101               	movlb	1	; () banked
  2955   0007AE  4B32               	infsnz	main@q& (0+255),f,b
  2956   0007B0  2B33               	incf	(main@q+1)& (0+255),f,b
  2957   0007B2  0EE9               	movlw	233
  2958   0007B4  1932               	xorwf	main@q& (0+255),w,b
  2959   0007B6  E107               	bnz	u3111
  2960   0007B8  0E03               	movlw	3
  2961   0007BA  1933               	xorwf	(main@q+1)& (0+255),w,b
  2962   0007BC  A4D8               	btfss	status,2,c
  2963   0007BE  EFE3  F003         	goto	u3111
  2964   0007C2  EFE5  F003         	goto	u3110
  2965   0007C6                     u3111:
  2966   0007C6  EF54  F001         	goto	l99
  2967   0007CA                     u3110:
  2968   0007CA                     
  2969                           ; BSR set to: 1
  2970                           ;main.c: 302:                                 attempt--;
  2971   0007CA  076B               	decf	main@attempt& (0+255),f,b
  2972   0007CC  A0D8               	btfss	status,0,c
  2973   0007CE  076C               	decf	(main@attempt+1)& (0+255),f,b
  2974   0007D0                     
  2975                           ; BSR set to: 1
  2976                           ;main.c: 303:                                 p = q = 0;
  2977   0007D0  0E00               	movlw	0
  2978   0007D2  6F33               	movwf	(main@q+1)& (0+255),b
  2979   0007D4  0E00               	movlw	0
  2980   0007D6  6F32               	movwf	main@q& (0+255),b
  2981   0007D8  C132  F19B         	movff	main@q,main@p
  2982   0007DC  C133  F19C         	movff	main@q+1,main@p+1
  2983   0007E0                     
  2984                           ; BSR set to: 1
  2985                           ;main.c: 304:                                 clcd_write(0x01, 0);
  2986   0007E0  0E00               	movlw	0
  2987   0007E2  6E01               	movwf	clcd_write@control_bit^0,c
  2988   0007E4  0E01               	movlw	1
  2989   0007E6  EC99  F015         	call	_clcd_write
  2990   0007EA  EF54  F001         	goto	l3792
  2991   0007EE                     l3930:
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;main.c: 310:                             del24=0;
  2995   0007EE  0E00               	movlw	0
  2996   0007F0  6F58               	movwf	(main@del24+1)& (0+255),b
  2997   0007F2  0E00               	movlw	0
  2998   0007F4  6F57               	movwf	main@del24& (0+255),b
  2999   0007F6                     
  3000                           ; BSR set to: 1
  3001                           ;main.c: 311:                             clcd_print("YOU ARE BLOCKED>", (0x80 + (0)));
  3002   0007F6  0E9A               	movlw	low STR_9
  3003   0007F8  6E07               	movwf	clcd_print@data^0,c
  3004   0007FA  0E2F               	movlw	high STR_9
  3005   0007FC  6E08               	movwf	(clcd_print@data+1)^0,c
  3006   0007FE  0E80               	movlw	128
  3007   000800  6E09               	movwf	clcd_print@addr^0,c
  3008   000802  EC73  F014         	call	_clcd_print	;wreg free
  3009   000806                     
  3010                           ;main.c: 313:                             clcd_print("WAIT--> ", (0xC0 + (0)));
  3011   000806  0EDF               	movlw	low STR_10
  3012   000808  6E07               	movwf	clcd_print@data^0,c
  3013   00080A  0E2F               	movlw	high STR_10
  3014   00080C  6E08               	movwf	(clcd_print@data+1)^0,c
  3015   00080E  0EC0               	movlw	192
  3016   000810  6E09               	movwf	clcd_print@addr^0,c
  3017   000812  EC73  F014         	call	_clcd_print	;wreg free
  3018   000816                     
  3019                           ;main.c: 316:                             clcd_putch('0' + (count % 10), (0xC0 + (10)));
  3020   000816  0ECA               	movlw	202
  3021   000818  6E0F               	movwf	clcd_putch@addr^0,c
  3022   00081A  C1BA  F009         	movff	_count,___awmod@dividend
  3023   00081E  C1BB  F00A         	movff	_count+1,___awmod@dividend+1
  3024   000822  0E00               	movlw	0
  3025   000824  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3026   000826  0E0A               	movlw	10
  3027   000828  6E0B               	movwf	___awmod@divisor^0,c
  3028   00082A  EC9A  F012         	call	___awmod	;wreg free
  3029   00082E  5009               	movf	?___awmod^0,w,c
  3030   000830  0F30               	addlw	48
  3031   000832  EC80  F016         	call	_clcd_putch
  3032   000836                     
  3033                           ;main.c: 317:                             clcd_putch('0' + ((count / 10) % 10), (0xC0 + 
      +                          (9)));
  3034   000836  0EC9               	movlw	201
  3035   000838  6E0F               	movwf	clcd_putch@addr^0,c
  3036   00083A  0E00               	movlw	0
  3037   00083C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3038   00083E  0E0A               	movlw	10
  3039   000840  6E03               	movwf	___awdiv@divisor^0,c
  3040   000842  C1BA  F001         	movff	_count,___awdiv@dividend
  3041   000846  C1BB  F002         	movff	_count+1,___awdiv@dividend+1
  3042   00084A  EC38  F012         	call	___awdiv	;wreg free
  3043   00084E  C001  F009         	movff	?___awdiv,___awmod@dividend
  3044   000852  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  3045   000856  0E00               	movlw	0
  3046   000858  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3047   00085A  0E0A               	movlw	10
  3048   00085C  6E0B               	movwf	___awmod@divisor^0,c
  3049   00085E  EC9A  F012         	call	___awmod	;wreg free
  3050   000862  5009               	movf	?___awmod^0,w,c
  3051   000864  0F30               	addlw	48
  3052   000866  EC80  F016         	call	_clcd_putch
  3053   00086A                     
  3054                           ;main.c: 318:                             clcd_putch('0' + ((count / 10) / 10), (0xC0 + 
      +                          (8)));
  3055   00086A  0E00               	movlw	0
  3056   00086C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3057   00086E  0E0A               	movlw	10
  3058   000870  6E03               	movwf	___awdiv@divisor^0,c
  3059   000872  C1BA  F001         	movff	_count,___awdiv@dividend
  3060   000876  C1BB  F002         	movff	_count+1,___awdiv@dividend+1
  3061   00087A  EC38  F012         	call	___awdiv	;wreg free
  3062   00087E  C001  F12E         	movff	?___awdiv,_main$1250
  3063   000882  C002  F12F         	movff	?___awdiv+1,_main$1250+1
  3064   000886                     
  3065                           ;main.c: 318:                             clcd_putch('0' + ((count / 10) / 10), (0xC0 + 
      +                          (8)));
  3066   000886  0EC8               	movlw	200
  3067   000888  6E0F               	movwf	clcd_putch@addr^0,c
  3068   00088A  C12E  F001         	movff	_main$1250,___awdiv@dividend
  3069   00088E  C12F  F002         	movff	_main$1250+1,___awdiv@dividend+1
  3070   000892  0E00               	movlw	0
  3071   000894  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3072   000896  0E0A               	movlw	10
  3073   000898  6E03               	movwf	___awdiv@divisor^0,c
  3074   00089A  EC38  F012         	call	___awdiv	;wreg free
  3075   00089E  5001               	movf	?___awdiv^0,w,c
  3076   0008A0  0F30               	addlw	48
  3077   0008A2  EC80  F016         	call	_clcd_putch
  3078   0008A6                     
  3079                           ;main.c: 319:                             clcd_print(" sec ", (0xC0 + (11)));
  3080   0008A6  0EE8               	movlw	low STR_11
  3081   0008A8  6E07               	movwf	clcd_print@data^0,c
  3082   0008AA  0E2F               	movlw	high STR_11
  3083   0008AC  6E08               	movwf	(clcd_print@data+1)^0,c
  3084   0008AE  0ECB               	movlw	203
  3085   0008B0  6E09               	movwf	clcd_print@addr^0,c
  3086   0008B2  EC73  F014         	call	_clcd_print	;wreg free
  3087   0008B6                     
  3088                           ;main.c: 321:                             TMR0IE = 1;
  3089   0008B6  8AF2               	bsf	4082,5,c	;volatile
  3090   0008B8                     
  3091                           ;main.c: 322:                             PEIE = 1;
  3092   0008B8  8CF2               	bsf	4082,6,c	;volatile
  3093   0008BA                     
  3094                           ;main.c: 323:                             GIE = 1;
  3095   0008BA  8EF2               	bsf	4082,7,c	;volatile
  3096   0008BC                     
  3097                           ;main.c: 324:                             if (count == 0) {
  3098   0008BC  0101               	movlb	1	; () banked
  3099   0008BE  51BA               	movf	_count& (0+255),w,b
  3100   0008C0  11BB               	iorwf	(_count+1)& (0+255),w,b
  3101   0008C2  A4D8               	btfss	status,2,c
  3102   0008C4  EF66  F004         	goto	u3121
  3103   0008C8  EF68  F004         	goto	u3120
  3104   0008CC                     u3121:
  3105   0008CC  EF54  F001         	goto	l99
  3106   0008D0                     u3120:
  3107   0008D0                     
  3108                           ; BSR set to: 1
  3109                           ;main.c: 325:                                 TMR0IE = 0;
  3110   0008D0  9AF2               	bcf	4082,5,c	;volatile
  3111                           
  3112                           ;main.c: 326:                                 GIE = 0;
  3113   0008D2  9EF2               	bcf	4082,7,c	;volatile
  3114                           
  3115                           ;main.c: 327:                                 PEIE = 0;
  3116   0008D4  9CF2               	bcf	4082,6,c	;volatile
  3117   0008D6                     
  3118                           ; BSR set to: 1
  3119                           ;main.c: 328:                                 p = 0;
  3120   0008D6  0E00               	movlw	0
  3121   0008D8  6F9C               	movwf	(main@p+1)& (0+255),b
  3122   0008DA  0E00               	movlw	0
  3123   0008DC  6F9B               	movwf	main@p& (0+255),b
  3124                           
  3125                           ;main.c: 329:                                 attempt = 3;
  3126   0008DE  0E00               	movlw	0
  3127   0008E0  6F6C               	movwf	(main@attempt+1)& (0+255),b
  3128   0008E2  0E03               	movlw	3
  3129   0008E4  6F6B               	movwf	main@attempt& (0+255),b
  3130                           
  3131                           ;main.c: 330:                                 count = 120;
  3132   0008E6  0E00               	movlw	0
  3133   0008E8  6FBB               	movwf	(_count+1)& (0+255),b
  3134   0008EA  0E78               	movlw	120
  3135   0008EC  6FBA               	movwf	_count& (0+255),b
  3136   0008EE                     
  3137                           ; BSR set to: 1
  3138                           ;main.c: 331:                                 clcd_print("                ", (0xC0 + (0)
      +                          ));
  3139   0008EE  0E01               	movlw	low STR_5
  3140   0008F0  6E07               	movwf	clcd_print@data^0,c
  3141   0008F2  0E2F               	movlw	high STR_5
  3142   0008F4  6E08               	movwf	(clcd_print@data+1)^0,c
  3143   0008F6  0EC0               	movlw	192
  3144   0008F8  6E09               	movwf	clcd_print@addr^0,c
  3145   0008FA  EC73  F014         	call	_clcd_print	;wreg free
  3146   0008FE  EF54  F001         	goto	l3792
  3147   000902                     l3960:
  3148                           
  3149                           ; BSR set to: 1
  3150                           ;main.c: 349:             {;main.c: 350:                 clcd_print(menu[m], (0x80 + (2)
      +                          ));
  3151   000902  5191               	movf	main@m& (0+255),w,b
  3152   000904  0D14               	mullw	20
  3153   000906  50F3               	movf	243,w,c
  3154   000908  0F60               	addlw	low _menu
  3155   00090A  6E39               	movwf	??_main^0,c
  3156   00090C  C039  F007         	movff	??_main,clcd_print@data
  3157   000910  6A08               	clrf	(clcd_print@data+1)^0,c
  3158   000912  0E82               	movlw	130
  3159   000914  6E09               	movwf	clcd_print@addr^0,c
  3160   000916  EC73  F014         	call	_clcd_print	;wreg free
  3161                           
  3162                           ;main.c: 352:                 clcd_print(menu[m + 1], (0xC0 + (2)));
  3163   00091A  0101               	movlb	1	; () banked
  3164   00091C  5191               	movf	main@m& (0+255),w,b
  3165   00091E  0D14               	mullw	20
  3166   000920  50F3               	movf	243,w,c
  3167   000922  0F74               	addlw	low (_menu+20)
  3168   000924  6E39               	movwf	??_main^0,c
  3169   000926  C039  F007         	movff	??_main,clcd_print@data
  3170   00092A  6A08               	clrf	(clcd_print@data+1)^0,c
  3171   00092C  0EC2               	movlw	194
  3172   00092E  6E09               	movwf	clcd_print@addr^0,c
  3173   000930  EC73  F014         	call	_clcd_print	;wreg free
  3174   000934                     
  3175                           ;main.c: 354:                 unsigned int key1 = read_switches(0);
  3176   000934  0E00               	movlw	0
  3177   000936  ECC8  F013         	call	_read_switches
  3178   00093A  6E39               	movwf	??_main^0,c
  3179   00093C  5039               	movf	??_main^0,w,c
  3180   00093E  0101               	movlb	1	; () banked
  3181   000940  6F7F               	movwf	main@key1& (0+255),b
  3182   000942  6B80               	clrf	(main@key1+1)& (0+255),b
  3183   000944                     
  3184                           ; BSR set to: 1
  3185                           ;main.c: 356:                 if (key1 != 255) {
  3186   000944  297F               	incf	main@key1& (0+255),w,b
  3187   000946  1180               	iorwf	(main@key1+1)& (0+255),w,b
  3188   000948  B4D8               	btfsc	status,2,c
  3189   00094A  EFA9  F004         	goto	u3131
  3190   00094E  EFAB  F004         	goto	u3130
  3191   000952                     u3131:
  3192   000952  EFF6  F004         	goto	l3986
  3193   000956                     u3130:
  3194   000956                     
  3195                           ; BSR set to: 1
  3196                           ;main.c: 357:                     time1++;
  3197   000956  4B79               	infsnz	main@time1& (0+255),f,b
  3198   000958  2B7A               	incf	(main@time1+1)& (0+255),f,b
  3199   00095A                     
  3200                           ; BSR set to: 1
  3201                           ;main.c: 358:                     prekey = key1;
  3202   00095A  C17F  F15B         	movff	main@key1,main@prekey
  3203   00095E  C180  F15C         	movff	main@key1+1,main@prekey+1
  3204   000962                     
  3205                           ; BSR set to: 1
  3206                           ;main.c: 359:                     if (time1 == 1000) {
  3207   000962  0EE8               	movlw	232
  3208   000964  1979               	xorwf	main@time1& (0+255),w,b
  3209   000966  E107               	bnz	u3141
  3210   000968  0E03               	movlw	3
  3211   00096A  197A               	xorwf	(main@time1+1)& (0+255),w,b
  3212   00096C  A4D8               	btfss	status,2,c
  3213   00096E  EFBB  F004         	goto	u3141
  3214   000972  EFBD  F004         	goto	u3140
  3215   000976                     u3141:
  3216   000976  EF69  F005         	goto	l4012
  3217   00097A                     u3140:
  3218   00097A                     
  3219                           ; BSR set to: 1
  3220                           ;main.c: 360:                         time1 = 0;
  3221   00097A  0E00               	movlw	0
  3222   00097C  6F7A               	movwf	(main@time1+1)& (0+255),b
  3223   00097E  0E00               	movlw	0
  3224   000980  6F79               	movwf	main@time1& (0+255),b
  3225   000982                     
  3226                           ; BSR set to: 1
  3227                           ;main.c: 361:                         if (key1 == 5) {
  3228   000982  0E05               	movlw	5
  3229   000984  197F               	xorwf	main@key1& (0+255),w,b
  3230   000986  1180               	iorwf	(main@key1+1)& (0+255),w,b
  3231   000988  A4D8               	btfss	status,2,c
  3232   00098A  EFC9  F004         	goto	u3151
  3233   00098E  EFCB  F004         	goto	u3150
  3234   000992                     u3151:
  3235   000992  EFDF  F004         	goto	l3980
  3236   000996                     u3150:
  3237   000996                     
  3238                           ; BSR set to: 1
  3239                           ;main.c: 362:                             clcd_write(0x01, 0);
  3240   000996  0E00               	movlw	0
  3241   000998  6E01               	movwf	clcd_write@control_bit^0,c
  3242   00099A  0E01               	movlw	1
  3243   00099C  EC99  F015         	call	_clcd_write
  3244   0009A0                     
  3245                           ;main.c: 363:                             mode = m + sflag + 3 + 1;
  3246   0009A0  0101               	movlb	1	; () banked
  3247   0009A2  5193               	movf	main@sflag& (0+255),w,b
  3248   0009A4  2591               	addwf	main@m& (0+255),w,b
  3249   0009A6  6E39               	movwf	??_main^0,c
  3250   0009A8  5194               	movf	(main@sflag+1)& (0+255),w,b
  3251   0009AA  2192               	addwfc	(main@m+1)& (0+255),w,b
  3252   0009AC  6E3A               	movwf	(??_main+1)^0,c
  3253   0009AE  0E04               	movlw	4
  3254   0009B0  2439               	addwf	??_main^0,w,c
  3255   0009B2  6F77               	movwf	main@mode& (0+255),b
  3256   0009B4  0E00               	movlw	0
  3257   0009B6  203A               	addwfc	(??_main+1)^0,w,c
  3258   0009B8  6F78               	movwf	(main@mode+1)& (0+255),b
  3259                           
  3260                           ;main.c: 369:                         } else if (key1 == 6) {
  3261   0009BA  EF69  F005         	goto	l4012
  3262   0009BE                     l3980:
  3263                           
  3264                           ; BSR set to: 1
  3265   0009BE  0E06               	movlw	6
  3266   0009C0  197F               	xorwf	main@key1& (0+255),w,b
  3267   0009C2  1180               	iorwf	(main@key1+1)& (0+255),w,b
  3268   0009C4  A4D8               	btfss	status,2,c
  3269   0009C6  EFE7  F004         	goto	u3161
  3270   0009CA  EFE9  F004         	goto	u3160
  3271   0009CE                     u3161:
  3272   0009CE  EFF4  F004         	goto	l137
  3273   0009D2                     u3160:
  3274   0009D2                     
  3275                           ; BSR set to: 1
  3276                           ;main.c: 371:                             mode=1;
  3277   0009D2  0E00               	movlw	0
  3278   0009D4  6F78               	movwf	(main@mode+1)& (0+255),b
  3279   0009D6  0E01               	movlw	1
  3280   0009D8  6F77               	movwf	main@mode& (0+255),b
  3281   0009DA                     
  3282                           ; BSR set to: 1
  3283                           ;main.c: 372:                             clcd_write(0x01, 0);
  3284   0009DA  0E00               	movlw	0
  3285   0009DC  6E01               	movwf	clcd_write@control_bit^0,c
  3286   0009DE  0E01               	movlw	1
  3287   0009E0  EC99  F015         	call	_clcd_write
  3288   0009E4  EF69  F005         	goto	l4012
  3289   0009E8                     l137:
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;main.c: 375:                 } else if (time1 < 1000 && time1 > 0) {
  3293   0009E8  EF69  F005         	goto	l4012
  3294   0009EC                     l3986:
  3295                           
  3296                           ; BSR set to: 1
  3297   0009EC  BF7A               	btfsc	(main@time1+1)& (0+255),7,b
  3298   0009EE  EF04  F005         	goto	u3170
  3299   0009F2  0EE8               	movlw	232
  3300   0009F4  5D79               	subwf	main@time1& (0+255),w,b
  3301   0009F6  0E03               	movlw	3
  3302   0009F8  597A               	subwfb	(main@time1+1)& (0+255),w,b
  3303   0009FA  B0D8               	btfsc	status,0,c
  3304   0009FC  EF02  F005         	goto	u3171
  3305   000A00  EF04  F005         	goto	u3170
  3306   000A04                     u3171:
  3307   000A04  EF69  F005         	goto	l4012
  3308   000A08                     u3170:
  3309   000A08                     
  3310                           ; BSR set to: 1
  3311   000A08  BF7A               	btfsc	(main@time1+1)& (0+255),7,b
  3312   000A0A  EF0F  F005         	goto	u3181
  3313   000A0E  517A               	movf	(main@time1+1)& (0+255),w,b
  3314   000A10  E108               	bnz	u3180
  3315   000A12  0579               	decf	main@time1& (0+255),w,b
  3316   000A14  A0D8               	btfss	status,0,c
  3317   000A16  EF0F  F005         	goto	u3181
  3318   000A1A  EF11  F005         	goto	u3180
  3319   000A1E                     u3181:
  3320   000A1E  EF69  F005         	goto	l4012
  3321   000A22                     u3180:
  3322   000A22                     
  3323                           ; BSR set to: 1
  3324                           ;main.c: 376:                     time1 = 0;
  3325   000A22  0E00               	movlw	0
  3326   000A24  6F7A               	movwf	(main@time1+1)& (0+255),b
  3327   000A26  0E00               	movlw	0
  3328   000A28  6F79               	movwf	main@time1& (0+255),b
  3329   000A2A                     
  3330                           ; BSR set to: 1
  3331                           ;main.c: 377:                     if (prekey == 6) {
  3332   000A2A  0E06               	movlw	6
  3333   000A2C  195B               	xorwf	main@prekey& (0+255),w,b
  3334   000A2E  115C               	iorwf	(main@prekey+1)& (0+255),w,b
  3335   000A30  A4D8               	btfss	status,2,c
  3336   000A32  EF1D  F005         	goto	u3191
  3337   000A36  EF1F  F005         	goto	u3190
  3338   000A3A                     u3191:
  3339   000A3A  EF40  F005         	goto	l4002
  3340   000A3E                     u3190:
  3341   000A3E                     
  3342                           ; BSR set to: 1
  3343                           ;main.c: 378:                         if (sflag == 0) {
  3344   000A3E  5193               	movf	main@sflag& (0+255),w,b
  3345   000A40  1194               	iorwf	(main@sflag+1)& (0+255),w,b
  3346   000A42  A4D8               	btfss	status,2,c
  3347   000A44  EF26  F005         	goto	u3201
  3348   000A48  EF28  F005         	goto	u3200
  3349   000A4C                     u3201:
  3350   000A4C  EF2E  F005         	goto	l3998
  3351   000A50                     u3200:
  3352   000A50                     
  3353                           ; BSR set to: 1
  3354                           ;main.c: 379:                             sflag = 1;
  3355   000A50  0E00               	movlw	0
  3356   000A52  6F94               	movwf	(main@sflag+1)& (0+255),b
  3357   000A54  0E01               	movlw	1
  3358   000A56  6F93               	movwf	main@sflag& (0+255),b
  3359                           
  3360                           ;main.c: 380:                         } else if (m < 3) {
  3361   000A58  EF69  F005         	goto	l4012
  3362   000A5C                     l3998:
  3363                           
  3364                           ; BSR set to: 1
  3365   000A5C  BF92               	btfsc	(main@m+1)& (0+255),7,b
  3366   000A5E  EF3C  F005         	goto	u3210
  3367   000A62  5192               	movf	(main@m+1)& (0+255),w,b
  3368   000A64  E107               	bnz	u3211
  3369   000A66  0E03               	movlw	3
  3370   000A68  5D91               	subwf	main@m& (0+255),w,b
  3371   000A6A  B0D8               	btfsc	status,0,c
  3372   000A6C  EF3A  F005         	goto	u3211
  3373   000A70  EF3C  F005         	goto	u3210
  3374   000A74                     u3211:
  3375   000A74  EFF4  F004         	goto	l137
  3376   000A78                     u3210:
  3377   000A78                     
  3378                           ; BSR set to: 1
  3379                           ;main.c: 381:                             m++;
  3380   000A78  4B91               	infsnz	main@m& (0+255),f,b
  3381   000A7A  2B92               	incf	(main@m+1)& (0+255),f,b
  3382   000A7C  EF69  F005         	goto	l4012
  3383   000A80                     l4002:
  3384                           
  3385                           ; BSR set to: 1
  3386   000A80  0E05               	movlw	5
  3387   000A82  195B               	xorwf	main@prekey& (0+255),w,b
  3388   000A84  115C               	iorwf	(main@prekey+1)& (0+255),w,b
  3389   000A86  A4D8               	btfss	status,2,c
  3390   000A88  EF48  F005         	goto	u3221
  3391   000A8C  EF4A  F005         	goto	u3220
  3392   000A90                     u3221:
  3393   000A90  EF69  F005         	goto	l4012
  3394   000A94                     u3220:
  3395   000A94                     
  3396                           ; BSR set to: 1
  3397                           ;main.c: 385:                         if (sflag == 1) {
  3398   000A94  0593               	decf	main@sflag& (0+255),w,b
  3399   000A96  1194               	iorwf	(main@sflag+1)& (0+255),w,b
  3400   000A98  A4D8               	btfss	status,2,c
  3401   000A9A  EF51  F005         	goto	u3231
  3402   000A9E  EF53  F005         	goto	u3230
  3403   000AA2                     u3231:
  3404   000AA2  EF59  F005         	goto	l4008
  3405   000AA6                     u3230:
  3406   000AA6                     
  3407                           ; BSR set to: 1
  3408                           ;main.c: 386:                             sflag = 0;
  3409   000AA6  0E00               	movlw	0
  3410   000AA8  6F94               	movwf	(main@sflag+1)& (0+255),b
  3411   000AAA  0E00               	movlw	0
  3412   000AAC  6F93               	movwf	main@sflag& (0+255),b
  3413                           
  3414                           ;main.c: 387:                         } else if (m > 0) {
  3415   000AAE  EF69  F005         	goto	l4012
  3416   000AB2                     l4008:
  3417                           
  3418                           ; BSR set to: 1
  3419   000AB2  BF92               	btfsc	(main@m+1)& (0+255),7,b
  3420   000AB4  EF64  F005         	goto	u3241
  3421   000AB8  5192               	movf	(main@m+1)& (0+255),w,b
  3422   000ABA  E108               	bnz	u3240
  3423   000ABC  0591               	decf	main@m& (0+255),w,b
  3424   000ABE  A0D8               	btfss	status,0,c
  3425   000AC0  EF64  F005         	goto	u3241
  3426   000AC4  EF66  F005         	goto	u3240
  3427   000AC8                     u3241:
  3428   000AC8  EF69  F005         	goto	l4012
  3429   000ACC                     u3240:
  3430   000ACC                     
  3431                           ; BSR set to: 1
  3432                           ;main.c: 388:                             m--;
  3433   000ACC  0791               	decf	main@m& (0+255),f,b
  3434   000ACE  A0D8               	btfss	status,0,c
  3435   000AD0  0792               	decf	(main@m+1)& (0+255),f,b
  3436   000AD2                     l4012:
  3437                           
  3438                           ;main.c: 398:                 if (sflag == 0) {
  3439   000AD2  0101               	movlb	1	; () banked
  3440   000AD4  5193               	movf	main@sflag& (0+255),w,b
  3441   000AD6  1194               	iorwf	(main@sflag+1)& (0+255),w,b
  3442   000AD8  A4D8               	btfss	status,2,c
  3443   000ADA  EF71  F005         	goto	u3251
  3444   000ADE  EF73  F005         	goto	u3250
  3445   000AE2                     u3251:
  3446   000AE2  EF85  F005         	goto	l4016
  3447   000AE6                     u3250:
  3448   000AE6                     
  3449                           ; BSR set to: 1
  3450                           ;main.c: 399:                     clcd_print("* ", (0x80 + (0)));
  3451   000AE6  0EFC               	movlw	low STR_13
  3452   000AE8  6E07               	movwf	clcd_print@data^0,c
  3453   000AEA  0E2F               	movlw	high STR_13
  3454   000AEC  6E08               	movwf	(clcd_print@data+1)^0,c
  3455   000AEE  0E80               	movlw	128
  3456   000AF0  6E09               	movwf	clcd_print@addr^0,c
  3457   000AF2  EC73  F014         	call	_clcd_print	;wreg free
  3458                           
  3459                           ;main.c: 400:                     clcd_print("  ", (0xC0 + (0)));
  3460   000AF6  0E0F               	movlw	low (STR_5+14)
  3461   000AF8  6E07               	movwf	clcd_print@data^0,c
  3462   000AFA  0E2F               	movlw	high (STR_5+14)
  3463   000AFC  6E08               	movwf	(clcd_print@data+1)^0,c
  3464   000AFE  0EC0               	movlw	192
  3465   000B00  6E09               	movwf	clcd_print@addr^0,c
  3466   000B02  EC73  F014         	call	_clcd_print	;wreg free
  3467                           
  3468                           ;main.c: 401:                 } else if (sflag == 1) {
  3469   000B06  EF54  F001         	goto	l3792
  3470   000B0A                     l4016:
  3471                           
  3472                           ; BSR set to: 1
  3473   000B0A  0593               	decf	main@sflag& (0+255),w,b
  3474   000B0C  1194               	iorwf	(main@sflag+1)& (0+255),w,b
  3475   000B0E  A4D8               	btfss	status,2,c
  3476   000B10  EF8C  F005         	goto	u3261
  3477   000B14  EF8E  F005         	goto	u3260
  3478   000B18                     u3261:
  3479   000B18  EF54  F001         	goto	l99
  3480   000B1C                     u3260:
  3481   000B1C                     
  3482                           ; BSR set to: 1
  3483                           ;main.c: 402:                     clcd_print("  ", (0x80 + (0)));
  3484   000B1C  0E0F               	movlw	low (STR_5+14)
  3485   000B1E  6E07               	movwf	clcd_print@data^0,c
  3486   000B20  0E2F               	movlw	high (STR_5+14)
  3487   000B22  6E08               	movwf	(clcd_print@data+1)^0,c
  3488   000B24  0E80               	movlw	128
  3489   000B26  6E09               	movwf	clcd_print@addr^0,c
  3490   000B28  EC73  F014         	call	_clcd_print	;wreg free
  3491                           
  3492                           ;main.c: 403:                     clcd_print("* ", (0xC0 + (0)));
  3493   000B2C  0EFC               	movlw	low STR_13
  3494   000B2E  6E07               	movwf	clcd_print@data^0,c
  3495   000B30  0E2F               	movlw	high STR_13
  3496   000B32  6E08               	movwf	(clcd_print@data+1)^0,c
  3497   000B34  0EC0               	movlw	192
  3498   000B36  6E09               	movwf	clcd_print@addr^0,c
  3499   000B38  EC73  F014         	call	_clcd_print	;wreg free
  3500   000B3C  EF54  F001         	goto	l3792
  3501   000B40                     l4020:
  3502                           
  3503                           ; BSR set to: 1
  3504                           ;main.c: 412:             {;main.c: 414:                 char a = 0;
  3505   000B40  0E00               	movlw	0
  3506   000B42  6FA9               	movwf	main@a& (0+255),b
  3507   000B44                     
  3508                           ; BSR set to: 1
  3509                           ;main.c: 436:                 unsigned int key2 = read_switches(0);
  3510   000B44  0E00               	movlw	0
  3511   000B46  ECC8  F013         	call	_read_switches
  3512   000B4A  6E39               	movwf	??_main^0,c
  3513   000B4C  5039               	movf	??_main^0,w,c
  3514   000B4E  0101               	movlb	1	; () banked
  3515   000B50  6F6D               	movwf	main@key2& (0+255),b
  3516   000B52  6B6E               	clrf	(main@key2+1)& (0+255),b
  3517   000B54                     
  3518                           ; BSR set to: 1
  3519                           ;main.c: 438:                 {;main.c: 440:                     if (key2 != 255) {
  3520   000B54  296D               	incf	main@key2& (0+255),w,b
  3521   000B56  116E               	iorwf	(main@key2+1)& (0+255),w,b
  3522   000B58  B4D8               	btfsc	status,2,c
  3523   000B5A  EFB1  F005         	goto	u3271
  3524   000B5E  EFB3  F005         	goto	u3270
  3525   000B62                     u3271:
  3526   000B62  EFDB  F005         	goto	l4038
  3527   000B66                     u3270:
  3528   000B66                     
  3529                           ; BSR set to: 1
  3530                           ;main.c: 441:                         time2++;
  3531   000B66  4B7B               	infsnz	main@time2& (0+255),f,b
  3532   000B68  2B7C               	incf	(main@time2+1)& (0+255),f,b
  3533   000B6A                     
  3534                           ; BSR set to: 1
  3535                           ;main.c: 442:                         prekey2 = key2;
  3536   000B6A  C16D  F15D         	movff	main@key2,main@prekey2
  3537   000B6E  C16E  F15E         	movff	main@key2+1,main@prekey2+1
  3538   000B72                     
  3539                           ; BSR set to: 1
  3540                           ;main.c: 443:                         if (time2 == 1000) {
  3541   000B72  0EE8               	movlw	232
  3542   000B74  197B               	xorwf	main@time2& (0+255),w,b
  3543   000B76  E107               	bnz	u3281
  3544   000B78  0E03               	movlw	3
  3545   000B7A  197C               	xorwf	(main@time2+1)& (0+255),w,b
  3546   000B7C  A4D8               	btfss	status,2,c
  3547   000B7E  EFC3  F005         	goto	u3281
  3548   000B82  EFC5  F005         	goto	u3280
  3549   000B86                     u3281:
  3550   000B86  EF67  F006         	goto	l4064
  3551   000B8A                     u3280:
  3552   000B8A                     
  3553                           ; BSR set to: 1
  3554                           ;main.c: 444:                             time2 = 0;
  3555   000B8A  0E00               	movlw	0
  3556   000B8C  6F7C               	movwf	(main@time2+1)& (0+255),b
  3557   000B8E  0E00               	movlw	0
  3558   000B90  6F7B               	movwf	main@time2& (0+255),b
  3559   000B92                     
  3560                           ; BSR set to: 1
  3561                           ;main.c: 445:                             if (key2 == 6) {
  3562   000B92  0E06               	movlw	6
  3563   000B94  196D               	xorwf	main@key2& (0+255),w,b
  3564   000B96  116E               	iorwf	(main@key2+1)& (0+255),w,b
  3565   000B98  A4D8               	btfss	status,2,c
  3566   000B9A  EFD1  F005         	goto	u3291
  3567   000B9E  EFD3  F005         	goto	u3290
  3568   000BA2                     u3291:
  3569   000BA2  EF67  F006         	goto	l4064
  3570   000BA6                     u3290:
  3571   000BA6                     
  3572                           ; BSR set to: 1
  3573                           ;main.c: 446:                                 mode = 3;
  3574   000BA6  0E00               	movlw	0
  3575   000BA8  6F78               	movwf	(main@mode+1)& (0+255),b
  3576   000BAA  0E03               	movlw	3
  3577   000BAC  6F77               	movwf	main@mode& (0+255),b
  3578   000BAE  EF67  F006         	goto	l4064
  3579   000BB2                     l157:
  3580                           
  3581                           ; BSR set to: 1
  3582                           ;main.c: 450:                     } else if (time2 < 1000 && time2 > 0) {
  3583   000BB2  EF67  F006         	goto	l4064
  3584   000BB6                     l4038:
  3585                           
  3586                           ; BSR set to: 1
  3587   000BB6  BF7C               	btfsc	(main@time2+1)& (0+255),7,b
  3588   000BB8  EFE9  F005         	goto	u3300
  3589   000BBC  0EE8               	movlw	232
  3590   000BBE  5D7B               	subwf	main@time2& (0+255),w,b
  3591   000BC0  0E03               	movlw	3
  3592   000BC2  597C               	subwfb	(main@time2+1)& (0+255),w,b
  3593   000BC4  B0D8               	btfsc	status,0,c
  3594   000BC6  EFE7  F005         	goto	u3301
  3595   000BCA  EFE9  F005         	goto	u3300
  3596   000BCE                     u3301:
  3597   000BCE  EF67  F006         	goto	l4064
  3598   000BD2                     u3300:
  3599   000BD2                     
  3600                           ; BSR set to: 1
  3601   000BD2  BF7C               	btfsc	(main@time2+1)& (0+255),7,b
  3602   000BD4  EFF4  F005         	goto	u3311
  3603   000BD8  517C               	movf	(main@time2+1)& (0+255),w,b
  3604   000BDA  E108               	bnz	u3310
  3605   000BDC  057B               	decf	main@time2& (0+255),w,b
  3606   000BDE  A0D8               	btfss	status,0,c
  3607   000BE0  EFF4  F005         	goto	u3311
  3608   000BE4  EFF6  F005         	goto	u3310
  3609   000BE8                     u3311:
  3610   000BE8  EF67  F006         	goto	l4064
  3611   000BEC                     u3310:
  3612   000BEC                     
  3613                           ; BSR set to: 1
  3614                           ;main.c: 451:                         time2 = 0;
  3615   000BEC  0E00               	movlw	0
  3616   000BEE  6F7C               	movwf	(main@time2+1)& (0+255),b
  3617   000BF0  0E00               	movlw	0
  3618   000BF2  6F7B               	movwf	main@time2& (0+255),b
  3619   000BF4                     
  3620                           ; BSR set to: 1
  3621                           ;main.c: 453:                         if (prekey2 == 5) {
  3622   000BF4  0E05               	movlw	5
  3623   000BF6  195D               	xorwf	main@prekey2& (0+255),w,b
  3624   000BF8  115E               	iorwf	(main@prekey2+1)& (0+255),w,b
  3625   000BFA  A4D8               	btfss	status,2,c
  3626   000BFC  EF02  F006         	goto	u3321
  3627   000C00  EF04  F006         	goto	u3320
  3628   000C04                     u3321:
  3629   000C04  EF4D  F006         	goto	l4058
  3630   000C08                     u3320:
  3631   000C08                     
  3632                           ; BSR set to: 1
  3633                           ;main.c: 454:                             if (o_flag == 0) {
  3634   000C08  51F1               	movf	_o_flag& (0+255),w,b
  3635   000C0A  A4D8               	btfss	status,2,c
  3636   000C0C  EF0A  F006         	goto	u3331
  3637   000C10  EF0C  F006         	goto	u3330
  3638   000C14                     u3331:
  3639   000C14  EF30  F006         	goto	l4052
  3640   000C18                     u3330:
  3641   000C18                     
  3642                           ; BSR set to: 1
  3643                           ;main.c: 455:                                 if (scv < (address / 10) - 1)
  3644   000C18  C1EF  F001         	movff	main@address,___awdiv@dividend
  3645   000C1C  C1F0  F002         	movff	main@address+1,___awdiv@dividend+1
  3646   000C20  0E00               	movlw	0
  3647   000C22  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3648   000C24  0E0A               	movlw	10
  3649   000C26  6E03               	movwf	___awdiv@divisor^0,c
  3650   000C28  EC38  F012         	call	___awdiv	;wreg free
  3651   000C2C  0EFF               	movlw	255
  3652   000C2E  2401               	addwf	?___awdiv^0,w,c
  3653   000C30  6E39               	movwf	??_main^0,c
  3654   000C32  0EFF               	movlw	255
  3655   000C34  2002               	addwfc	(?___awdiv+1)^0,w,c
  3656   000C36  6E3A               	movwf	(??_main+1)^0,c
  3657   000C38  5039               	movf	??_main^0,w,c
  3658   000C3A  0101               	movlb	1	; () banked
  3659   000C3C  5DAE               	subwf	main@scv& (0+255),w,b
  3660   000C3E  51AF               	movf	(main@scv+1)& (0+255),w,b
  3661   000C40  0A80               	xorlw	128
  3662   000C42  6E3B               	movwf	(??_main+2)^0,c
  3663   000C44  503A               	movf	(??_main+1)^0,w,c
  3664   000C46  0A80               	xorlw	128
  3665   000C48  583B               	subwfb	(??_main+2)^0,w,c
  3666   000C4A  B0D8               	btfsc	status,0,c
  3667   000C4C  EF2A  F006         	goto	u3341
  3668   000C50  EF2C  F006         	goto	u3340
  3669   000C54                     u3341:
  3670   000C54  EFD9  F005         	goto	l157
  3671   000C58                     u3340:
  3672   000C58                     l4050:
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;main.c: 456:                                     scv++;
  3676   000C58  4BAE               	infsnz	main@scv& (0+255),f,b
  3677   000C5A  2BAF               	incf	(main@scv+1)& (0+255),f,b
  3678   000C5C  EF67  F006         	goto	l4064
  3679   000C60                     l4052:
  3680                           
  3681                           ; BSR set to: 1
  3682                           ;main.c: 459:                                 a = address / 10;
  3683   000C60  C1EF  F001         	movff	main@address,___awdiv@dividend
  3684   000C64  C1F0  F002         	movff	main@address+1,___awdiv@dividend+1
  3685   000C68  0E00               	movlw	0
  3686   000C6A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3687   000C6C  0E0A               	movlw	10
  3688   000C6E  6E03               	movwf	___awdiv@divisor^0,c
  3689   000C70  EC38  F012         	call	___awdiv	;wreg free
  3690   000C74  5001               	movf	?___awdiv^0,w,c
  3691   000C76  0101               	movlb	1	; () banked
  3692   000C78  6FA9               	movwf	main@a& (0+255),b
  3693   000C7A                     
  3694                           ; BSR set to: 1
  3695                           ;main.c: 460:                                 if (scv < 9)
  3696   000C7A  BFAF               	btfsc	(main@scv+1)& (0+255),7,b
  3697   000C7C  EF4B  F006         	goto	u3350
  3698   000C80  51AF               	movf	(main@scv+1)& (0+255),w,b
  3699   000C82  E107               	bnz	u3351
  3700   000C84  0E09               	movlw	9
  3701   000C86  5DAE               	subwf	main@scv& (0+255),w,b
  3702   000C88  B0D8               	btfsc	status,0,c
  3703   000C8A  EF49  F006         	goto	u3351
  3704   000C8E  EF4B  F006         	goto	u3350
  3705   000C92                     u3351:
  3706   000C92  EFD9  F005         	goto	l157
  3707   000C96                     u3350:
  3708   000C96  EF2C  F006         	goto	l4050
  3709   000C9A                     l4058:
  3710                           
  3711                           ; BSR set to: 1
  3712   000C9A  0E06               	movlw	6
  3713   000C9C  195D               	xorwf	main@prekey2& (0+255),w,b
  3714   000C9E  115E               	iorwf	(main@prekey2+1)& (0+255),w,b
  3715   000CA0  A4D8               	btfss	status,2,c
  3716   000CA2  EF55  F006         	goto	u3361
  3717   000CA6  EF57  F006         	goto	u3360
  3718   000CAA                     u3361:
  3719   000CAA  EF67  F006         	goto	l4064
  3720   000CAE                     u3360:
  3721   000CAE                     
  3722                           ; BSR set to: 1
  3723   000CAE  BFAF               	btfsc	(main@scv+1)& (0+255),7,b
  3724   000CB0  EF62  F006         	goto	u3371
  3725   000CB4  51AF               	movf	(main@scv+1)& (0+255),w,b
  3726   000CB6  E108               	bnz	u3370
  3727   000CB8  05AE               	decf	main@scv& (0+255),w,b
  3728   000CBA  A0D8               	btfss	status,0,c
  3729   000CBC  EF62  F006         	goto	u3371
  3730   000CC0  EF64  F006         	goto	u3370
  3731   000CC4                     u3371:
  3732   000CC4  EF67  F006         	goto	l4064
  3733   000CC8                     u3370:
  3734   000CC8                     
  3735                           ; BSR set to: 1
  3736                           ;main.c: 464:                             scv--;
  3737   000CC8  07AE               	decf	main@scv& (0+255),f,b
  3738   000CCA  A0D8               	btfss	status,0,c
  3739   000CCC  07AF               	decf	(main@scv+1)& (0+255),f,b
  3740   000CCE                     l4064:
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;main.c: 470:                 };main.c: 475:                 char event1 = read_internal
      +                          _eeprom(0 + ((scv + a) % 10 * 10));
  3744   000CCE  51A9               	movf	main@a& (0+255),w,b
  3745   000CD0  25AE               	addwf	main@scv& (0+255),w,b
  3746   000CD2  6E09               	movwf	___awmod@dividend^0,c
  3747   000CD4  0E00               	movlw	0
  3748   000CD6  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3749   000CD8  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3750   000CDA  0E00               	movlw	0
  3751   000CDC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3752   000CDE  0E0A               	movlw	10
  3753   000CE0  6E0B               	movwf	___awmod@divisor^0,c
  3754   000CE2  EC9A  F012         	call	___awmod	;wreg free
  3755   000CE6  5009               	movf	?___awmod^0,w,c
  3756   000CE8  0D0A               	mullw	10
  3757   000CEA  50F3               	movf	243,w,c
  3758   000CEC  ECAD  F016         	call	_read_internal_eeprom
  3759   000CF0  0101               	movlb	1	; () banked
  3760   000CF2  6F3C               	movwf	main@event1& (0+255),b
  3761   000CF4                     
  3762                           ; BSR set to: 1
  3763                           ;main.c: 476:                 char event2 = read_internal_eeprom(1 + ((scv + a) % 10 * 1
      +                          0));
  3764   000CF4  51A9               	movf	main@a& (0+255),w,b
  3765   000CF6  25AE               	addwf	main@scv& (0+255),w,b
  3766   000CF8  6E09               	movwf	___awmod@dividend^0,c
  3767   000CFA  0E00               	movlw	0
  3768   000CFC  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3769   000CFE  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3770   000D00  0E00               	movlw	0
  3771   000D02  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3772   000D04  0E0A               	movlw	10
  3773   000D06  6E0B               	movwf	___awmod@divisor^0,c
  3774   000D08  EC9A  F012         	call	___awmod	;wreg free
  3775   000D0C  5009               	movf	?___awmod^0,w,c
  3776   000D0E  0D0A               	mullw	10
  3777   000D10  28F3               	incf	243,w,c
  3778   000D12  ECAD  F016         	call	_read_internal_eeprom
  3779   000D16  0101               	movlb	1	; () banked
  3780   000D18  6F3D               	movwf	main@event2& (0+255),b
  3781   000D1A                     
  3782                           ; BSR set to: 1
  3783                           ;main.c: 477:                 char event3 = read_internal_eeprom(2 + ((scv + a) % 10 * 1
      +                          0));
  3784   000D1A  51A9               	movf	main@a& (0+255),w,b
  3785   000D1C  25AE               	addwf	main@scv& (0+255),w,b
  3786   000D1E  6E09               	movwf	___awmod@dividend^0,c
  3787   000D20  0E00               	movlw	0
  3788   000D22  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3789   000D24  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3790   000D26  0E00               	movlw	0
  3791   000D28  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3792   000D2A  0E0A               	movlw	10
  3793   000D2C  6E0B               	movwf	___awmod@divisor^0,c
  3794   000D2E  EC9A  F012         	call	___awmod	;wreg free
  3795   000D32  5009               	movf	?___awmod^0,w,c
  3796   000D34  0D0A               	mullw	10
  3797   000D36  50F3               	movf	243,w,c
  3798   000D38  0F02               	addlw	2
  3799   000D3A  ECAD  F016         	call	_read_internal_eeprom
  3800   000D3E  0101               	movlb	1	; () banked
  3801   000D40  6F3E               	movwf	main@event3& (0+255),b
  3802   000D42                     
  3803                           ; BSR set to: 1
  3804                           ;main.c: 478:                 char event4 = read_internal_eeprom(3 + ((scv + a) % 10 * 1
      +                          0));
  3805   000D42  51A9               	movf	main@a& (0+255),w,b
  3806   000D44  25AE               	addwf	main@scv& (0+255),w,b
  3807   000D46  6E09               	movwf	___awmod@dividend^0,c
  3808   000D48  0E00               	movlw	0
  3809   000D4A  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3810   000D4C  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3811   000D4E  0E00               	movlw	0
  3812   000D50  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3813   000D52  0E0A               	movlw	10
  3814   000D54  6E0B               	movwf	___awmod@divisor^0,c
  3815   000D56  EC9A  F012         	call	___awmod	;wreg free
  3816   000D5A  5009               	movf	?___awmod^0,w,c
  3817   000D5C  0D0A               	mullw	10
  3818   000D5E  50F3               	movf	243,w,c
  3819   000D60  0F03               	addlw	3
  3820   000D62  ECAD  F016         	call	_read_internal_eeprom
  3821   000D66  0101               	movlb	1	; () banked
  3822   000D68  6F3F               	movwf	main@event4& (0+255),b
  3823   000D6A                     
  3824                           ; BSR set to: 1
  3825                           ;main.c: 479:                 char event5 = read_internal_eeprom(4 + ((scv + a) % 10 * 1
      +                          0));
  3826   000D6A  51A9               	movf	main@a& (0+255),w,b
  3827   000D6C  25AE               	addwf	main@scv& (0+255),w,b
  3828   000D6E  6E09               	movwf	___awmod@dividend^0,c
  3829   000D70  0E00               	movlw	0
  3830   000D72  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3831   000D74  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3832   000D76  0E00               	movlw	0
  3833   000D78  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3834   000D7A  0E0A               	movlw	10
  3835   000D7C  6E0B               	movwf	___awmod@divisor^0,c
  3836   000D7E  EC9A  F012         	call	___awmod	;wreg free
  3837   000D82  5009               	movf	?___awmod^0,w,c
  3838   000D84  0D0A               	mullw	10
  3839   000D86  50F3               	movf	243,w,c
  3840   000D88  0F04               	addlw	4
  3841   000D8A  ECAD  F016         	call	_read_internal_eeprom
  3842   000D8E  0101               	movlb	1	; () banked
  3843   000D90  6F40               	movwf	main@event5& (0+255),b
  3844   000D92                     
  3845                           ; BSR set to: 1
  3846                           ;main.c: 480:                 char event6 = read_internal_eeprom(5 + ((scv + a) % 10 * 1
      +                          0));
  3847   000D92  51A9               	movf	main@a& (0+255),w,b
  3848   000D94  25AE               	addwf	main@scv& (0+255),w,b
  3849   000D96  6E09               	movwf	___awmod@dividend^0,c
  3850   000D98  0E00               	movlw	0
  3851   000D9A  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3852   000D9C  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3853   000D9E  0E00               	movlw	0
  3854   000DA0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3855   000DA2  0E0A               	movlw	10
  3856   000DA4  6E0B               	movwf	___awmod@divisor^0,c
  3857   000DA6  EC9A  F012         	call	___awmod	;wreg free
  3858   000DAA  5009               	movf	?___awmod^0,w,c
  3859   000DAC  0D0A               	mullw	10
  3860   000DAE  50F3               	movf	243,w,c
  3861   000DB0  0F05               	addlw	5
  3862   000DB2  ECAD  F016         	call	_read_internal_eeprom
  3863   000DB6  0101               	movlb	1	; () banked
  3864   000DB8  6F41               	movwf	main@event6& (0+255),b
  3865   000DBA                     
  3866                           ; BSR set to: 1
  3867                           ;main.c: 481:                 char event7 = read_internal_eeprom(6 + ((scv + a) % 10 * 1
      +                          0));
  3868   000DBA  51A9               	movf	main@a& (0+255),w,b
  3869   000DBC  25AE               	addwf	main@scv& (0+255),w,b
  3870   000DBE  6E09               	movwf	___awmod@dividend^0,c
  3871   000DC0  0E00               	movlw	0
  3872   000DC2  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3873   000DC4  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3874   000DC6  0E00               	movlw	0
  3875   000DC8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3876   000DCA  0E0A               	movlw	10
  3877   000DCC  6E0B               	movwf	___awmod@divisor^0,c
  3878   000DCE  EC9A  F012         	call	___awmod	;wreg free
  3879   000DD2  5009               	movf	?___awmod^0,w,c
  3880   000DD4  0D0A               	mullw	10
  3881   000DD6  50F3               	movf	243,w,c
  3882   000DD8  0F06               	addlw	6
  3883   000DDA  ECAD  F016         	call	_read_internal_eeprom
  3884   000DDE  0101               	movlb	1	; () banked
  3885   000DE0  6F42               	movwf	main@event7& (0+255),b
  3886   000DE2                     
  3887                           ; BSR set to: 1
  3888                           ;main.c: 482:                 char event8 = read_internal_eeprom(7 + ((scv + a) % 10 * 1
      +                          0));
  3889   000DE2  51A9               	movf	main@a& (0+255),w,b
  3890   000DE4  25AE               	addwf	main@scv& (0+255),w,b
  3891   000DE6  6E09               	movwf	___awmod@dividend^0,c
  3892   000DE8  0E00               	movlw	0
  3893   000DEA  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3894   000DEC  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3895   000DEE  0E00               	movlw	0
  3896   000DF0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3897   000DF2  0E0A               	movlw	10
  3898   000DF4  6E0B               	movwf	___awmod@divisor^0,c
  3899   000DF6  EC9A  F012         	call	___awmod	;wreg free
  3900   000DFA  5009               	movf	?___awmod^0,w,c
  3901   000DFC  0D0A               	mullw	10
  3902   000DFE  50F3               	movf	243,w,c
  3903   000E00  0F07               	addlw	7
  3904   000E02  ECAD  F016         	call	_read_internal_eeprom
  3905   000E06  0101               	movlb	1	; () banked
  3906   000E08  6F43               	movwf	main@event8& (0+255),b
  3907   000E0A                     
  3908                           ; BSR set to: 1
  3909                           ;main.c: 483:                 char event9 = read_internal_eeprom(8 + ((scv + a) % 10 * 1
      +                          0));
  3910   000E0A  51A9               	movf	main@a& (0+255),w,b
  3911   000E0C  25AE               	addwf	main@scv& (0+255),w,b
  3912   000E0E  6E09               	movwf	___awmod@dividend^0,c
  3913   000E10  0E00               	movlw	0
  3914   000E12  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3915   000E14  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3916   000E16  0E00               	movlw	0
  3917   000E18  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3918   000E1A  0E0A               	movlw	10
  3919   000E1C  6E0B               	movwf	___awmod@divisor^0,c
  3920   000E1E  EC9A  F012         	call	___awmod	;wreg free
  3921   000E22  5009               	movf	?___awmod^0,w,c
  3922   000E24  0D0A               	mullw	10
  3923   000E26  50F3               	movf	243,w,c
  3924   000E28  0F08               	addlw	8
  3925   000E2A  ECAD  F016         	call	_read_internal_eeprom
  3926   000E2E  0101               	movlb	1	; () banked
  3927   000E30  6F44               	movwf	main@event9& (0+255),b
  3928   000E32                     
  3929                           ; BSR set to: 1
  3930                           ;main.c: 484:                 char event10 = read_internal_eeprom(9 + ((scv + a) % 10 * 
      +                          10));
  3931   000E32  51A9               	movf	main@a& (0+255),w,b
  3932   000E34  25AE               	addwf	main@scv& (0+255),w,b
  3933   000E36  6E09               	movwf	___awmod@dividend^0,c
  3934   000E38  0E00               	movlw	0
  3935   000E3A  21AF               	addwfc	(main@scv+1)& (0+255),w,b
  3936   000E3C  6E0A               	movwf	(___awmod@dividend+1)^0,c
  3937   000E3E  0E00               	movlw	0
  3938   000E40  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3939   000E42  0E0A               	movlw	10
  3940   000E44  6E0B               	movwf	___awmod@divisor^0,c
  3941   000E46  EC9A  F012         	call	___awmod	;wreg free
  3942   000E4A  5009               	movf	?___awmod^0,w,c
  3943   000E4C  0D0A               	mullw	10
  3944   000E4E  50F3               	movf	243,w,c
  3945   000E50  0F09               	addlw	9
  3946   000E52  ECAD  F016         	call	_read_internal_eeprom
  3947   000E56  0101               	movlb	1	; () banked
  3948   000E58  6F45               	movwf	main@event10& (0+255),b
  3949   000E5A                     
  3950                           ; BSR set to: 1
  3951                           ;main.c: 486:                 clcd_print("view log...>>>>>", (0x80 + (0)));
  3952   000E5A  0E89               	movlw	low STR_17
  3953   000E5C  6E07               	movwf	clcd_print@data^0,c
  3954   000E5E  0E2F               	movlw	high STR_17
  3955   000E60  6E08               	movwf	(clcd_print@data+1)^0,c
  3956   000E62  0E80               	movlw	128
  3957   000E64  6E09               	movwf	clcd_print@addr^0,c
  3958   000E66  EC73  F014         	call	_clcd_print	;wreg free
  3959   000E6A                     
  3960                           ;main.c: 487:                 clcd_putch(scv + 48, (0xC0 + (0)));
  3961   000E6A  0EC0               	movlw	192
  3962   000E6C  6E0F               	movwf	clcd_putch@addr^0,c
  3963   000E6E  0101               	movlb	1	; () banked
  3964   000E70  51AE               	movf	main@scv& (0+255),w,b
  3965   000E72  0F30               	addlw	48
  3966   000E74  EC80  F016         	call	_clcd_putch
  3967   000E78                     
  3968                           ;main.c: 488:                 clcd_putch(' ', (0xC0 + (1)));
  3969   000E78  0EC1               	movlw	193
  3970   000E7A  6E0F               	movwf	clcd_putch@addr^0,c
  3971   000E7C  0E20               	movlw	32
  3972   000E7E  EC80  F016         	call	_clcd_putch
  3973   000E82                     
  3974                           ;main.c: 489:                 clcd_putch(event1, (0xC0 + (2)));
  3975   000E82  0EC2               	movlw	194
  3976   000E84  6E0F               	movwf	clcd_putch@addr^0,c
  3977   000E86  0101               	movlb	1	; () banked
  3978   000E88  513C               	movf	main@event1& (0+255),w,b
  3979   000E8A  EC80  F016         	call	_clcd_putch
  3980   000E8E                     
  3981                           ;main.c: 490:                 clcd_putch(event2, (0xC0 + (3)));
  3982   000E8E  0EC3               	movlw	195
  3983   000E90  6E0F               	movwf	clcd_putch@addr^0,c
  3984   000E92  0101               	movlb	1	; () banked
  3985   000E94  513D               	movf	main@event2& (0+255),w,b
  3986   000E96  EC80  F016         	call	_clcd_putch
  3987   000E9A                     
  3988                           ;main.c: 491:                 clcd_putch(':', (0xC0 + (4)));
  3989   000E9A  0EC4               	movlw	196
  3990   000E9C  6E0F               	movwf	clcd_putch@addr^0,c
  3991   000E9E  0E3A               	movlw	58
  3992   000EA0  EC80  F016         	call	_clcd_putch
  3993   000EA4                     
  3994                           ;main.c: 492:                 clcd_putch(event3, (0xC0 + (5)));
  3995   000EA4  0EC5               	movlw	197
  3996   000EA6  6E0F               	movwf	clcd_putch@addr^0,c
  3997   000EA8  0101               	movlb	1	; () banked
  3998   000EAA  513E               	movf	main@event3& (0+255),w,b
  3999   000EAC  EC80  F016         	call	_clcd_putch
  4000   000EB0                     
  4001                           ;main.c: 493:                 clcd_putch(event4, (0xC0 + (6)));
  4002   000EB0  0EC6               	movlw	198
  4003   000EB2  6E0F               	movwf	clcd_putch@addr^0,c
  4004   000EB4  0101               	movlb	1	; () banked
  4005   000EB6  513F               	movf	main@event4& (0+255),w,b
  4006   000EB8  EC80  F016         	call	_clcd_putch
  4007   000EBC                     
  4008                           ;main.c: 494:                 clcd_putch(':', (0xC0 + (7)));
  4009   000EBC  0EC7               	movlw	199
  4010   000EBE  6E0F               	movwf	clcd_putch@addr^0,c
  4011   000EC0  0E3A               	movlw	58
  4012   000EC2  EC80  F016         	call	_clcd_putch
  4013   000EC6                     
  4014                           ;main.c: 495:                 clcd_putch(event5, (0xC0 + (8)));
  4015   000EC6  0EC8               	movlw	200
  4016   000EC8  6E0F               	movwf	clcd_putch@addr^0,c
  4017   000ECA  0101               	movlb	1	; () banked
  4018   000ECC  5140               	movf	main@event5& (0+255),w,b
  4019   000ECE  EC80  F016         	call	_clcd_putch
  4020   000ED2                     
  4021                           ;main.c: 496:                 clcd_putch(event6, (0xC0 + (9)));
  4022   000ED2  0EC9               	movlw	201
  4023   000ED4  6E0F               	movwf	clcd_putch@addr^0,c
  4024   000ED6  0101               	movlb	1	; () banked
  4025   000ED8  5141               	movf	main@event6& (0+255),w,b
  4026   000EDA  EC80  F016         	call	_clcd_putch
  4027   000EDE                     
  4028                           ;main.c: 497:                 clcd_putch(' ', (0xC0 + (10)));
  4029   000EDE  0ECA               	movlw	202
  4030   000EE0  6E0F               	movwf	clcd_putch@addr^0,c
  4031   000EE2  0E20               	movlw	32
  4032   000EE4  EC80  F016         	call	_clcd_putch
  4033   000EE8                     
  4034                           ;main.c: 498:                 clcd_putch(event7, (0xC0 + (11)));
  4035   000EE8  0ECB               	movlw	203
  4036   000EEA  6E0F               	movwf	clcd_putch@addr^0,c
  4037   000EEC  0101               	movlb	1	; () banked
  4038   000EEE  5142               	movf	main@event7& (0+255),w,b
  4039   000EF0  EC80  F016         	call	_clcd_putch
  4040   000EF4                     
  4041                           ;main.c: 499:                 clcd_putch(event8, (0xC0 + (12)));
  4042   000EF4  0ECC               	movlw	204
  4043   000EF6  6E0F               	movwf	clcd_putch@addr^0,c
  4044   000EF8  0101               	movlb	1	; () banked
  4045   000EFA  5143               	movf	main@event8& (0+255),w,b
  4046   000EFC  EC80  F016         	call	_clcd_putch
  4047   000F00                     
  4048                           ;main.c: 500:                 clcd_putch(' ', (0xC0 + (13)));
  4049   000F00  0ECD               	movlw	205
  4050   000F02  6E0F               	movwf	clcd_putch@addr^0,c
  4051   000F04  0E20               	movlw	32
  4052   000F06  EC80  F016         	call	_clcd_putch
  4053   000F0A                     
  4054                           ;main.c: 501:                 clcd_putch(event9, (0xC0 + (14)));
  4055   000F0A  0ECE               	movlw	206
  4056   000F0C  6E0F               	movwf	clcd_putch@addr^0,c
  4057   000F0E  0101               	movlb	1	; () banked
  4058   000F10  5144               	movf	main@event9& (0+255),w,b
  4059   000F12  EC80  F016         	call	_clcd_putch
  4060   000F16                     
  4061                           ;main.c: 502:                 clcd_putch(event10, (0xC0 + (15)));
  4062   000F16  0ECF               	movlw	207
  4063   000F18  6E0F               	movwf	clcd_putch@addr^0,c
  4064   000F1A  0101               	movlb	1	; () banked
  4065   000F1C  5145               	movf	main@event10& (0+255),w,b
  4066   000F1E  EC80  F016         	call	_clcd_putch
  4067                           
  4068                           ;main.c: 505:                 break;
  4069   000F22  EF54  F001         	goto	l3792
  4070   000F26                     l4118:
  4071                           
  4072                           ; BSR set to: 1
  4073                           ;main.c: 508:             {;main.c: 509:                 if (once) {
  4074   000F26  5155               	movf	main@once& (0+255),w,b
  4075   000F28  1156               	iorwf	(main@once+1)& (0+255),w,b
  4076   000F2A  B4D8               	btfsc	status,2,c
  4077   000F2C  EF9A  F007         	goto	u3381
  4078   000F30  EF9C  F007         	goto	u3380
  4079   000F34                     u3381:
  4080   000F34  EF00  F008         	goto	l4168
  4081   000F38                     u3380:
  4082   000F38                     
  4083                           ; BSR set to: 1
  4084                           ;main.c: 510:                     once--;
  4085   000F38  0755               	decf	main@once& (0+255),f,b
  4086   000F3A  A0D8               	btfss	status,0,c
  4087   000F3C  0756               	decf	(main@once+1)& (0+255),f,b
  4088   000F3E                     
  4089                           ; BSR set to: 1
  4090                           ;main.c: 511:                     address = 0;
  4091   000F3E  0E00               	movlw	0
  4092   000F40  6FF0               	movwf	(main@address+1)& (0+255),b
  4093   000F42  0E00               	movlw	0
  4094   000F44  6FEF               	movwf	main@address& (0+255),b
  4095   000F46                     
  4096                           ; BSR set to: 1
  4097                           ;main.c: 512:                     o_flag = 0;
  4098   000F46  0E00               	movlw	0
  4099   000F48  6FF1               	movwf	_o_flag& (0+255),b
  4100   000F4A                     
  4101                           ; BSR set to: 1
  4102                           ;main.c: 513:                     clcd_print("CLEAR LOG  .....", (0x80 + (0)));
  4103   000F4A  0E78               	movlw	low STR_18
  4104   000F4C  6E07               	movwf	clcd_print@data^0,c
  4105   000F4E  0E2F               	movlw	high STR_18
  4106   000F50  6E08               	movwf	(clcd_print@data+1)^0,c
  4107   000F52  0E80               	movlw	128
  4108   000F54  6E09               	movwf	clcd_print@addr^0,c
  4109   000F56  EC73  F014         	call	_clcd_print	;wreg free
  4110   000F5A                     
  4111                           ;main.c: 514:                     clcd_print("SUCCESSFULL .....", (0xC0 + (0)));
  4112   000F5A  0EEF               	movlw	low STR_19
  4113   000F5C  6E07               	movwf	clcd_print@data^0,c
  4114   000F5E  0E2E               	movlw	high STR_19
  4115   000F60  6E08               	movwf	(clcd_print@data+1)^0,c
  4116   000F62  0EC0               	movlw	192
  4117   000F64  6E09               	movwf	clcd_print@addr^0,c
  4118   000F66  EC73  F014         	call	_clcd_print	;wreg free
  4119   000F6A                     
  4120                           ;main.c: 517:                     arr[0] = 48;
  4121   000F6A  0E30               	movlw	48
  4122   000F6C  0101               	movlb	1	; () banked
  4123   000F6E  6F87               	movwf	main@arr& (0+255),b
  4124   000F70                     
  4125                           ; BSR set to: 1
  4126                           ;main.c: 518:                     arr[1] = 48;
  4127   000F70  0E30               	movlw	48
  4128   000F72  6F88               	movwf	(main@arr+1)& (0+255),b
  4129   000F74                     
  4130                           ; BSR set to: 1
  4131                           ;main.c: 519:                     arr[2] = 48;
  4132   000F74  0E30               	movlw	48
  4133   000F76  6F89               	movwf	(main@arr+2)& (0+255),b
  4134   000F78                     
  4135                           ; BSR set to: 1
  4136                           ;main.c: 520:                     arr[3] = 48;
  4137   000F78  0E30               	movlw	48
  4138   000F7A  6F8A               	movwf	(main@arr+3)& (0+255),b
  4139   000F7C                     
  4140                           ; BSR set to: 1
  4141                           ;main.c: 521:                     arr[4] = 48;
  4142   000F7C  0E30               	movlw	48
  4143   000F7E  6F8B               	movwf	(main@arr+4)& (0+255),b
  4144   000F80                     
  4145                           ; BSR set to: 1
  4146                           ;main.c: 522:                     arr[5] = 48;
  4147   000F80  0E30               	movlw	48
  4148   000F82  6F8C               	movwf	(main@arr+5)& (0+255),b
  4149   000F84                     
  4150                           ; BSR set to: 1
  4151                           ;main.c: 524:                     arr[6] = 'C';
  4152   000F84  0E43               	movlw	67
  4153   000F86  6F8D               	movwf	(main@arr+6)& (0+255),b
  4154   000F88                     
  4155                           ; BSR set to: 1
  4156                           ;main.c: 525:                     arr[7] = 'L';
  4157   000F88  0E4C               	movlw	76
  4158   000F8A  6F8E               	movwf	(main@arr+7)& (0+255),b
  4159   000F8C                     
  4160                           ; BSR set to: 1
  4161                           ;main.c: 527:                     arr[8] = 48;
  4162   000F8C  0E30               	movlw	48
  4163   000F8E  6F8F               	movwf	(main@arr+8)& (0+255),b
  4164   000F90                     
  4165                           ; BSR set to: 1
  4166                           ;main.c: 528:                     arr[9] = 48;
  4167   000F90  0E30               	movlw	48
  4168   000F92  6F90               	movwf	(main@arr+9)& (0+255),b
  4169   000F94                     
  4170                           ; BSR set to: 1
  4171                           ;main.c: 530:                     for (int ad = 0; ad < 10; ad++) {
  4172   000F94  0E00               	movlw	0
  4173   000F96  6F74               	movwf	(main@ad_239+1)& (0+255),b
  4174   000F98  0E00               	movlw	0
  4175   000F9A  6F73               	movwf	main@ad_239& (0+255),b
  4176   000F9C                     l4152:
  4177                           
  4178                           ; BSR set to: 1
  4179   000F9C  BF74               	btfsc	(main@ad_239+1)& (0+255),7,b
  4180   000F9E  EFDA  F007         	goto	u3391
  4181   000FA2  5174               	movf	(main@ad_239+1)& (0+255),w,b
  4182   000FA4  E109               	bnz	u3390
  4183   000FA6  0E0A               	movlw	10
  4184   000FA8  5D73               	subwf	main@ad_239& (0+255),w,b
  4185   000FAA  A0D8               	btfss	status,0,c
  4186   000FAC  EFDA  F007         	goto	u3391
  4187   000FB0  EFDC  F007         	goto	u3390
  4188   000FB4                     u3391:
  4189   000FB4  EFDE  F007         	goto	l4156
  4190   000FB8                     u3390:
  4191   000FB8  EF00  F008         	goto	l4168
  4192   000FBC                     l4156:
  4193                           
  4194                           ; BSR set to: 1
  4195                           ;main.c: 532:                         write_internal_eeprom((address), arr[ad]);
  4196   000FBC  0E87               	movlw	low main@arr
  4197   000FBE  2573               	addwf	main@ad_239& (0+255),w,b
  4198   000FC0  6ED9               	movwf	fsr2l,c
  4199   000FC2  0E01               	movlw	high main@arr
  4200   000FC4  2174               	addwfc	(main@ad_239+1)& (0+255),w,b
  4201   000FC6  6EDA               	movwf	fsr2h,c
  4202   000FC8  50DF               	movf	indf2,w,c
  4203   000FCA  6E01               	movwf	write_internal_eeprom@data^0,c
  4204   000FCC  51EF               	movf	main@address& (0+255),w,b
  4205   000FCE  ECE9  F015         	call	_write_internal_eeprom
  4206   000FD2                     
  4207                           ;main.c: 534:                         address++;
  4208   000FD2  0101               	movlb	1	; () banked
  4209   000FD4  4BEF               	infsnz	main@address& (0+255),f,b
  4210   000FD6  2BF0               	incf	(main@address+1)& (0+255),f,b
  4211   000FD8                     
  4212                           ; BSR set to: 1
  4213                           ;main.c: 535:                         if (address == 100) {
  4214   000FD8  0E64               	movlw	100
  4215   000FDA  19EF               	xorwf	main@address& (0+255),w,b
  4216   000FDC  11F0               	iorwf	(main@address+1)& (0+255),w,b
  4217   000FDE  A4D8               	btfss	status,2,c
  4218   000FE0  EFF4  F007         	goto	u3401
  4219   000FE4  EFF6  F007         	goto	u3400
  4220   000FE8                     u3401:
  4221   000FE8  EFFC  F007         	goto	l4164
  4222   000FEC                     u3400:
  4223   000FEC                     
  4224                           ; BSR set to: 1
  4225                           ;main.c: 536:                             o_flag = 1;
  4226   000FEC  0E01               	movlw	1
  4227   000FEE  6FF1               	movwf	_o_flag& (0+255),b
  4228                           
  4229                           ;main.c: 537:                             address = 0;
  4230   000FF0  0E00               	movlw	0
  4231   000FF2  6FF0               	movwf	(main@address+1)& (0+255),b
  4232   000FF4  0E00               	movlw	0
  4233   000FF6  6FEF               	movwf	main@address& (0+255),b
  4234   000FF8                     l4164:
  4235                           
  4236                           ; BSR set to: 1
  4237                           ;main.c: 539:                     }
  4238   000FF8  4B73               	infsnz	main@ad_239& (0+255),f,b
  4239   000FFA  2B74               	incf	(main@ad_239+1)& (0+255),f,b
  4240   000FFC  EFCE  F007         	goto	l4152
  4241   001000                     l4168:
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;main.c: 542:                 if (del++ == 20000) {
  4245   001000  4B34               	infsnz	main@del& (0+255),f,b
  4246   001002  2B35               	incf	(main@del+1)& (0+255),f,b
  4247   001004  0E21               	movlw	33
  4248   001006  1934               	xorwf	main@del& (0+255),w,b
  4249   001008  E107               	bnz	u3411
  4250   00100A  0E4E               	movlw	78
  4251   00100C  1935               	xorwf	(main@del+1)& (0+255),w,b
  4252   00100E  A4D8               	btfss	status,2,c
  4253   001010  EF0C  F008         	goto	u3411
  4254   001014  EF0E  F008         	goto	u3410
  4255   001018                     u3411:
  4256   001018  EF54  F001         	goto	l3792
  4257   00101C                     u3410:
  4258   00101C                     
  4259                           ; BSR set to: 1
  4260                           ;main.c: 543:                     address = 0;
  4261   00101C  0E00               	movlw	0
  4262   00101E  6FF0               	movwf	(main@address+1)& (0+255),b
  4263   001020  0E00               	movlw	0
  4264   001022  6FEF               	movwf	main@address& (0+255),b
  4265                           
  4266                           ;main.c: 544:                     o_flag = 0;
  4267   001024  0E00               	movlw	0
  4268   001026  6FF1               	movwf	_o_flag& (0+255),b
  4269                           
  4270                           ;main.c: 545:                     scv = 0;
  4271   001028  0E00               	movlw	0
  4272   00102A  6FAF               	movwf	(main@scv+1)& (0+255),b
  4273   00102C  0E00               	movlw	0
  4274   00102E  6FAE               	movwf	main@scv& (0+255),b
  4275                           
  4276                           ;main.c: 546:                     mode = 3;
  4277   001030  0E00               	movlw	0
  4278   001032  6F78               	movwf	(main@mode+1)& (0+255),b
  4279   001034  0E03               	movlw	3
  4280   001036  6F77               	movwf	main@mode& (0+255),b
  4281                           
  4282                           ;main.c: 547:                     del = 0;
  4283   001038  0E00               	movlw	0
  4284   00103A  6F35               	movwf	(main@del+1)& (0+255),b
  4285   00103C  0E00               	movlw	0
  4286   00103E  6F34               	movwf	main@del& (0+255),b
  4287                           
  4288                           ;main.c: 548:                     once = 1;
  4289   001040  0E00               	movlw	0
  4290   001042  6F56               	movwf	(main@once+1)& (0+255),b
  4291   001044  0E01               	movlw	1
  4292   001046  6F55               	movwf	main@once& (0+255),b
  4293   001048  EF54  F001         	goto	l3792
  4294   00104C                     l4172:
  4295                           
  4296                           ; BSR set to: 1
  4297                           ;main.c: 557:             {;main.c: 558:                 init_uart();
  4298   00104C  EC16  F016         	call	_init_uart	;wreg free
  4299   001050                     
  4300                           ;main.c: 560:                 clcd_print("   DOWNLOAD LOG    ", (0x80 + (0)));
  4301   001050  0EC7               	movlw	low STR_20
  4302   001052  6E07               	movwf	clcd_print@data^0,c
  4303   001054  0E2E               	movlw	high STR_20
  4304   001056  6E08               	movwf	(clcd_print@data+1)^0,c
  4305   001058  0E80               	movlw	128
  4306   00105A  6E09               	movwf	clcd_print@addr^0,c
  4307   00105C  EC73  F014         	call	_clcd_print	;wreg free
  4308   001060                     
  4309                           ;main.c: 561:                 clcd_print("    SUCCESSFULL    ", (0xC0 + (0)));
  4310   001060  0EDB               	movlw	low STR_21
  4311   001062  6E07               	movwf	clcd_print@data^0,c
  4312   001064  0E2E               	movlw	high STR_21
  4313   001066  6E08               	movwf	(clcd_print@data+1)^0,c
  4314   001068  0EC0               	movlw	192
  4315   00106A  6E09               	movwf	clcd_print@addr^0,c
  4316   00106C  EC73  F014         	call	_clcd_print	;wreg free
  4317   001070                     
  4318                           ;main.c: 562:                 int s;;main.c: 564:                 {;main.c: 569:        
      +                                   };main.c: 571:                 if (del1++ == 1000) {
  4319   001070  0101               	movlb	1	; () banked
  4320   001072  4B38               	infsnz	main@del1& (0+255),f,b
  4321   001074  2B39               	incf	(main@del1+1)& (0+255),f,b
  4322   001076  0EE9               	movlw	233
  4323   001078  1938               	xorwf	main@del1& (0+255),w,b
  4324   00107A  E107               	bnz	u3421
  4325   00107C  0E03               	movlw	3
  4326   00107E  1939               	xorwf	(main@del1+1)& (0+255),w,b
  4327   001080  A4D8               	btfss	status,2,c
  4328   001082  EF45  F008         	goto	u3421
  4329   001086  EF47  F008         	goto	u3420
  4330   00108A                     u3421:
  4331   00108A  EF54  F001         	goto	l3792
  4332   00108E                     u3420:
  4333   00108E                     
  4334                           ; BSR set to: 1
  4335                           ;main.c: 572:                     puts("\n\r");
  4336   00108E  0EAF               	movlw	low (STR_23+26)
  4337   001090  6E02               	movwf	puts@s^0,c
  4338   001092  0E2E               	movlw	high (STR_23+26)
  4339   001094  6E03               	movwf	(puts@s+1)^0,c
  4340   001096  ECB6  F015         	call	_puts	;wreg free
  4341   00109A                     
  4342                           ;main.c: 573:                     arr[0] = time[0];
  4343   00109A  C051  F187         	movff	_time,main@arr
  4344   00109E                     
  4345                           ;main.c: 574:                     arr[1] = time[1];
  4346   00109E  C052  F188         	movff	_time+1,main@arr+1
  4347   0010A2                     
  4348                           ;main.c: 575:                     arr[2] = time[3];
  4349   0010A2  C054  F189         	movff	_time+3,main@arr+2
  4350   0010A6                     
  4351                           ;main.c: 576:                     arr[3] = time[4];
  4352   0010A6  C055  F18A         	movff	_time+4,main@arr+3
  4353   0010AA                     
  4354                           ;main.c: 577:                     arr[4] = time[6];
  4355   0010AA  C057  F18B         	movff	_time+6,main@arr+4
  4356   0010AE                     
  4357                           ;main.c: 578:                     arr[5] = time[7];
  4358   0010AE  C058  F18C         	movff	_time+7,main@arr+5
  4359   0010B2                     
  4360                           ;main.c: 580:                     arr[6] = 'D';
  4361   0010B2  0E44               	movlw	68
  4362   0010B4  0101               	movlb	1	; () banked
  4363   0010B6  6F8D               	movwf	(main@arr+6)& (0+255),b
  4364   0010B8                     
  4365                           ; BSR set to: 1
  4366                           ;main.c: 581:                     arr[7] = 'L';
  4367   0010B8  0E4C               	movlw	76
  4368   0010BA  6F8E               	movwf	(main@arr+7)& (0+255),b
  4369   0010BC                     
  4370                           ; BSR set to: 1
  4371                           ;main.c: 583:                     arr[8] = (adc_reg_val / 10) + 48;
  4372   0010BC  C1A1  F001         	movff	main@adc_reg_val,___lwdiv@dividend
  4373   0010C0  C1A2  F002         	movff	main@adc_reg_val+1,___lwdiv@dividend+1
  4374   0010C4  0E00               	movlw	0
  4375   0010C6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4376   0010C8  0E0A               	movlw	10
  4377   0010CA  6E03               	movwf	___lwdiv@divisor^0,c
  4378   0010CC  EC03  F014         	call	___lwdiv	;wreg free
  4379   0010D0  5001               	movf	?___lwdiv^0,w,c
  4380   0010D2  0F30               	addlw	48
  4381   0010D4  0101               	movlb	1	; () banked
  4382   0010D6  6F8F               	movwf	(main@arr+8)& (0+255),b
  4383   0010D8                     
  4384                           ; BSR set to: 1
  4385                           ;main.c: 584:                     arr[9] = (adc_reg_val % 10) + 48;
  4386   0010D8  C1A1  F001         	movff	main@adc_reg_val,___lwmod@dividend
  4387   0010DC  C1A2  F002         	movff	main@adc_reg_val+1,___lwmod@dividend+1
  4388   0010E0  0E00               	movlw	0
  4389   0010E2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4390   0010E4  0E0A               	movlw	10
  4391   0010E6  6E03               	movwf	___lwmod@divisor^0,c
  4392   0010E8  ECDB  F014         	call	___lwmod	;wreg free
  4393   0010EC  5001               	movf	?___lwmod^0,w,c
  4394   0010EE  0F30               	addlw	48
  4395   0010F0  0101               	movlb	1	; () banked
  4396   0010F2  6F90               	movwf	(main@arr+9)& (0+255),b
  4397   0010F4                     
  4398                           ; BSR set to: 1
  4399                           ;main.c: 586:                     for (int ad = 0; ad < 10; ad++) {
  4400   0010F4  0E00               	movlw	0
  4401   0010F6  6F76               	movwf	(main@ad_244+1)& (0+255),b
  4402   0010F8  0E00               	movlw	0
  4403   0010FA  6F75               	movwf	main@ad_244& (0+255),b
  4404   0010FC                     l4204:
  4405                           
  4406                           ; BSR set to: 1
  4407   0010FC  BF76               	btfsc	(main@ad_244+1)& (0+255),7,b
  4408   0010FE  EF8A  F008         	goto	u3431
  4409   001102  5176               	movf	(main@ad_244+1)& (0+255),w,b
  4410   001104  E109               	bnz	u3430
  4411   001106  0E0A               	movlw	10
  4412   001108  5D75               	subwf	main@ad_244& (0+255),w,b
  4413   00110A  A0D8               	btfss	status,0,c
  4414   00110C  EF8A  F008         	goto	u3431
  4415   001110  EF8C  F008         	goto	u3430
  4416   001114                     u3431:
  4417   001114  EF8E  F008         	goto	l4208
  4418   001118                     u3430:
  4419   001118  EFB0  F008         	goto	l4220
  4420   00111C                     l4208:
  4421                           
  4422                           ; BSR set to: 1
  4423                           ;main.c: 588:                         write_internal_eeprom((address), arr[ad]);
  4424   00111C  0E87               	movlw	low main@arr
  4425   00111E  2575               	addwf	main@ad_244& (0+255),w,b
  4426   001120  6ED9               	movwf	fsr2l,c
  4427   001122  0E01               	movlw	high main@arr
  4428   001124  2176               	addwfc	(main@ad_244+1)& (0+255),w,b
  4429   001126  6EDA               	movwf	fsr2h,c
  4430   001128  50DF               	movf	indf2,w,c
  4431   00112A  6E01               	movwf	write_internal_eeprom@data^0,c
  4432   00112C  51EF               	movf	main@address& (0+255),w,b
  4433   00112E  ECE9  F015         	call	_write_internal_eeprom
  4434   001132                     
  4435                           ;main.c: 590:                         address++;
  4436   001132  0101               	movlb	1	; () banked
  4437   001134  4BEF               	infsnz	main@address& (0+255),f,b
  4438   001136  2BF0               	incf	(main@address+1)& (0+255),f,b
  4439   001138                     
  4440                           ; BSR set to: 1
  4441                           ;main.c: 591:                         if (address == 100) {
  4442   001138  0E64               	movlw	100
  4443   00113A  19EF               	xorwf	main@address& (0+255),w,b
  4444   00113C  11F0               	iorwf	(main@address+1)& (0+255),w,b
  4445   00113E  A4D8               	btfss	status,2,c
  4446   001140  EFA4  F008         	goto	u3441
  4447   001144  EFA6  F008         	goto	u3440
  4448   001148                     u3441:
  4449   001148  EFAC  F008         	goto	l4216
  4450   00114C                     u3440:
  4451   00114C                     
  4452                           ; BSR set to: 1
  4453                           ;main.c: 592:                             o_flag = 1;
  4454   00114C  0E01               	movlw	1
  4455   00114E  6FF1               	movwf	_o_flag& (0+255),b
  4456                           
  4457                           ;main.c: 593:                             address = 0;
  4458   001150  0E00               	movlw	0
  4459   001152  6FF0               	movwf	(main@address+1)& (0+255),b
  4460   001154  0E00               	movlw	0
  4461   001156  6FEF               	movwf	main@address& (0+255),b
  4462   001158                     l4216:
  4463                           
  4464                           ; BSR set to: 1
  4465                           ;main.c: 595:                     }
  4466   001158  4B75               	infsnz	main@ad_244& (0+255),f,b
  4467   00115A  2B76               	incf	(main@ad_244+1)& (0+255),f,b
  4468   00115C  EF7E  F008         	goto	l4204
  4469   001160                     l4220:
  4470                           
  4471                           ; BSR set to: 1
  4472                           ;main.c: 597:                     if (o_flag == 0) {
  4473   001160  51F1               	movf	_o_flag& (0+255),w,b
  4474   001162  A4D8               	btfss	status,2,c
  4475   001164  EFB6  F008         	goto	u3451
  4476   001168  EFB8  F008         	goto	u3450
  4477   00116C                     u3451:
  4478   00116C  EFCC  F008         	goto	l4226
  4479   001170                     u3450:
  4480   001170                     
  4481                           ; BSR set to: 1
  4482                           ;main.c: 598:                         s = 0;
  4483   001170  0E00               	movlw	0
  4484   001172  6FA8               	movwf	(main@s+1)& (0+255),b
  4485   001174  0E00               	movlw	0
  4486   001176  6FA7               	movwf	main@s& (0+255),b
  4487   001178                     
  4488                           ; BSR set to: 1
  4489                           ;main.c: 599:                         cf = address / 10;
  4490   001178  C1EF  F001         	movff	main@address,___awdiv@dividend
  4491   00117C  C1F0  F002         	movff	main@address+1,___awdiv@dividend+1
  4492   001180  0E00               	movlw	0
  4493   001182  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4494   001184  0E0A               	movlw	10
  4495   001186  6E03               	movwf	___awdiv@divisor^0,c
  4496   001188  EC38  F012         	call	___awdiv	;wreg free
  4497   00118C  C001  F136         	movff	?___awdiv,main@cf
  4498   001190  C002  F137         	movff	?___awdiv+1,main@cf+1
  4499                           
  4500                           ;main.c: 600:                     } else {
  4501   001194  EFDF  F008         	goto	l4230
  4502   001198                     l4226:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;main.c: 601:                         s = address / 10;
  4506   001198  C1EF  F001         	movff	main@address,___awdiv@dividend
  4507   00119C  C1F0  F002         	movff	main@address+1,___awdiv@dividend+1
  4508   0011A0  0E00               	movlw	0
  4509   0011A2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4510   0011A4  0E0A               	movlw	10
  4511   0011A6  6E03               	movwf	___awdiv@divisor^0,c
  4512   0011A8  EC38  F012         	call	___awdiv	;wreg free
  4513   0011AC  C001  F1A7         	movff	?___awdiv,main@s
  4514   0011B0  C002  F1A8         	movff	?___awdiv+1,main@s+1
  4515   0011B4                     
  4516                           ;main.c: 602:                         cf = 10;
  4517   0011B4  0E00               	movlw	0
  4518   0011B6  0101               	movlb	1	; () banked
  4519   0011B8  6F37               	movwf	(main@cf+1)& (0+255),b
  4520   0011BA  0E0A               	movlw	10
  4521   0011BC  6F36               	movwf	main@cf& (0+255),b
  4522   0011BE                     l4230:
  4523                           
  4524                           ;main.c: 606:                     puts("S.NO   TIME      EV     SP\n\r");
  4525   0011BE  0E95               	movlw	low STR_23
  4526   0011C0  6E02               	movwf	puts@s^0,c
  4527   0011C2  0E2E               	movlw	high STR_23
  4528   0011C4  6E03               	movwf	(puts@s+1)^0,c
  4529   0011C6  ECB6  F015         	call	_puts	;wreg free
  4530   0011CA                     
  4531                           ;main.c: 607:                     for (d = 0; d < cf; d++) {
  4532   0011CA  0E00               	movlw	0
  4533   0011CC  0101               	movlb	1	; () banked
  4534   0011CE  6FAB               	movwf	(main@d+1)& (0+255),b
  4535   0011D0  0E00               	movlw	0
  4536   0011D2  6FAA               	movwf	main@d& (0+255),b
  4537   0011D4  EF15  F00A         	goto	l4292
  4538   0011D8                     l4234:
  4539                           
  4540                           ; BSR set to: 1
  4541                           ;main.c: 608:                         char eevent1 = read_internal_eeprom(0 + ((d + s) %
      +                           10 * 10));
  4542   0011D8  51A7               	movf	main@s& (0+255),w,b
  4543   0011DA  25AA               	addwf	main@d& (0+255),w,b
  4544   0011DC  6E09               	movwf	___awmod@dividend^0,c
  4545   0011DE  51A8               	movf	(main@s+1)& (0+255),w,b
  4546   0011E0  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4547   0011E2  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4548   0011E4  0E00               	movlw	0
  4549   0011E6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4550   0011E8  0E0A               	movlw	10
  4551   0011EA  6E0B               	movwf	___awmod@divisor^0,c
  4552   0011EC  EC9A  F012         	call	___awmod	;wreg free
  4553   0011F0  5009               	movf	?___awmod^0,w,c
  4554   0011F2  0D0A               	mullw	10
  4555   0011F4  50F3               	movf	243,w,c
  4556   0011F6  ECAD  F016         	call	_read_internal_eeprom
  4557   0011FA  0101               	movlb	1	; () banked
  4558   0011FC  6F46               	movwf	main@eevent1& (0+255),b
  4559                           
  4560                           ;main.c: 609:                         char eevent2 = read_internal_eeprom(1 + ((d + s) %
      +                           10 * 10));
  4561   0011FE  51A7               	movf	main@s& (0+255),w,b
  4562   001200  25AA               	addwf	main@d& (0+255),w,b
  4563   001202  6E09               	movwf	___awmod@dividend^0,c
  4564   001204  51A8               	movf	(main@s+1)& (0+255),w,b
  4565   001206  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4566   001208  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4567   00120A  0E00               	movlw	0
  4568   00120C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4569   00120E  0E0A               	movlw	10
  4570   001210  6E0B               	movwf	___awmod@divisor^0,c
  4571   001212  EC9A  F012         	call	___awmod	;wreg free
  4572   001216  5009               	movf	?___awmod^0,w,c
  4573   001218  0D0A               	mullw	10
  4574   00121A  28F3               	incf	243,w,c
  4575   00121C  ECAD  F016         	call	_read_internal_eeprom
  4576   001220  0101               	movlb	1	; () banked
  4577   001222  6F47               	movwf	main@eevent2& (0+255),b
  4578                           
  4579                           ;main.c: 610:                         char eevent3 = read_internal_eeprom(2 + ((d + s) %
      +                           10 * 10));
  4580   001224  51A7               	movf	main@s& (0+255),w,b
  4581   001226  25AA               	addwf	main@d& (0+255),w,b
  4582   001228  6E09               	movwf	___awmod@dividend^0,c
  4583   00122A  51A8               	movf	(main@s+1)& (0+255),w,b
  4584   00122C  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4585   00122E  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4586   001230  0E00               	movlw	0
  4587   001232  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4588   001234  0E0A               	movlw	10
  4589   001236  6E0B               	movwf	___awmod@divisor^0,c
  4590   001238  EC9A  F012         	call	___awmod	;wreg free
  4591   00123C  5009               	movf	?___awmod^0,w,c
  4592   00123E  0D0A               	mullw	10
  4593   001240  50F3               	movf	243,w,c
  4594   001242  0F02               	addlw	2
  4595   001244  ECAD  F016         	call	_read_internal_eeprom
  4596   001248  0101               	movlb	1	; () banked
  4597   00124A  6F48               	movwf	main@eevent3& (0+255),b
  4598                           
  4599                           ;main.c: 611:                         char eevent4 = read_internal_eeprom(3 + ((d + s) %
      +                           10 * 10));
  4600   00124C  51A7               	movf	main@s& (0+255),w,b
  4601   00124E  25AA               	addwf	main@d& (0+255),w,b
  4602   001250  6E09               	movwf	___awmod@dividend^0,c
  4603   001252  51A8               	movf	(main@s+1)& (0+255),w,b
  4604   001254  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4605   001256  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4606   001258  0E00               	movlw	0
  4607   00125A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4608   00125C  0E0A               	movlw	10
  4609   00125E  6E0B               	movwf	___awmod@divisor^0,c
  4610   001260  EC9A  F012         	call	___awmod	;wreg free
  4611   001264  5009               	movf	?___awmod^0,w,c
  4612   001266  0D0A               	mullw	10
  4613   001268  50F3               	movf	243,w,c
  4614   00126A  0F03               	addlw	3
  4615   00126C  ECAD  F016         	call	_read_internal_eeprom
  4616   001270  0101               	movlb	1	; () banked
  4617   001272  6F49               	movwf	main@eevent4& (0+255),b
  4618                           
  4619                           ;main.c: 612:                         char eevent5 = read_internal_eeprom(4 + ((d + s) %
      +                           10 * 10));
  4620   001274  51A7               	movf	main@s& (0+255),w,b
  4621   001276  25AA               	addwf	main@d& (0+255),w,b
  4622   001278  6E09               	movwf	___awmod@dividend^0,c
  4623   00127A  51A8               	movf	(main@s+1)& (0+255),w,b
  4624   00127C  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4625   00127E  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4626   001280  0E00               	movlw	0
  4627   001282  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4628   001284  0E0A               	movlw	10
  4629   001286  6E0B               	movwf	___awmod@divisor^0,c
  4630   001288  EC9A  F012         	call	___awmod	;wreg free
  4631   00128C  5009               	movf	?___awmod^0,w,c
  4632   00128E  0D0A               	mullw	10
  4633   001290  50F3               	movf	243,w,c
  4634   001292  0F04               	addlw	4
  4635   001294  ECAD  F016         	call	_read_internal_eeprom
  4636   001298  0101               	movlb	1	; () banked
  4637   00129A  6F4A               	movwf	main@eevent5& (0+255),b
  4638                           
  4639                           ;main.c: 613:                         char eevent6 = read_internal_eeprom(5 + ((d + s) %
      +                           10 * 10));
  4640   00129C  51A7               	movf	main@s& (0+255),w,b
  4641   00129E  25AA               	addwf	main@d& (0+255),w,b
  4642   0012A0  6E09               	movwf	___awmod@dividend^0,c
  4643   0012A2  51A8               	movf	(main@s+1)& (0+255),w,b
  4644   0012A4  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4645   0012A6  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4646   0012A8  0E00               	movlw	0
  4647   0012AA  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4648   0012AC  0E0A               	movlw	10
  4649   0012AE  6E0B               	movwf	___awmod@divisor^0,c
  4650   0012B0  EC9A  F012         	call	___awmod	;wreg free
  4651   0012B4  5009               	movf	?___awmod^0,w,c
  4652   0012B6  0D0A               	mullw	10
  4653   0012B8  50F3               	movf	243,w,c
  4654   0012BA  0F05               	addlw	5
  4655   0012BC  ECAD  F016         	call	_read_internal_eeprom
  4656   0012C0  0101               	movlb	1	; () banked
  4657   0012C2  6F4B               	movwf	main@eevent6& (0+255),b
  4658                           
  4659                           ;main.c: 614:                         char eevent7 = read_internal_eeprom(6 + ((d + s) %
      +                           10 * 10));
  4660   0012C4  51A7               	movf	main@s& (0+255),w,b
  4661   0012C6  25AA               	addwf	main@d& (0+255),w,b
  4662   0012C8  6E09               	movwf	___awmod@dividend^0,c
  4663   0012CA  51A8               	movf	(main@s+1)& (0+255),w,b
  4664   0012CC  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4665   0012CE  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4666   0012D0  0E00               	movlw	0
  4667   0012D2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4668   0012D4  0E0A               	movlw	10
  4669   0012D6  6E0B               	movwf	___awmod@divisor^0,c
  4670   0012D8  EC9A  F012         	call	___awmod	;wreg free
  4671   0012DC  5009               	movf	?___awmod^0,w,c
  4672   0012DE  0D0A               	mullw	10
  4673   0012E0  50F3               	movf	243,w,c
  4674   0012E2  0F06               	addlw	6
  4675   0012E4  ECAD  F016         	call	_read_internal_eeprom
  4676   0012E8  0101               	movlb	1	; () banked
  4677   0012EA  6F4C               	movwf	main@eevent7& (0+255),b
  4678                           
  4679                           ;main.c: 615:                         char eevent8 = read_internal_eeprom(7 + ((d + s) %
      +                           10 * 10));
  4680   0012EC  51A7               	movf	main@s& (0+255),w,b
  4681   0012EE  25AA               	addwf	main@d& (0+255),w,b
  4682   0012F0  6E09               	movwf	___awmod@dividend^0,c
  4683   0012F2  51A8               	movf	(main@s+1)& (0+255),w,b
  4684   0012F4  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4685   0012F6  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4686   0012F8  0E00               	movlw	0
  4687   0012FA  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4688   0012FC  0E0A               	movlw	10
  4689   0012FE  6E0B               	movwf	___awmod@divisor^0,c
  4690   001300  EC9A  F012         	call	___awmod	;wreg free
  4691   001304  5009               	movf	?___awmod^0,w,c
  4692   001306  0D0A               	mullw	10
  4693   001308  50F3               	movf	243,w,c
  4694   00130A  0F07               	addlw	7
  4695   00130C  ECAD  F016         	call	_read_internal_eeprom
  4696   001310  0101               	movlb	1	; () banked
  4697   001312  6F4D               	movwf	main@eevent8& (0+255),b
  4698                           
  4699                           ;main.c: 616:                         char eevent9 = read_internal_eeprom(8 + ((d + s) %
      +                           10 * 10));
  4700   001314  51A7               	movf	main@s& (0+255),w,b
  4701   001316  25AA               	addwf	main@d& (0+255),w,b
  4702   001318  6E09               	movwf	___awmod@dividend^0,c
  4703   00131A  51A8               	movf	(main@s+1)& (0+255),w,b
  4704   00131C  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4705   00131E  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4706   001320  0E00               	movlw	0
  4707   001322  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4708   001324  0E0A               	movlw	10
  4709   001326  6E0B               	movwf	___awmod@divisor^0,c
  4710   001328  EC9A  F012         	call	___awmod	;wreg free
  4711   00132C  5009               	movf	?___awmod^0,w,c
  4712   00132E  0D0A               	mullw	10
  4713   001330  50F3               	movf	243,w,c
  4714   001332  0F08               	addlw	8
  4715   001334  ECAD  F016         	call	_read_internal_eeprom
  4716   001338  0101               	movlb	1	; () banked
  4717   00133A  6F4E               	movwf	main@eevent9& (0+255),b
  4718                           
  4719                           ;main.c: 617:                         char eevent10 = read_internal_eeprom(9 + ((d + s) 
      +                          % 10 * 10));
  4720   00133C  51A7               	movf	main@s& (0+255),w,b
  4721   00133E  25AA               	addwf	main@d& (0+255),w,b
  4722   001340  6E09               	movwf	___awmod@dividend^0,c
  4723   001342  51A8               	movf	(main@s+1)& (0+255),w,b
  4724   001344  21AB               	addwfc	(main@d+1)& (0+255),w,b
  4725   001346  6E0A               	movwf	(___awmod@dividend+1)^0,c
  4726   001348  0E00               	movlw	0
  4727   00134A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4728   00134C  0E0A               	movlw	10
  4729   00134E  6E0B               	movwf	___awmod@divisor^0,c
  4730   001350  EC9A  F012         	call	___awmod	;wreg free
  4731   001354  5009               	movf	?___awmod^0,w,c
  4732   001356  0D0A               	mullw	10
  4733   001358  50F3               	movf	243,w,c
  4734   00135A  0F09               	addlw	9
  4735   00135C  ECAD  F016         	call	_read_internal_eeprom
  4736   001360  0101               	movlb	1	; () banked
  4737   001362  6F4F               	movwf	main@eevent10& (0+255),b
  4738   001364                     
  4739                           ; BSR set to: 1
  4740                           ;main.c: 618:                         putch(' ');
  4741   001364  0E20               	movlw	32
  4742   001366  EC8C  F016         	call	_putch
  4743   00136A                     
  4744                           ;main.c: 619:                         putch(d + 48);
  4745   00136A  0101               	movlb	1	; () banked
  4746   00136C  51AA               	movf	main@d& (0+255),w,b
  4747   00136E  0F30               	addlw	48
  4748   001370  EC8C  F016         	call	_putch
  4749   001374                     
  4750                           ;main.c: 620:                         putch(' ');
  4751   001374  0E20               	movlw	32
  4752   001376  EC8C  F016         	call	_putch
  4753   00137A                     
  4754                           ;main.c: 621:                         putch(' ');
  4755   00137A  0E20               	movlw	32
  4756   00137C  EC8C  F016         	call	_putch
  4757   001380                     
  4758                           ;main.c: 622:                         putch(' ');
  4759   001380  0E20               	movlw	32
  4760   001382  EC8C  F016         	call	_putch
  4761   001386                     
  4762                           ;main.c: 623:                         putch(' ');
  4763   001386  0E20               	movlw	32
  4764   001388  EC8C  F016         	call	_putch
  4765   00138C                     
  4766                           ;main.c: 624:                         putch(eevent1);
  4767   00138C  0101               	movlb	1	; () banked
  4768   00138E  5146               	movf	main@eevent1& (0+255),w,b
  4769   001390  EC8C  F016         	call	_putch
  4770   001394                     
  4771                           ;main.c: 625:                         putch(eevent2);
  4772   001394  0101               	movlb	1	; () banked
  4773   001396  5147               	movf	main@eevent2& (0+255),w,b
  4774   001398  EC8C  F016         	call	_putch
  4775   00139C                     
  4776                           ;main.c: 626:                         putch(':');
  4777   00139C  0E3A               	movlw	58
  4778   00139E  EC8C  F016         	call	_putch
  4779   0013A2                     
  4780                           ;main.c: 627:                         putch(eevent3);
  4781   0013A2  0101               	movlb	1	; () banked
  4782   0013A4  5148               	movf	main@eevent3& (0+255),w,b
  4783   0013A6  EC8C  F016         	call	_putch
  4784   0013AA                     
  4785                           ;main.c: 628:                         putch(eevent4);
  4786   0013AA  0101               	movlb	1	; () banked
  4787   0013AC  5149               	movf	main@eevent4& (0+255),w,b
  4788   0013AE  EC8C  F016         	call	_putch
  4789   0013B2                     
  4790                           ;main.c: 629:                         putch(':');
  4791   0013B2  0E3A               	movlw	58
  4792   0013B4  EC8C  F016         	call	_putch
  4793   0013B8                     
  4794                           ;main.c: 630:                         putch(eevent5);
  4795   0013B8  0101               	movlb	1	; () banked
  4796   0013BA  514A               	movf	main@eevent5& (0+255),w,b
  4797   0013BC  EC8C  F016         	call	_putch
  4798   0013C0                     
  4799                           ;main.c: 631:                         putch(eevent6);
  4800   0013C0  0101               	movlb	1	; () banked
  4801   0013C2  514B               	movf	main@eevent6& (0+255),w,b
  4802   0013C4  EC8C  F016         	call	_putch
  4803   0013C8                     
  4804                           ;main.c: 632:                         putch(' ');
  4805   0013C8  0E20               	movlw	32
  4806   0013CA  EC8C  F016         	call	_putch
  4807   0013CE                     
  4808                           ;main.c: 633:                         putch(' ');
  4809   0013CE  0E20               	movlw	32
  4810   0013D0  EC8C  F016         	call	_putch
  4811   0013D4                     
  4812                           ;main.c: 634:                         putch(' ');
  4813   0013D4  0E20               	movlw	32
  4814   0013D6  EC8C  F016         	call	_putch
  4815   0013DA                     
  4816                           ;main.c: 635:                         putch(' ');
  4817   0013DA  0E20               	movlw	32
  4818   0013DC  EC8C  F016         	call	_putch
  4819   0013E0                     
  4820                           ;main.c: 636:                         putch(eevent7);
  4821   0013E0  0101               	movlb	1	; () banked
  4822   0013E2  514C               	movf	main@eevent7& (0+255),w,b
  4823   0013E4  EC8C  F016         	call	_putch
  4824   0013E8                     
  4825                           ;main.c: 637:                         putch(eevent8);
  4826   0013E8  0101               	movlb	1	; () banked
  4827   0013EA  514D               	movf	main@eevent8& (0+255),w,b
  4828   0013EC  EC8C  F016         	call	_putch
  4829   0013F0                     
  4830                           ;main.c: 638:                         putch(' ');
  4831   0013F0  0E20               	movlw	32
  4832   0013F2  EC8C  F016         	call	_putch
  4833   0013F6                     
  4834                           ;main.c: 639:                         putch(' ');
  4835   0013F6  0E20               	movlw	32
  4836   0013F8  EC8C  F016         	call	_putch
  4837   0013FC                     
  4838                           ;main.c: 640:                         putch(' ');
  4839   0013FC  0E20               	movlw	32
  4840   0013FE  EC8C  F016         	call	_putch
  4841   001402                     
  4842                           ;main.c: 641:                         putch(' ');
  4843   001402  0E20               	movlw	32
  4844   001404  EC8C  F016         	call	_putch
  4845   001408                     
  4846                           ;main.c: 642:                         putch(eevent9);
  4847   001408  0101               	movlb	1	; () banked
  4848   00140A  514E               	movf	main@eevent9& (0+255),w,b
  4849   00140C  EC8C  F016         	call	_putch
  4850   001410                     
  4851                           ;main.c: 643:                         putch(eevent10);
  4852   001410  0101               	movlb	1	; () banked
  4853   001412  514F               	movf	main@eevent10& (0+255),w,b
  4854   001414  EC8C  F016         	call	_putch
  4855   001418                     
  4856                           ;main.c: 645:                         puts("\n\r");
  4857   001418  0EAF               	movlw	low (STR_23+26)
  4858   00141A  6E02               	movwf	puts@s^0,c
  4859   00141C  0E2E               	movlw	high (STR_23+26)
  4860   00141E  6E03               	movwf	(puts@s+1)^0,c
  4861   001420  ECB6  F015         	call	_puts	;wreg free
  4862   001424                     
  4863                           ;main.c: 649:                     }
  4864   001424  0101               	movlb	1	; () banked
  4865   001426  4BAA               	infsnz	main@d& (0+255),f,b
  4866   001428  2BAB               	incf	(main@d+1)& (0+255),f,b
  4867   00142A                     l4292:
  4868                           
  4869                           ; BSR set to: 1
  4870   00142A  5136               	movf	main@cf& (0+255),w,b
  4871   00142C  5DAA               	subwf	main@d& (0+255),w,b
  4872   00142E  51AB               	movf	(main@d+1)& (0+255),w,b
  4873   001430  0A80               	xorlw	128
  4874   001432  6E39               	movwf	??_main^0,c
  4875   001434  5137               	movf	(main@cf+1)& (0+255),w,b
  4876   001436  0A80               	xorlw	128
  4877   001438  5839               	subwfb	??_main^0,w,c
  4878   00143A  A0D8               	btfss	status,0,c
  4879   00143C  EF22  F00A         	goto	u3461
  4880   001440  EF24  F00A         	goto	u3460
  4881   001444                     u3461:
  4882   001444  EFEC  F008         	goto	l4234
  4883   001448                     u3460:
  4884   001448                     
  4885                           ; BSR set to: 1
  4886                           ;main.c: 650:                     mode = 3;
  4887   001448  0E00               	movlw	0
  4888   00144A  6F78               	movwf	(main@mode+1)& (0+255),b
  4889   00144C  0E03               	movlw	3
  4890   00144E  6F77               	movwf	main@mode& (0+255),b
  4891                           
  4892                           ;main.c: 651:                     del1 = 0;
  4893   001450  0E00               	movlw	0
  4894   001452  6F39               	movwf	(main@del1+1)& (0+255),b
  4895   001454  0E00               	movlw	0
  4896   001456  6F38               	movwf	main@del1& (0+255),b
  4897   001458  EF54  F001         	goto	l3792
  4898   00145C                     l4296:
  4899                           
  4900                           ; BSR set to: 1
  4901                           ;main.c: 660:             {;main.c: 661:                 clcd_print("TIME (HH:MM:SS)", (
      +                          0x80 + (0)));
  4902   00145C  0EAB               	movlw	low STR_25
  4903   00145E  6E07               	movwf	clcd_print@data^0,c
  4904   001460  0E2F               	movlw	high STR_25
  4905   001462  6E08               	movwf	(clcd_print@data+1)^0,c
  4906   001464  0E80               	movlw	128
  4907   001466  6E09               	movwf	clcd_print@addr^0,c
  4908   001468  EC73  F014         	call	_clcd_print	;wreg free
  4909   00146C                     
  4910                           ;main.c: 662:                 clcd_putch(' ', (0xC0 + (0)));
  4911   00146C  0EC0               	movlw	192
  4912   00146E  6E0F               	movwf	clcd_putch@addr^0,c
  4913   001470  0E20               	movlw	32
  4914   001472  EC80  F016         	call	_clcd_putch
  4915   001476                     
  4916                           ;main.c: 663:                  int hour;;main.c: 664:                 int minutes;;main.
      +                          c: 665:                 int seconds;;main.c: 666:                 int h;;main.c: 667:   
      +                                        int h1;;main.c: 668:                 int m;;main.c: 669:                 i
      +                          nt m1;;main.c: 670:                 int s;;main.c: 671:                 int s1;;main.c: 
      +                          673:                 if(settime)
  4917   001476  0101               	movlb	1	; () banked
  4918   001478  5159               	movf	main@settime& (0+255),w,b
  4919   00147A  115A               	iorwf	(main@settime+1)& (0+255),w,b
  4920   00147C  B4D8               	btfsc	status,2,c
  4921   00147E  EF43  F00A         	goto	u3471
  4922   001482  EF45  F00A         	goto	u3470
  4923   001486                     u3471:
  4924   001486  EFD0  F00A         	goto	l4324
  4925   00148A                     u3470:
  4926   00148A                     
  4927                           ; BSR set to: 1
  4928                           ;main.c: 674:                 {;main.c: 675:                  hour = read_ds1307(0x02);
  4929   00148A  0E02               	movlw	2
  4930   00148C  EC2B  F016         	call	_read_ds1307
  4931   001490  6E39               	movwf	??_main^0,c
  4932   001492  5039               	movf	??_main^0,w,c
  4933   001494  0101               	movlb	1	; () banked
  4934   001496  6F5F               	movwf	main@hour& (0+255),b
  4935   001498  6B60               	clrf	(main@hour+1)& (0+255),b
  4936   00149A                     
  4937                           ; BSR set to: 1
  4938                           ;main.c: 676:                  h = ((hour >> 4) & 0x03);
  4939   00149A  C15F  F039         	movff	main@hour,??_main
  4940   00149E  C160  F03A         	movff	main@hour+1,??_main+1
  4941   0014A2  0E04               	movlw	4
  4942   0014A4  6E3B               	movwf	(??_main+2)^0,c
  4943   0014A6                     u3485:
  4944   0014A6  343A               	rlcf	(??_main+1)^0,w,c
  4945   0014A8  323A               	rrcf	(??_main+1)^0,f,c
  4946   0014AA  3239               	rrcf	??_main^0,f,c
  4947   0014AC  2E3B               	decfsz	(??_main+2)^0,f,c
  4948   0014AE  EF53  F00A         	goto	u3485
  4949   0014B2  0E03               	movlw	3
  4950   0014B4  1439               	andwf	??_main^0,w,c
  4951   0014B6  6F20               	movwf	main@h& (0+255),b
  4952   0014B8  6B21               	clrf	(main@h+1)& (0+255),b
  4953   0014BA                     
  4954                           ; BSR set to: 1
  4955                           ;main.c: 677:            h1 = (hour & 0x0F);
  4956   0014BA  0E0F               	movlw	15
  4957   0014BC  155F               	andwf	main@hour& (0+255),w,b
  4958   0014BE  6F22               	movwf	main@h1& (0+255),b
  4959   0014C0  6B23               	clrf	(main@h1+1)& (0+255),b
  4960                           
  4961                           ;main.c: 678:                  minutes=read_ds1307(0x01);
  4962   0014C2  0E01               	movlw	1
  4963   0014C4  EC2B  F016         	call	_read_ds1307
  4964   0014C8  6E39               	movwf	??_main^0,c
  4965   0014CA  5039               	movf	??_main^0,w,c
  4966   0014CC  0101               	movlb	1	; () banked
  4967   0014CE  6F61               	movwf	main@minutes& (0+255),b
  4968   0014D0  6B62               	clrf	(main@minutes+1)& (0+255),b
  4969   0014D2                     
  4970                           ; BSR set to: 1
  4971                           ;main.c: 679:                  m = ((minutes >> 4) & 0x0F);
  4972   0014D2  C161  F039         	movff	main@minutes,??_main
  4973   0014D6  C162  F03A         	movff	main@minutes+1,??_main+1
  4974   0014DA  0E04               	movlw	4
  4975   0014DC  6E3B               	movwf	(??_main+2)^0,c
  4976   0014DE                     u3495:
  4977   0014DE  343A               	rlcf	(??_main+1)^0,w,c
  4978   0014E0  323A               	rrcf	(??_main+1)^0,f,c
  4979   0014E2  3239               	rrcf	??_main^0,f,c
  4980   0014E4  2E3B               	decfsz	(??_main+2)^0,f,c
  4981   0014E6  EF6F  F00A         	goto	u3495
  4982   0014EA  0E0F               	movlw	15
  4983   0014EC  1439               	andwf	??_main^0,w,c
  4984   0014EE  6F24               	movwf	main@m_263& (0+255),b
  4985   0014F0  6B25               	clrf	(main@m_263+1)& (0+255),b
  4986   0014F2                     
  4987                           ; BSR set to: 1
  4988                           ;main.c: 680:               m1 = (minutes & 0x0F);
  4989   0014F2  0E0F               	movlw	15
  4990   0014F4  1561               	andwf	main@minutes& (0+255),w,b
  4991   0014F6  6F26               	movwf	main@m1& (0+255),b
  4992   0014F8  6B27               	clrf	(main@m1+1)& (0+255),b
  4993                           
  4994                           ;main.c: 681:                  seconds = read_ds1307(0x00);
  4995   0014FA  0E00               	movlw	0
  4996   0014FC  EC2B  F016         	call	_read_ds1307
  4997   001500  6E39               	movwf	??_main^0,c
  4998   001502  5039               	movf	??_main^0,w,c
  4999   001504  0101               	movlb	1	; () banked
  5000   001506  6F63               	movwf	main@seconds& (0+255),b
  5001   001508  6B64               	clrf	(main@seconds+1)& (0+255),b
  5002   00150A                     
  5003                           ; BSR set to: 1
  5004                           ;main.c: 682:                  s = ((seconds >> 4) & 0x0F);
  5005   00150A  C163  F039         	movff	main@seconds,??_main
  5006   00150E  C164  F03A         	movff	main@seconds+1,??_main+1
  5007   001512  0E04               	movlw	4
  5008   001514  6E3B               	movwf	(??_main+2)^0,c
  5009   001516                     u3505:
  5010   001516  343A               	rlcf	(??_main+1)^0,w,c
  5011   001518  323A               	rrcf	(??_main+1)^0,f,c
  5012   00151A  3239               	rrcf	??_main^0,f,c
  5013   00151C  2E3B               	decfsz	(??_main+2)^0,f,c
  5014   00151E  EF8B  F00A         	goto	u3505
  5015   001522  0E0F               	movlw	15
  5016   001524  1439               	andwf	??_main^0,w,c
  5017   001526  6F28               	movwf	main@s_265& (0+255),b
  5018   001528  6B29               	clrf	(main@s_265+1)& (0+255),b
  5019   00152A                     
  5020                           ; BSR set to: 1
  5021                           ;main.c: 683:               s1 = (seconds & 0x0F);
  5022   00152A  0E0F               	movlw	15
  5023   00152C  1563               	andwf	main@seconds& (0+255),w,b
  5024   00152E  6F2A               	movwf	main@s1& (0+255),b
  5025   001530  6B2B               	clrf	(main@s1+1)& (0+255),b
  5026   001532                     
  5027                           ; BSR set to: 1
  5028                           ;main.c: 684:                  settime=0;
  5029   001532  0E00               	movlw	0
  5030   001534  6F5A               	movwf	(main@settime+1)& (0+255),b
  5031   001536  0E00               	movlw	0
  5032   001538  6F59               	movwf	main@settime& (0+255),b
  5033   00153A                     
  5034                           ; BSR set to: 1
  5035                           ;main.c: 685:                   hour12=(h*10+h1);
  5036   00153A  C120  F001         	movff	main@h,___wmul@multiplier
  5037   00153E  C121  F002         	movff	main@h+1,___wmul@multiplier+1
  5038   001542  0E00               	movlw	0
  5039   001544  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5040   001546  0E0A               	movlw	10
  5041   001548  6E03               	movwf	___wmul@multiplicand^0,c
  5042   00154A  EC40  F016         	call	___wmul	;wreg free
  5043   00154E  0101               	movlb	1	; () banked
  5044   001550  5122               	movf	main@h1& (0+255),w,b
  5045   001552  2401               	addwf	?___wmul^0,w,c
  5046   001554  6F95               	movwf	main@hour12& (0+255),b
  5047   001556  5123               	movf	(main@h1+1)& (0+255),w,b
  5048   001558  2002               	addwfc	(?___wmul+1)^0,w,c
  5049   00155A  6F96               	movwf	(main@hour12+1)& (0+255),b
  5050   00155C                     
  5051                           ; BSR set to: 1
  5052                           ;main.c: 686:                  minutes12=(m*10+m1);
  5053   00155C  C124  F001         	movff	main@m_263,___wmul@multiplier
  5054   001560  C125  F002         	movff	main@m_263+1,___wmul@multiplier+1
  5055   001564  0E00               	movlw	0
  5056   001566  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5057   001568  0E0A               	movlw	10
  5058   00156A  6E03               	movwf	___wmul@multiplicand^0,c
  5059   00156C  EC40  F016         	call	___wmul	;wreg free
  5060   001570  0101               	movlb	1	; () banked
  5061   001572  5126               	movf	main@m1& (0+255),w,b
  5062   001574  2401               	addwf	?___wmul^0,w,c
  5063   001576  6F97               	movwf	main@minutes12& (0+255),b
  5064   001578  5127               	movf	(main@m1+1)& (0+255),w,b
  5065   00157A  2002               	addwfc	(?___wmul+1)^0,w,c
  5066   00157C  6F98               	movwf	(main@minutes12+1)& (0+255),b
  5067   00157E                     
  5068                           ; BSR set to: 1
  5069                           ;main.c: 687:                  seconds12=(s*10+s1);
  5070   00157E  C128  F001         	movff	main@s_265,___wmul@multiplier
  5071   001582  C129  F002         	movff	main@s_265+1,___wmul@multiplier+1
  5072   001586  0E00               	movlw	0
  5073   001588  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5074   00158A  0E0A               	movlw	10
  5075   00158C  6E03               	movwf	___wmul@multiplicand^0,c
  5076   00158E  EC40  F016         	call	___wmul	;wreg free
  5077   001592  0101               	movlb	1	; () banked
  5078   001594  512A               	movf	main@s1& (0+255),w,b
  5079   001596  2401               	addwf	?___wmul^0,w,c
  5080   001598  6F99               	movwf	main@seconds12& (0+255),b
  5081   00159A  512B               	movf	(main@s1+1)& (0+255),w,b
  5082   00159C  2002               	addwfc	(?___wmul+1)^0,w,c
  5083   00159E  6F9A               	movwf	(main@seconds12+1)& (0+255),b
  5084   0015A0                     l4324:
  5085                           
  5086                           ; BSR set to: 1
  5087                           ;main.c: 693:                 if(delay1234++ <400)
  5088   0015A0  5185               	movf	main@delay1234& (0+255),w,b
  5089   0015A2  6E39               	movwf	??_main^0,c
  5090   0015A4  5186               	movf	(main@delay1234+1)& (0+255),w,b
  5091   0015A6  6E3A               	movwf	(??_main+1)^0,c
  5092   0015A8  4B85               	infsnz	main@delay1234& (0+255),f,b
  5093   0015AA  2B86               	incf	(main@delay1234+1)& (0+255),f,b
  5094   0015AC  BE3A               	btfsc	(??_main+1)^0,7,c
  5095   0015AE  EFE4  F00A         	goto	u3510
  5096   0015B2  0E90               	movlw	144
  5097   0015B4  5C39               	subwf	??_main^0,w,c
  5098   0015B6  0E01               	movlw	1
  5099   0015B8  583A               	subwfb	(??_main+1)^0,w,c
  5100   0015BA  B0D8               	btfsc	status,0,c
  5101   0015BC  EFE2  F00A         	goto	u3511
  5102   0015C0  EFE4  F00A         	goto	u3510
  5103   0015C4                     u3511:
  5104   0015C4  EF50  F00B         	goto	l4336
  5105   0015C8                     u3510:
  5106   0015C8                     
  5107                           ; BSR set to: 1
  5108                           ;main.c: 694:                 {;main.c: 695:                      clcd_putch( '0'+(hour1
      +                          2%10), (0xC0 + (2)));
  5109   0015C8  0EC2               	movlw	194
  5110   0015CA  6E0F               	movwf	clcd_putch@addr^0,c
  5111   0015CC  C195  F009         	movff	main@hour12,___awmod@dividend
  5112   0015D0  C196  F00A         	movff	main@hour12+1,___awmod@dividend+1
  5113   0015D4  0E00               	movlw	0
  5114   0015D6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5115   0015D8  0E0A               	movlw	10
  5116   0015DA  6E0B               	movwf	___awmod@divisor^0,c
  5117   0015DC  EC9A  F012         	call	___awmod	;wreg free
  5118   0015E0  5009               	movf	?___awmod^0,w,c
  5119   0015E2  0F30               	addlw	48
  5120   0015E4  EC80  F016         	call	_clcd_putch
  5121                           
  5122                           ;main.c: 696:                 clcd_putch('0'+ (hour12/10), (0xC0 + (1)));
  5123   0015E8  0EC1               	movlw	193
  5124   0015EA  6E0F               	movwf	clcd_putch@addr^0,c
  5125   0015EC  C195  F001         	movff	main@hour12,___awdiv@dividend
  5126   0015F0  C196  F002         	movff	main@hour12+1,___awdiv@dividend+1
  5127   0015F4  0E00               	movlw	0
  5128   0015F6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5129   0015F8  0E0A               	movlw	10
  5130   0015FA  6E03               	movwf	___awdiv@divisor^0,c
  5131   0015FC  EC38  F012         	call	___awdiv	;wreg free
  5132   001600  5001               	movf	?___awdiv^0,w,c
  5133   001602  0F30               	addlw	48
  5134   001604  EC80  F016         	call	_clcd_putch
  5135   001608                     
  5136                           ;main.c: 698:                 clcd_putch(':', (0xC0 + (3)));
  5137   001608  0EC3               	movlw	195
  5138   00160A  6E0F               	movwf	clcd_putch@addr^0,c
  5139   00160C  0E3A               	movlw	58
  5140   00160E  EC80  F016         	call	_clcd_putch
  5141   001612                     
  5142                           ;main.c: 699:                  clcd_putch('0'+(minutes12%10), (0xC0 + (5)));
  5143   001612  0EC5               	movlw	197
  5144   001614  6E0F               	movwf	clcd_putch@addr^0,c
  5145   001616  C197  F009         	movff	main@minutes12,___awmod@dividend
  5146   00161A  C198  F00A         	movff	main@minutes12+1,___awmod@dividend+1
  5147   00161E  0E00               	movlw	0
  5148   001620  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5149   001622  0E0A               	movlw	10
  5150   001624  6E0B               	movwf	___awmod@divisor^0,c
  5151   001626  EC9A  F012         	call	___awmod	;wreg free
  5152   00162A  5009               	movf	?___awmod^0,w,c
  5153   00162C  0F30               	addlw	48
  5154   00162E  EC80  F016         	call	_clcd_putch
  5155   001632                     
  5156                           ;main.c: 700:                 clcd_putch('0'+(minutes12/10), (0xC0 + (4)));
  5157   001632  0EC4               	movlw	196
  5158   001634  6E0F               	movwf	clcd_putch@addr^0,c
  5159   001636  C197  F001         	movff	main@minutes12,___awdiv@dividend
  5160   00163A  C198  F002         	movff	main@minutes12+1,___awdiv@dividend+1
  5161   00163E  0E00               	movlw	0
  5162   001640  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5163   001642  0E0A               	movlw	10
  5164   001644  6E03               	movwf	___awdiv@divisor^0,c
  5165   001646  EC38  F012         	call	___awdiv	;wreg free
  5166   00164A  5001               	movf	?___awdiv^0,w,c
  5167   00164C  0F30               	addlw	48
  5168   00164E  EC80  F016         	call	_clcd_putch
  5169   001652                     
  5170                           ;main.c: 701:                 clcd_putch(':', (0xC0 + (6)));
  5171   001652  0EC6               	movlw	198
  5172   001654  6E0F               	movwf	clcd_putch@addr^0,c
  5173   001656  0E3A               	movlw	58
  5174   001658  EC80  F016         	call	_clcd_putch
  5175                           
  5176                           ;main.c: 702:                  clcd_putch('0'+(seconds12%10), (0xC0 + (8)));
  5177   00165C  0EC8               	movlw	200
  5178   00165E  6E0F               	movwf	clcd_putch@addr^0,c
  5179   001660  C199  F009         	movff	main@seconds12,___awmod@dividend
  5180   001664  C19A  F00A         	movff	main@seconds12+1,___awmod@dividend+1
  5181   001668  0E00               	movlw	0
  5182   00166A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5183   00166C  0E0A               	movlw	10
  5184   00166E  6E0B               	movwf	___awmod@divisor^0,c
  5185   001670  EC9A  F012         	call	___awmod	;wreg free
  5186   001674  5009               	movf	?___awmod^0,w,c
  5187   001676  0F30               	addlw	48
  5188   001678  EC80  F016         	call	_clcd_putch
  5189                           
  5190                           ;main.c: 703:                 clcd_putch('0'+(seconds12/10), (0xC0 + (7)));
  5191   00167C  0EC7               	movlw	199
  5192   00167E  6E0F               	movwf	clcd_putch@addr^0,c
  5193   001680  C199  F001         	movff	main@seconds12,___awdiv@dividend
  5194   001684  C19A  F002         	movff	main@seconds12+1,___awdiv@dividend+1
  5195   001688  0E00               	movlw	0
  5196   00168A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5197   00168C  0E0A               	movlw	10
  5198   00168E  6E03               	movwf	___awdiv@divisor^0,c
  5199   001690  EC38  F012         	call	___awdiv	;wreg free
  5200   001694  5001               	movf	?___awdiv^0,w,c
  5201   001696  0F30               	addlw	48
  5202   001698  EC80  F016         	call	_clcd_putch
  5203                           
  5204                           ;main.c: 704:                 }
  5205   00169C  EFBE  F00B         	goto	l4356
  5206   0016A0                     l4336:
  5207                           
  5208                           ; BSR set to: 1
  5209   0016A0  BF86               	btfsc	(main@delay1234+1)& (0+255),7,b
  5210   0016A2  EF5C  F00B         	goto	u3521
  5211   0016A6  0E91               	movlw	145
  5212   0016A8  5D85               	subwf	main@delay1234& (0+255),w,b
  5213   0016AA  0E01               	movlw	1
  5214   0016AC  5986               	subwfb	(main@delay1234+1)& (0+255),w,b
  5215   0016AE  A0D8               	btfss	status,0,c
  5216   0016B0  EF5C  F00B         	goto	u3521
  5217   0016B4  EF5E  F00B         	goto	u3520
  5218   0016B8                     u3521:
  5219   0016B8  EFAC  F00B         	goto	l4352
  5220   0016BC                     u3520:
  5221   0016BC                     
  5222                           ; BSR set to: 1
  5223   0016BC  BF86               	btfsc	(main@delay1234+1)& (0+255),7,b
  5224   0016BE  EF6C  F00B         	goto	u3530
  5225   0016C2  0E20               	movlw	32
  5226   0016C4  5D85               	subwf	main@delay1234& (0+255),w,b
  5227   0016C6  0E03               	movlw	3
  5228   0016C8  5986               	subwfb	(main@delay1234+1)& (0+255),w,b
  5229   0016CA  B0D8               	btfsc	status,0,c
  5230   0016CC  EF6A  F00B         	goto	u3531
  5231   0016D0  EF6C  F00B         	goto	u3530
  5232   0016D4                     u3531:
  5233   0016D4  EFAC  F00B         	goto	l4352
  5234   0016D8                     u3530:
  5235   0016D8                     
  5236                           ; BSR set to: 1
  5237                           ;main.c: 706:                 {;main.c: 707:                     if(x2==1)
  5238   0016D8  05A3               	decf	main@x2& (0+255),w,b
  5239   0016DA  11A4               	iorwf	(main@x2+1)& (0+255),w,b
  5240   0016DC  A4D8               	btfss	status,2,c
  5241   0016DE  EF73  F00B         	goto	u3541
  5242   0016E2  EF75  F00B         	goto	u3540
  5243   0016E6                     u3541:
  5244   0016E6  EF81  F00B         	goto	l4344
  5245   0016EA                     u3540:
  5246   0016EA                     
  5247                           ; BSR set to: 1
  5248                           ;main.c: 708:                     {;main.c: 709:                         clcd_putch( ' '
      +                          , (0xC0 + (2)));
  5249   0016EA  0EC2               	movlw	194
  5250   0016EC  6E0F               	movwf	clcd_putch@addr^0,c
  5251   0016EE  0E20               	movlw	32
  5252   0016F0  EC80  F016         	call	_clcd_putch
  5253                           
  5254                           ;main.c: 710:                          clcd_putch(' ', (0xC0 + (1)));
  5255   0016F4  0EC1               	movlw	193
  5256   0016F6  6E0F               	movwf	clcd_putch@addr^0,c
  5257   0016F8  0E20               	movlw	32
  5258   0016FA  EC80  F016         	call	_clcd_putch
  5259                           
  5260                           ;main.c: 711:                     }
  5261   0016FE  EFBE  F00B         	goto	l4356
  5262   001702                     l4344:
  5263                           
  5264                           ; BSR set to: 1
  5265   001702  0E02               	movlw	2
  5266   001704  19A3               	xorwf	main@x2& (0+255),w,b
  5267   001706  11A4               	iorwf	(main@x2+1)& (0+255),w,b
  5268   001708  A4D8               	btfss	status,2,c
  5269   00170A  EF89  F00B         	goto	u3551
  5270   00170E  EF8B  F00B         	goto	u3550
  5271   001712                     u3551:
  5272   001712  EF97  F00B         	goto	l4348
  5273   001716                     u3550:
  5274   001716                     
  5275                           ; BSR set to: 1
  5276                           ;main.c: 713:                     {;main.c: 714:                          clcd_putch(' '
      +                          , (0xC0 + (5)));
  5277   001716  0EC5               	movlw	197
  5278   001718  6E0F               	movwf	clcd_putch@addr^0,c
  5279   00171A  0E20               	movlw	32
  5280   00171C  EC80  F016         	call	_clcd_putch
  5281                           
  5282                           ;main.c: 715:                          clcd_putch(' ', (0xC0 + (4)));
  5283   001720  0EC4               	movlw	196
  5284   001722  6E0F               	movwf	clcd_putch@addr^0,c
  5285   001724  0E20               	movlw	32
  5286   001726  EC80  F016         	call	_clcd_putch
  5287                           
  5288                           ;main.c: 717:                     }
  5289   00172A  EFBE  F00B         	goto	l4356
  5290   00172E                     l4348:
  5291                           
  5292                           ; BSR set to: 1
  5293   00172E  51A3               	movf	main@x2& (0+255),w,b
  5294   001730  11A4               	iorwf	(main@x2+1)& (0+255),w,b
  5295   001732  A4D8               	btfss	status,2,c
  5296   001734  EF9E  F00B         	goto	u3561
  5297   001738  EFA0  F00B         	goto	u3560
  5298   00173C                     u3561:
  5299   00173C  EFBE  F00B         	goto	l194
  5300   001740                     u3560:
  5301   001740                     
  5302                           ; BSR set to: 1
  5303                           ;main.c: 719:                     {;main.c: 720:                         clcd_putch(' ',
      +                           (0xC0 + (8)));
  5304   001740  0EC8               	movlw	200
  5305   001742  6E0F               	movwf	clcd_putch@addr^0,c
  5306   001744  0E20               	movlw	32
  5307   001746  EC80  F016         	call	_clcd_putch
  5308                           
  5309                           ;main.c: 721:                        clcd_putch(' ', (0xC0 + (7)));
  5310   00174A  0EC7               	movlw	199
  5311   00174C  6E0F               	movwf	clcd_putch@addr^0,c
  5312   00174E  0E20               	movlw	32
  5313   001750  EC80  F016         	call	_clcd_putch
  5314   001754  EFBE  F00B         	goto	l4356
  5315   001758                     l4352:
  5316                           
  5317                           ; BSR set to: 1
  5318   001758  0E20               	movlw	32
  5319   00175A  1985               	xorwf	main@delay1234& (0+255),w,b
  5320   00175C  E107               	bnz	u3571
  5321   00175E  0E03               	movlw	3
  5322   001760  1986               	xorwf	(main@delay1234+1)& (0+255),w,b
  5323   001762  A4D8               	btfss	status,2,c
  5324   001764  EFB6  F00B         	goto	u3571
  5325   001768  EFB8  F00B         	goto	u3570
  5326   00176C                     u3571:
  5327   00176C  EFBE  F00B         	goto	l4356
  5328   001770                     u3570:
  5329   001770                     
  5330                           ; BSR set to: 1
  5331                           ;main.c: 726:                 {;main.c: 727:                     delay1234=0;
  5332   001770  0E00               	movlw	0
  5333   001772  6F86               	movwf	(main@delay1234+1)& (0+255),b
  5334   001774  0E00               	movlw	0
  5335   001776  6F85               	movwf	main@delay1234& (0+255),b
  5336   001778  EFBE  F00B         	goto	l4356
  5337   00177C                     l194:
  5338   00177C                     l4356:
  5339                           
  5340                           ;main.c: 734:                 unsigned int key3 = read_switches(0);
  5341   00177C  0E00               	movlw	0
  5342   00177E  ECC8  F013         	call	_read_switches
  5343   001782  6E39               	movwf	??_main^0,c
  5344   001784  5039               	movf	??_main^0,w,c
  5345   001786  0101               	movlb	1	; () banked
  5346   001788  6F81               	movwf	main@key3& (0+255),b
  5347   00178A  6B82               	clrf	(main@key3+1)& (0+255),b
  5348   00178C                     
  5349                           ; BSR set to: 1
  5350                           ;main.c: 735:                 if(key3!=255)
  5351   00178C  2981               	incf	main@key3& (0+255),w,b
  5352   00178E  1182               	iorwf	(main@key3+1)& (0+255),w,b
  5353   001790  B4D8               	btfsc	status,2,c
  5354   001792  EFCD  F00B         	goto	u3581
  5355   001796  EFCF  F00B         	goto	u3580
  5356   00179A                     u3581:
  5357   00179A  EF99  F00C         	goto	l4390
  5358   00179E                     u3580:
  5359   00179E                     
  5360                           ; BSR set to: 1
  5361                           ;main.c: 736:                 {;main.c: 737:                     time23++;
  5362   00179E  4B7D               	infsnz	main@time23& (0+255),f,b
  5363   0017A0  2B7E               	incf	(main@time23+1)& (0+255),f,b
  5364   0017A2                     
  5365                           ; BSR set to: 1
  5366                           ;main.c: 738:                     bsw=key3;
  5367   0017A2  C181  F165         	movff	main@key3,main@bsw
  5368   0017A6  C182  F166         	movff	main@key3+1,main@bsw+1
  5369   0017AA                     
  5370                           ; BSR set to: 1
  5371                           ;main.c: 739:                     if(time23==1000)
  5372   0017AA  0EE8               	movlw	232
  5373   0017AC  197D               	xorwf	main@time23& (0+255),w,b
  5374   0017AE  E107               	bnz	u3591
  5375   0017B0  0E03               	movlw	3
  5376   0017B2  197E               	xorwf	(main@time23+1)& (0+255),w,b
  5377   0017B4  A4D8               	btfss	status,2,c
  5378   0017B6  EFDF  F00B         	goto	u3591
  5379   0017BA  EFE1  F00B         	goto	u3590
  5380   0017BE                     u3591:
  5381   0017BE  EF54  F001         	goto	l3792
  5382   0017C2                     u3590:
  5383   0017C2                     
  5384                           ; BSR set to: 1
  5385                           ;main.c: 740:                     {;main.c: 742:                         time23=0;
  5386   0017C2  0E00               	movlw	0
  5387   0017C4  6F7E               	movwf	(main@time23+1)& (0+255),b
  5388   0017C6  0E00               	movlw	0
  5389   0017C8  6F7D               	movwf	main@time23& (0+255),b
  5390   0017CA                     
  5391                           ; BSR set to: 1
  5392                           ;main.c: 743:                        if(key3==5)
  5393   0017CA  0E05               	movlw	5
  5394   0017CC  1981               	xorwf	main@key3& (0+255),w,b
  5395   0017CE  1182               	iorwf	(main@key3+1)& (0+255),w,b
  5396   0017D0  A4D8               	btfss	status,2,c
  5397   0017D2  EFED  F00B         	goto	u3601
  5398   0017D6  EFEF  F00B         	goto	u3600
  5399   0017DA                     u3601:
  5400   0017DA  EF85  F00C         	goto	l4386
  5401   0017DE                     u3600:
  5402   0017DE                     
  5403                           ; BSR set to: 1
  5404                           ;main.c: 744:                        {;main.c: 746:                            write_ds1
      +                          307(0x02,((hour12/10)<<4)| hour12%10);
  5405   0017DE  C195  F009         	movff	main@hour12,___awmod@dividend
  5406   0017E2  C196  F00A         	movff	main@hour12+1,___awmod@dividend+1
  5407   0017E6  0E00               	movlw	0
  5408   0017E8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5409   0017EA  0E0A               	movlw	10
  5410   0017EC  6E0B               	movwf	___awmod@divisor^0,c
  5411   0017EE  EC9A  F012         	call	___awmod	;wreg free
  5412   0017F2  C009  F039         	movff	?___awmod,??_main
  5413   0017F6  C00A  F03A         	movff	?___awmod+1,??_main+1
  5414   0017FA  C195  F001         	movff	main@hour12,___awdiv@dividend
  5415   0017FE  C196  F002         	movff	main@hour12+1,___awdiv@dividend+1
  5416   001802  0E00               	movlw	0
  5417   001804  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5418   001806  0E0A               	movlw	10
  5419   001808  6E03               	movwf	___awdiv@divisor^0,c
  5420   00180A  EC38  F012         	call	___awdiv	;wreg free
  5421   00180E  3801               	swapf	?___awdiv^0,w,c
  5422   001810  0BF0               	andlw	240
  5423   001812  1039               	iorwf	??_main^0,w,c
  5424   001814  6E0F               	movwf	write_ds1307@data^0,c
  5425   001816  0E02               	movlw	2
  5426   001818  EC63  F016         	call	_write_ds1307
  5427                           
  5428                           ;main.c: 747:                            write_ds1307(0x01,(( minutes12/10)<<4)| minutes
      +                          12%10);
  5429   00181C  C197  F009         	movff	main@minutes12,___awmod@dividend
  5430   001820  C198  F00A         	movff	main@minutes12+1,___awmod@dividend+1
  5431   001824  0E00               	movlw	0
  5432   001826  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5433   001828  0E0A               	movlw	10
  5434   00182A  6E0B               	movwf	___awmod@divisor^0,c
  5435   00182C  EC9A  F012         	call	___awmod	;wreg free
  5436   001830  C009  F039         	movff	?___awmod,??_main
  5437   001834  C00A  F03A         	movff	?___awmod+1,??_main+1
  5438   001838  C197  F001         	movff	main@minutes12,___awdiv@dividend
  5439   00183C  C198  F002         	movff	main@minutes12+1,___awdiv@dividend+1
  5440   001840  0E00               	movlw	0
  5441   001842  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5442   001844  0E0A               	movlw	10
  5443   001846  6E03               	movwf	___awdiv@divisor^0,c
  5444   001848  EC38  F012         	call	___awdiv	;wreg free
  5445   00184C  3801               	swapf	?___awdiv^0,w,c
  5446   00184E  0BF0               	andlw	240
  5447   001850  1039               	iorwf	??_main^0,w,c
  5448   001852  6E0F               	movwf	write_ds1307@data^0,c
  5449   001854  0E01               	movlw	1
  5450   001856  EC63  F016         	call	_write_ds1307
  5451                           
  5452                           ;main.c: 748:                            write_ds1307(0x00,((seconds12/10)<<4)| seconds1
      +                          2%10);
  5453   00185A  C199  F009         	movff	main@seconds12,___awmod@dividend
  5454   00185E  C19A  F00A         	movff	main@seconds12+1,___awmod@dividend+1
  5455   001862  0E00               	movlw	0
  5456   001864  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5457   001866  0E0A               	movlw	10
  5458   001868  6E0B               	movwf	___awmod@divisor^0,c
  5459   00186A  EC9A  F012         	call	___awmod	;wreg free
  5460   00186E  C009  F039         	movff	?___awmod,??_main
  5461   001872  C00A  F03A         	movff	?___awmod+1,??_main+1
  5462   001876  C199  F001         	movff	main@seconds12,___awdiv@dividend
  5463   00187A  C19A  F002         	movff	main@seconds12+1,___awdiv@dividend+1
  5464   00187E  0E00               	movlw	0
  5465   001880  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5466   001882  0E0A               	movlw	10
  5467   001884  6E03               	movwf	___awdiv@divisor^0,c
  5468   001886  EC38  F012         	call	___awdiv	;wreg free
  5469   00188A  3801               	swapf	?___awdiv^0,w,c
  5470   00188C  0BF0               	andlw	240
  5471   00188E  1039               	iorwf	??_main^0,w,c
  5472   001890  6E0F               	movwf	write_ds1307@data^0,c
  5473   001892  0E00               	movlw	0
  5474   001894  EC63  F016         	call	_write_ds1307
  5475   001898                     
  5476                           ;main.c: 751:                             settime=1;
  5477   001898  0E00               	movlw	0
  5478   00189A  0101               	movlb	1	; () banked
  5479   00189C  6F5A               	movwf	(main@settime+1)& (0+255),b
  5480   00189E  0E01               	movlw	1
  5481   0018A0  6F59               	movwf	main@settime& (0+255),b
  5482   0018A2                     
  5483                           ; BSR set to: 1
  5484                           ;main.c: 752:                              clcd_write(0x01, 0);
  5485   0018A2  0E00               	movlw	0
  5486   0018A4  6E01               	movwf	clcd_write@control_bit^0,c
  5487   0018A6  0E01               	movlw	1
  5488   0018A8  EC99  F015         	call	_clcd_write
  5489   0018AC                     
  5490                           ;main.c: 753:                              clcd_print("  SET TIME      ", (0x80 + (0)));
  5491   0018AC  0E12               	movlw	low STR_26
  5492   0018AE  6E07               	movwf	clcd_print@data^0,c
  5493   0018B0  0E2F               	movlw	high STR_26
  5494   0018B2  6E08               	movwf	(clcd_print@data+1)^0,c
  5495   0018B4  0E80               	movlw	128
  5496   0018B6  6E09               	movwf	clcd_print@addr^0,c
  5497   0018B8  EC73  F014         	call	_clcd_print	;wreg free
  5498   0018BC                     
  5499                           ;main.c: 754:                             for(int i = 5000;i--;)
  5500   0018BC  0E13               	movlw	19
  5501   0018BE  0101               	movlb	1	; () banked
  5502   0018C0  6F2D               	movwf	(main@i+1)& (0+255),b
  5503   0018C2  0E88               	movlw	136
  5504   0018C4  6F2C               	movwf	main@i& (0+255),b
  5505   0018C6  EF6D  F00C         	goto	l4382
  5506   0018CA                     l4380:
  5507                           
  5508                           ; BSR set to: 1
  5509                           ;main.c: 755:                                 clcd_print("   SUCCESSFULL  ", (0xC0 + (0)
      +                          ));
  5510   0018CA  0E34               	movlw	low STR_27
  5511   0018CC  6E07               	movwf	clcd_print@data^0,c
  5512   0018CE  0E2F               	movlw	high STR_27
  5513   0018D0  6E08               	movwf	(clcd_print@data+1)^0,c
  5514   0018D2  0EC0               	movlw	192
  5515   0018D4  6E09               	movwf	clcd_print@addr^0,c
  5516   0018D6  EC73  F014         	call	_clcd_print	;wreg free
  5517   0018DA                     l4382:
  5518   0018DA  0101               	movlb	1	; () banked
  5519   0018DC  072C               	decf	main@i& (0+255),f,b
  5520   0018DE  A0D8               	btfss	status,0,c
  5521   0018E0  072D               	decf	(main@i+1)& (0+255),f,b
  5522   0018E2  292C               	incf	main@i& (0+255),w,b
  5523   0018E4  E106               	bnz	u3611
  5524   0018E6  292D               	incf	(main@i+1)& (0+255),w,b
  5525   0018E8  A4D8               	btfss	status,2,c
  5526   0018EA  EF79  F00C         	goto	u3611
  5527   0018EE  EF7B  F00C         	goto	u3610
  5528   0018F2                     u3611:
  5529   0018F2  EF65  F00C         	goto	l4380
  5530   0018F6                     u3610:
  5531   0018F6                     
  5532                           ; BSR set to: 1
  5533                           ;main.c: 759:                                  mode=3;
  5534   0018F6  0E00               	movlw	0
  5535   0018F8  6F78               	movwf	(main@mode+1)& (0+255),b
  5536   0018FA  0E03               	movlw	3
  5537   0018FC  6F77               	movwf	main@mode& (0+255),b
  5538                           
  5539                           ;main.c: 760:                                  setf=1;
  5540   0018FE  0E00               	movlw	0
  5541   001900  6F15               	movwf	(main@setf+1)& (0+255),b
  5542   001902  0E01               	movlw	1
  5543   001904  6F14               	movwf	main@setf& (0+255),b
  5544                           
  5545                           ;main.c: 763:                        }
  5546   001906  EF54  F001         	goto	l3792
  5547   00190A                     l4386:
  5548                           
  5549                           ; BSR set to: 1
  5550   00190A  0E06               	movlw	6
  5551   00190C  1981               	xorwf	main@key3& (0+255),w,b
  5552   00190E  1182               	iorwf	(main@key3+1)& (0+255),w,b
  5553   001910  A4D8               	btfss	status,2,c
  5554   001912  EF8D  F00C         	goto	u3621
  5555   001916  EF8F  F00C         	goto	u3620
  5556   00191A                     u3621:
  5557   00191A  EF54  F001         	goto	l99
  5558   00191E                     u3620:
  5559   00191E                     
  5560                           ; BSR set to: 1
  5561                           ;main.c: 765:                        {;main.c: 766:                           settime=1;
  5562   00191E  0E00               	movlw	0
  5563   001920  6F5A               	movwf	(main@settime+1)& (0+255),b
  5564   001922  0E01               	movlw	1
  5565   001924  6F59               	movwf	main@settime& (0+255),b
  5566                           
  5567                           ;main.c: 767:                            mode=3;
  5568   001926  0E00               	movlw	0
  5569   001928  6F78               	movwf	(main@mode+1)& (0+255),b
  5570   00192A  0E03               	movlw	3
  5571   00192C  6F77               	movwf	main@mode& (0+255),b
  5572   00192E  EF54  F001         	goto	l3792
  5573   001932                     l4390:
  5574                           
  5575                           ; BSR set to: 1
  5576   001932  0EE8               	movlw	232
  5577   001934  5D7D               	subwf	main@time23& (0+255),w,b
  5578   001936  0E03               	movlw	3
  5579   001938  597E               	subwfb	(main@time23+1)& (0+255),w,b
  5580   00193A  B0D8               	btfsc	status,0,c
  5581   00193C  EFA2  F00C         	goto	u3631
  5582   001940  EFA4  F00C         	goto	u3630
  5583   001944                     u3631:
  5584   001944  EF54  F001         	goto	l99
  5585   001948                     u3630:
  5586   001948                     
  5587                           ; BSR set to: 1
  5588   001948  517D               	movf	main@time23& (0+255),w,b
  5589   00194A  117E               	iorwf	(main@time23+1)& (0+255),w,b
  5590   00194C  B4D8               	btfsc	status,2,c
  5591   00194E  EFAB  F00C         	goto	u3641
  5592   001952  EFAD  F00C         	goto	u3640
  5593   001956                     u3641:
  5594   001956  EF54  F001         	goto	l99
  5595   00195A                     u3640:
  5596   00195A                     
  5597                           ; BSR set to: 1
  5598                           ;main.c: 776:                         time23 = 0;
  5599   00195A  0E00               	movlw	0
  5600   00195C  6F7E               	movwf	(main@time23+1)& (0+255),b
  5601   00195E  0E00               	movlw	0
  5602   001960  6F7D               	movwf	main@time23& (0+255),b
  5603   001962                     
  5604                           ; BSR set to: 1
  5605                           ;main.c: 778:                         if (bsw == 5)
  5606   001962  0E05               	movlw	5
  5607   001964  1965               	xorwf	main@bsw& (0+255),w,b
  5608   001966  1166               	iorwf	(main@bsw+1)& (0+255),w,b
  5609   001968  A4D8               	btfss	status,2,c
  5610   00196A  EFB9  F00C         	goto	u3651
  5611   00196E  EFBB  F00C         	goto	u3650
  5612   001972                     u3651:
  5613   001972  EFCD  F00C         	goto	l4400
  5614   001976                     u3650:
  5615   001976                     
  5616                           ; BSR set to: 1
  5617                           ;main.c: 779:                         {;main.c: 780:                             x2=(x2+
      +                          1)%3;
  5618   001976  0E01               	movlw	1
  5619   001978  25A3               	addwf	main@x2& (0+255),w,b
  5620   00197A  6E09               	movwf	___awmod@dividend^0,c
  5621   00197C  0E00               	movlw	0
  5622   00197E  21A4               	addwfc	(main@x2+1)& (0+255),w,b
  5623   001980  6E0A               	movwf	(___awmod@dividend+1)^0,c
  5624   001982  0E00               	movlw	0
  5625   001984  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5626   001986  0E03               	movlw	3
  5627   001988  6E0B               	movwf	___awmod@divisor^0,c
  5628   00198A  EC9A  F012         	call	___awmod	;wreg free
  5629   00198E  C009  F1A3         	movff	?___awmod,main@x2
  5630   001992  C00A  F1A4         	movff	?___awmod+1,main@x2+1
  5631                           
  5632                           ;main.c: 781:                          }
  5633   001996  EF54  F001         	goto	l3792
  5634   00199A                     l4400:
  5635                           
  5636                           ; BSR set to: 1
  5637   00199A  0E06               	movlw	6
  5638   00199C  1965               	xorwf	main@bsw& (0+255),w,b
  5639   00199E  1166               	iorwf	(main@bsw+1)& (0+255),w,b
  5640   0019A0  A4D8               	btfss	status,2,c
  5641   0019A2  EFD5  F00C         	goto	u3661
  5642   0019A6  EFD7  F00C         	goto	u3660
  5643   0019AA                     u3661:
  5644   0019AA  EF54  F001         	goto	l3792
  5645   0019AE                     u3660:
  5646   0019AE                     
  5647                           ; BSR set to: 1
  5648                           ;main.c: 783:                         {;main.c: 784:                             if(x2==
      +                          1)
  5649   0019AE  05A3               	decf	main@x2& (0+255),w,b
  5650   0019B0  11A4               	iorwf	(main@x2+1)& (0+255),w,b
  5651   0019B2  A4D8               	btfss	status,2,c
  5652   0019B4  EFDE  F00C         	goto	u3671
  5653   0019B8  EFE0  F00C         	goto	u3670
  5654   0019BC                     u3671:
  5655   0019BC  EFF2  F00C         	goto	l4408
  5656   0019C0                     u3670:
  5657   0019C0                     
  5658                           ; BSR set to: 1
  5659                           ;main.c: 785:                             {;main.c: 786:                                
      +                           hour12++;
  5660   0019C0  4B95               	infsnz	main@hour12& (0+255),f,b
  5661   0019C2  2B96               	incf	(main@hour12+1)& (0+255),f,b
  5662   0019C4                     
  5663                           ; BSR set to: 1
  5664                           ;main.c: 787:                                 hour12%=24;
  5665   0019C4  C195  F009         	movff	main@hour12,___awmod@dividend
  5666   0019C8  C196  F00A         	movff	main@hour12+1,___awmod@dividend+1
  5667   0019CC  0E00               	movlw	0
  5668   0019CE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5669   0019D0  0E18               	movlw	24
  5670   0019D2  6E0B               	movwf	___awmod@divisor^0,c
  5671   0019D4  EC9A  F012         	call	___awmod	;wreg free
  5672   0019D8  C009  F195         	movff	?___awmod,main@hour12
  5673   0019DC  C00A  F196         	movff	?___awmod+1,main@hour12+1
  5674                           
  5675                           ;main.c: 788:                             }
  5676   0019E0  EF54  F001         	goto	l3792
  5677   0019E4                     l4408:
  5678                           
  5679                           ; BSR set to: 1
  5680   0019E4  0E02               	movlw	2
  5681   0019E6  19A3               	xorwf	main@x2& (0+255),w,b
  5682   0019E8  11A4               	iorwf	(main@x2+1)& (0+255),w,b
  5683   0019EA  A4D8               	btfss	status,2,c
  5684   0019EC  EFFA  F00C         	goto	u3681
  5685   0019F0  EFFC  F00C         	goto	u3680
  5686   0019F4                     u3681:
  5687   0019F4  EF0E  F00D         	goto	l4414
  5688   0019F8                     u3680:
  5689   0019F8                     
  5690                           ; BSR set to: 1
  5691                           ;main.c: 790:                             {;main.c: 791:                                
      +                          minutes12++;
  5692   0019F8  4B97               	infsnz	main@minutes12& (0+255),f,b
  5693   0019FA  2B98               	incf	(main@minutes12+1)& (0+255),f,b
  5694   0019FC                     
  5695                           ; BSR set to: 1
  5696                           ;main.c: 792:                                minutes12%=60;
  5697   0019FC  C197  F009         	movff	main@minutes12,___awmod@dividend
  5698   001A00  C198  F00A         	movff	main@minutes12+1,___awmod@dividend+1
  5699   001A04  0E00               	movlw	0
  5700   001A06  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5701   001A08  0E3C               	movlw	60
  5702   001A0A  6E0B               	movwf	___awmod@divisor^0,c
  5703   001A0C  EC9A  F012         	call	___awmod	;wreg free
  5704   001A10  C009  F197         	movff	?___awmod,main@minutes12
  5705   001A14  C00A  F198         	movff	?___awmod+1,main@minutes12+1
  5706                           
  5707                           ;main.c: 793:                             }
  5708   001A18  EF54  F001         	goto	l3792
  5709   001A1C                     l4414:
  5710                           
  5711                           ; BSR set to: 1
  5712   001A1C  51A3               	movf	main@x2& (0+255),w,b
  5713   001A1E  11A4               	iorwf	(main@x2+1)& (0+255),w,b
  5714   001A20  A4D8               	btfss	status,2,c
  5715   001A22  EF15  F00D         	goto	u3691
  5716   001A26  EF17  F00D         	goto	u3690
  5717   001A2A                     u3691:
  5718   001A2A  EF54  F001         	goto	l99
  5719   001A2E                     u3690:
  5720   001A2E                     
  5721                           ; BSR set to: 1
  5722                           ;main.c: 795:                             {;main.c: 796:                                
      +                           seconds12++;
  5723   001A2E  4B99               	infsnz	main@seconds12& (0+255),f,b
  5724   001A30  2B9A               	incf	(main@seconds12+1)& (0+255),f,b
  5725   001A32                     
  5726                           ; BSR set to: 1
  5727                           ;main.c: 797:                                 seconds12%= 60;
  5728   001A32  C199  F009         	movff	main@seconds12,___awmod@dividend
  5729   001A36  C19A  F00A         	movff	main@seconds12+1,___awmod@dividend+1
  5730   001A3A  0E00               	movlw	0
  5731   001A3C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5732   001A3E  0E3C               	movlw	60
  5733   001A40  6E0B               	movwf	___awmod@divisor^0,c
  5734   001A42  EC9A  F012         	call	___awmod	;wreg free
  5735   001A46  C009  F199         	movff	?___awmod,main@seconds12
  5736   001A4A  C00A  F19A         	movff	?___awmod+1,main@seconds12+1
  5737   001A4E  EF54  F001         	goto	l3792
  5738   001A52                     l4420:
  5739                           
  5740                           ; BSR set to: 1
  5741                           ;main.c: 822:             {;main.c: 825:                 if (p1 < 4) {
  5742   001A52  BF9E               	btfsc	(main@p1+1)& (0+255),7,b
  5743   001A54  EF37  F00D         	goto	u3700
  5744   001A58  519E               	movf	(main@p1+1)& (0+255),w,b
  5745   001A5A  E107               	bnz	u3701
  5746   001A5C  0E04               	movlw	4
  5747   001A5E  5D9D               	subwf	main@p1& (0+255),w,b
  5748   001A60  B0D8               	btfsc	status,0,c
  5749   001A62  EF35  F00D         	goto	u3701
  5750   001A66  EF37  F00D         	goto	u3700
  5751   001A6A                     u3701:
  5752   001A6A  EF8D  F00D         	goto	l4446
  5753   001A6E                     u3700:
  5754   001A6E                     
  5755                           ; BSR set to: 1
  5756                           ;main.c: 827:                     clcd_print("entr new password", (0x80 + (0)));
  5757   001A6E  0EB5               	movlw	low (STR_29+3)
  5758   001A70  6E07               	movwf	clcd_print@data^0,c
  5759   001A72  0E2E               	movlw	high (STR_29+3)
  5760   001A74  6E08               	movwf	(clcd_print@data+1)^0,c
  5761   001A76  0E80               	movlw	128
  5762   001A78  6E09               	movwf	clcd_print@addr^0,c
  5763   001A7A  EC73  F014         	call	_clcd_print	;wreg free
  5764   001A7E                     
  5765                           ;main.c: 828:                     clcd_putch(' ', (0xC0 + (0)));
  5766   001A7E  0EC0               	movlw	192
  5767   001A80  6E0F               	movwf	clcd_putch@addr^0,c
  5768   001A82  0E20               	movlw	32
  5769   001A84  EC80  F016         	call	_clcd_putch
  5770   001A88                     
  5771                           ;main.c: 829:                     if (key == 5) {
  5772   001A88  0E05               	movlw	5
  5773   001A8A  0101               	movlb	1	; () banked
  5774   001A8C  19AC               	xorwf	main@key& (0+255),w,b
  5775   001A8E  11AD               	iorwf	(main@key+1)& (0+255),w,b
  5776   001A90  A4D8               	btfss	status,2,c
  5777   001A92  EF4D  F00D         	goto	u3711
  5778   001A96  EF4F  F00D         	goto	u3710
  5779   001A9A                     u3711:
  5780   001A9A  EF62  F00D         	goto	l4434
  5781   001A9E                     u3710:
  5782   001A9E                     
  5783                           ; BSR set to: 1
  5784                           ;main.c: 830:                         enter_password1[p1] = '1';
  5785   001A9E  0E1B               	movlw	low main@enter_password1
  5786   001AA0  259D               	addwf	main@p1& (0+255),w,b
  5787   001AA2  6ED9               	movwf	fsr2l,c
  5788   001AA4  0E01               	movlw	high main@enter_password1
  5789   001AA6  219E               	addwfc	(main@p1+1)& (0+255),w,b
  5790   001AA8  6EDA               	movwf	fsr2h,c
  5791   001AAA  0E31               	movlw	49
  5792   001AAC  6EDF               	movwf	indf2,c
  5793   001AAE                     
  5794                           ; BSR set to: 1
  5795                           ;main.c: 832:                         clcd_putch('*', (0xC0 + (p1 + 4)));
  5796   001AAE  519D               	movf	main@p1& (0+255),w,b
  5797   001AB0  0FC4               	addlw	196
  5798   001AB2  6E0F               	movwf	clcd_putch@addr^0,c
  5799   001AB4  0E2A               	movlw	42
  5800   001AB6  EC80  F016         	call	_clcd_putch
  5801   001ABA                     l4432:
  5802                           
  5803                           ;main.c: 833:                         p1++;
  5804   001ABA  0101               	movlb	1	; () banked
  5805   001ABC  4B9D               	infsnz	main@p1& (0+255),f,b
  5806   001ABE  2B9E               	incf	(main@p1+1)& (0+255),f,b
  5807                           
  5808                           ;main.c: 835:                     } else if (key == 6) {
  5809   001AC0  EF7C  F00D         	goto	l4442
  5810   001AC4                     l4434:
  5811                           
  5812                           ; BSR set to: 1
  5813   001AC4  0E06               	movlw	6
  5814   001AC6  19AC               	xorwf	main@key& (0+255),w,b
  5815   001AC8  11AD               	iorwf	(main@key+1)& (0+255),w,b
  5816   001ACA  A4D8               	btfss	status,2,c
  5817   001ACC  EF6A  F00D         	goto	u3721
  5818   001AD0  EF6C  F00D         	goto	u3720
  5819   001AD4                     u3721:
  5820   001AD4  EF7C  F00D         	goto	l4442
  5821   001AD8                     u3720:
  5822   001AD8                     
  5823                           ; BSR set to: 1
  5824                           ;main.c: 836:                         enter_password1[p1] = '0';
  5825   001AD8  0E1B               	movlw	low main@enter_password1
  5826   001ADA  259D               	addwf	main@p1& (0+255),w,b
  5827   001ADC  6ED9               	movwf	fsr2l,c
  5828   001ADE  0E01               	movlw	high main@enter_password1
  5829   001AE0  219E               	addwfc	(main@p1+1)& (0+255),w,b
  5830   001AE2  6EDA               	movwf	fsr2h,c
  5831   001AE4  0E30               	movlw	48
  5832   001AE6  6EDF               	movwf	indf2,c
  5833   001AE8                     
  5834                           ; BSR set to: 1
  5835                           ;main.c: 838:                         clcd_putch('*', (0xC0 + (p1 + 4)));
  5836   001AE8  519D               	movf	main@p1& (0+255),w,b
  5837   001AEA  0FC4               	addlw	196
  5838   001AEC  6E0F               	movwf	clcd_putch@addr^0,c
  5839   001AEE  0E2A               	movlw	42
  5840   001AF0  EC80  F016         	call	_clcd_putch
  5841   001AF4  EF5D  F00D         	goto	l4432
  5842   001AF8                     l4442:
  5843                           
  5844                           ; BSR set to: 1
  5845                           ;main.c: 841:                     if(p1==4)
  5846   001AF8  0E04               	movlw	4
  5847   001AFA  199D               	xorwf	main@p1& (0+255),w,b
  5848   001AFC  119E               	iorwf	(main@p1+1)& (0+255),w,b
  5849   001AFE  A4D8               	btfss	status,2,c
  5850   001B00  EF84  F00D         	goto	u3731
  5851   001B04  EF86  F00D         	goto	u3730
  5852   001B08                     u3731:
  5853   001B08  EF54  F001         	goto	l3792
  5854   001B0C                     u3730:
  5855   001B0C                     
  5856                           ; BSR set to: 1
  5857                           ;main.c: 842:                     {;main.c: 843:                         clcd_write(0x01
      +                          , 0);
  5858   001B0C  0E00               	movlw	0
  5859   001B0E  6E01               	movwf	clcd_write@control_bit^0,c
  5860   001B10  0E01               	movlw	1
  5861   001B12  EC99  F015         	call	_clcd_write
  5862   001B16  EF54  F001         	goto	l3792
  5863   001B1A                     l4446:
  5864                           
  5865                           ; BSR set to: 1
  5866   001B1A  BFA0               	btfsc	(main@p2+1)& (0+255),7,b
  5867   001B1C  EF9B  F00D         	goto	u3740
  5868   001B20  51A0               	movf	(main@p2+1)& (0+255),w,b
  5869   001B22  E107               	bnz	u3741
  5870   001B24  0E04               	movlw	4
  5871   001B26  5D9F               	subwf	main@p2& (0+255),w,b
  5872   001B28  B0D8               	btfsc	status,0,c
  5873   001B2A  EF99  F00D         	goto	u3741
  5874   001B2E  EF9B  F00D         	goto	u3740
  5875   001B32                     u3741:
  5876   001B32  EFF1  F00D         	goto	l4472
  5877   001B36                     u3740:
  5878   001B36                     
  5879                           ; BSR set to: 1
  5880                           ;main.c: 847:                     {;main.c: 849:                         clcd_print("re_
      +                          entr new password", (0x80 + (0)));
  5881   001B36  0EB2               	movlw	low STR_29
  5882   001B38  6E07               	movwf	clcd_print@data^0,c
  5883   001B3A  0E2E               	movlw	high STR_29
  5884   001B3C  6E08               	movwf	(clcd_print@data+1)^0,c
  5885   001B3E  0E80               	movlw	128
  5886   001B40  6E09               	movwf	clcd_print@addr^0,c
  5887   001B42  EC73  F014         	call	_clcd_print	;wreg free
  5888   001B46                     
  5889                           ;main.c: 850:                         clcd_putch(' ', (0xC0 + (0)));
  5890   001B46  0EC0               	movlw	192
  5891   001B48  6E0F               	movwf	clcd_putch@addr^0,c
  5892   001B4A  0E20               	movlw	32
  5893   001B4C  EC80  F016         	call	_clcd_putch
  5894   001B50                     
  5895                           ;main.c: 851:                         if (key == 5) {
  5896   001B50  0E05               	movlw	5
  5897   001B52  0101               	movlb	1	; () banked
  5898   001B54  19AC               	xorwf	main@key& (0+255),w,b
  5899   001B56  11AD               	iorwf	(main@key+1)& (0+255),w,b
  5900   001B58  A4D8               	btfss	status,2,c
  5901   001B5A  EFB1  F00D         	goto	u3751
  5902   001B5E  EFB3  F00D         	goto	u3750
  5903   001B62                     u3751:
  5904   001B62  EFC6  F00D         	goto	l4460
  5905   001B66                     u3750:
  5906   001B66                     
  5907                           ; BSR set to: 1
  5908                           ;main.c: 852:                             enter_password2[p2] = '1';
  5909   001B66  0E50               	movlw	low main@enter_password2
  5910   001B68  259F               	addwf	main@p2& (0+255),w,b
  5911   001B6A  6ED9               	movwf	fsr2l,c
  5912   001B6C  0E01               	movlw	high main@enter_password2
  5913   001B6E  21A0               	addwfc	(main@p2+1)& (0+255),w,b
  5914   001B70  6EDA               	movwf	fsr2h,c
  5915   001B72  0E31               	movlw	49
  5916   001B74  6EDF               	movwf	indf2,c
  5917   001B76                     
  5918                           ; BSR set to: 1
  5919                           ;main.c: 854:                             clcd_putch('*', (0xC0 + (p2 + 4)));
  5920   001B76  519F               	movf	main@p2& (0+255),w,b
  5921   001B78  0FC4               	addlw	196
  5922   001B7A  6E0F               	movwf	clcd_putch@addr^0,c
  5923   001B7C  0E2A               	movlw	42
  5924   001B7E  EC80  F016         	call	_clcd_putch
  5925   001B82                     l4458:
  5926                           
  5927                           ;main.c: 855:                             p2++;
  5928   001B82  0101               	movlb	1	; () banked
  5929   001B84  4B9F               	infsnz	main@p2& (0+255),f,b
  5930   001B86  2BA0               	incf	(main@p2+1)& (0+255),f,b
  5931                           
  5932                           ;main.c: 857:                         } else if (key == 6) {
  5933   001B88  EFE0  F00D         	goto	l4468
  5934   001B8C                     l4460:
  5935                           
  5936                           ; BSR set to: 1
  5937   001B8C  0E06               	movlw	6
  5938   001B8E  19AC               	xorwf	main@key& (0+255),w,b
  5939   001B90  11AD               	iorwf	(main@key+1)& (0+255),w,b
  5940   001B92  A4D8               	btfss	status,2,c
  5941   001B94  EFCE  F00D         	goto	u3761
  5942   001B98  EFD0  F00D         	goto	u3760
  5943   001B9C                     u3761:
  5944   001B9C  EFE0  F00D         	goto	l4468
  5945   001BA0                     u3760:
  5946   001BA0                     
  5947                           ; BSR set to: 1
  5948                           ;main.c: 858:                             enter_password2[p2] = '0';
  5949   001BA0  0E50               	movlw	low main@enter_password2
  5950   001BA2  259F               	addwf	main@p2& (0+255),w,b
  5951   001BA4  6ED9               	movwf	fsr2l,c
  5952   001BA6  0E01               	movlw	high main@enter_password2
  5953   001BA8  21A0               	addwfc	(main@p2+1)& (0+255),w,b
  5954   001BAA  6EDA               	movwf	fsr2h,c
  5955   001BAC  0E30               	movlw	48
  5956   001BAE  6EDF               	movwf	indf2,c
  5957   001BB0                     
  5958                           ; BSR set to: 1
  5959                           ;main.c: 860:                             clcd_putch('*', (0xC0 + (p2 + 4)));
  5960   001BB0  519F               	movf	main@p2& (0+255),w,b
  5961   001BB2  0FC4               	addlw	196
  5962   001BB4  6E0F               	movwf	clcd_putch@addr^0,c
  5963   001BB6  0E2A               	movlw	42
  5964   001BB8  EC80  F016         	call	_clcd_putch
  5965   001BBC  EFC1  F00D         	goto	l4458
  5966   001BC0                     l4468:
  5967                           
  5968                           ; BSR set to: 1
  5969                           ;main.c: 864:                         if(p2==4)
  5970   001BC0  0E04               	movlw	4
  5971   001BC2  199F               	xorwf	main@p2& (0+255),w,b
  5972   001BC4  11A0               	iorwf	(main@p2+1)& (0+255),w,b
  5973   001BC6  A4D8               	btfss	status,2,c
  5974   001BC8  EFE8  F00D         	goto	u3771
  5975   001BCC  EFEA  F00D         	goto	u3770
  5976   001BD0                     u3771:
  5977   001BD0  EF54  F001         	goto	l3792
  5978   001BD4                     u3770:
  5979   001BD4                     
  5980                           ; BSR set to: 1
  5981                           ;main.c: 865:                     {;main.c: 866:                         clcd_write(0x01
      +                          , 0);
  5982   001BD4  0E00               	movlw	0
  5983   001BD6  6E01               	movwf	clcd_write@control_bit^0,c
  5984   001BD8  0E01               	movlw	1
  5985   001BDA  EC99  F015         	call	_clcd_write
  5986   001BDE  EF54  F001         	goto	l3792
  5987   001BE2                     l4472:
  5988                           
  5989                           ; BSR set to: 1
  5990                           ;main.c: 872:                 {;main.c: 873:                     if (strcmp(enter_passwo
      +                          rd1, enter_password2) == 0)
  5991   001BE2  0E1B               	movlw	low main@enter_password1
  5992   001BE4  6E01               	movwf	strcmp@l^0,c
  5993   001BE6  0E01               	movlw	high main@enter_password1
  5994   001BE8  6E02               	movwf	(strcmp@l+1)^0,c
  5995   001BEA  0E50               	movlw	low main@enter_password2
  5996   001BEC  6E03               	movwf	strcmp@r^0,c
  5997   001BEE  0E01               	movlw	high main@enter_password2
  5998   001BF0  6E04               	movwf	(strcmp@r+1)^0,c
  5999   001BF2  EC3D  F014         	call	_strcmp	;wreg free
  6000   001BF6  5001               	movf	?_strcmp^0,w,c
  6001   001BF8  1002               	iorwf	(?_strcmp+1)^0,w,c
  6002   001BFA  A4D8               	btfss	status,2,c
  6003   001BFC  EF02  F00E         	goto	u3781
  6004   001C00  EF04  F00E         	goto	u3780
  6005   001C04                     u3781:
  6006   001C04  EF2A  F00E         	goto	l4484
  6007   001C08                     u3780:
  6008   001C08                     
  6009                           ;main.c: 874:                     {;main.c: 875:                         clcd_print("PAS
      +                          SWORD CHANGE ", (0x80 + (0)));
  6010   001C08  0E67               	movlw	low STR_30
  6011   001C0A  6E07               	movwf	clcd_print@data^0,c
  6012   001C0C  0E2F               	movlw	high STR_30
  6013   001C0E  6E08               	movwf	(clcd_print@data+1)^0,c
  6014   001C10  0E80               	movlw	128
  6015   001C12  6E09               	movwf	clcd_print@addr^0,c
  6016   001C14  EC73  F014         	call	_clcd_print	;wreg free
  6017                           
  6018                           ;main.c: 876:                         clcd_print("  SUCCESSFULL   ", (0xC0 + (0)));
  6019   001C18  0E23               	movlw	low STR_31
  6020   001C1A  6E07               	movwf	clcd_print@data^0,c
  6021   001C1C  0E2F               	movlw	high STR_31
  6022   001C1E  6E08               	movwf	(clcd_print@data+1)^0,c
  6023   001C20  0EC0               	movlw	192
  6024   001C22  6E09               	movwf	clcd_print@addr^0,c
  6025   001C24  EC73  F014         	call	_clcd_print	;wreg free
  6026   001C28                     
  6027                           ;main.c: 879:                         write_ext_eeprom(200,enter_password2[0] );
  6028   001C28  C150  F002         	movff	main@enter_password2,write_ext_eeprom@data
  6029   001C2C  0EC8               	movlw	200
  6030   001C2E  EC79  F015         	call	_write_ext_eeprom
  6031   001C32                     
  6032                           ;main.c: 880:                          write_ext_eeprom(201,enter_password2[1] );
  6033   001C32  C151  F002         	movff	main@enter_password2+1,write_ext_eeprom@data
  6034   001C36  0EC9               	movlw	201
  6035   001C38  EC79  F015         	call	_write_ext_eeprom
  6036   001C3C                     
  6037                           ;main.c: 881:                           write_ext_eeprom(202,enter_password2[2] );
  6038   001C3C  C152  F002         	movff	main@enter_password2+2,write_ext_eeprom@data
  6039   001C40  0ECA               	movlw	202
  6040   001C42  EC79  F015         	call	_write_ext_eeprom
  6041   001C46                     
  6042                           ;main.c: 882:                            write_ext_eeprom(203,enter_password2[3] );
  6043   001C46  C153  F002         	movff	main@enter_password2+3,write_ext_eeprom@data
  6044   001C4A  0ECB               	movlw	203
  6045   001C4C  EC79  F015         	call	_write_ext_eeprom
  6046                           
  6047                           ;main.c: 884:                     }
  6048   001C50  EF3A  F00E         	goto	l4486
  6049   001C54                     l4484:
  6050                           
  6051                           ;main.c: 886:                     {;main.c: 887:                         clcd_print("PAS
      +                          SWORD CHANGE ", (0x80 + (0)));
  6052   001C54  0E67               	movlw	low STR_30
  6053   001C56  6E07               	movwf	clcd_print@data^0,c
  6054   001C58  0E2F               	movlw	high STR_30
  6055   001C5A  6E08               	movwf	(clcd_print@data+1)^0,c
  6056   001C5C  0E80               	movlw	128
  6057   001C5E  6E09               	movwf	clcd_print@addr^0,c
  6058   001C60  EC73  F014         	call	_clcd_print	;wreg free
  6059                           
  6060                           ;main.c: 888:                         clcd_print("  FAILURE   ", (0xC0 + (0)));
  6061   001C64  0EBB               	movlw	low STR_33
  6062   001C66  6E07               	movwf	clcd_print@data^0,c
  6063   001C68  0E2F               	movlw	high STR_33
  6064   001C6A  6E08               	movwf	(clcd_print@data+1)^0,c
  6065   001C6C  0EC0               	movlw	192
  6066   001C6E  6E09               	movwf	clcd_print@addr^0,c
  6067   001C70  EC73  F014         	call	_clcd_print	;wreg free
  6068   001C74                     l4486:
  6069                           
  6070                           ;main.c: 892:                     if(del23++==300)
  6071   001C74  0101               	movlb	1	; () banked
  6072   001C76  4B3A               	infsnz	main@del23& (0+255),f,b
  6073   001C78  2B3B               	incf	(main@del23+1)& (0+255),f,b
  6074   001C7A  0E2D               	movlw	45
  6075   001C7C  193A               	xorwf	main@del23& (0+255),w,b
  6076   001C7E  E106               	bnz	u3791
  6077   001C80  053B               	decf	(main@del23+1)& (0+255),w,b
  6078   001C82  A4D8               	btfss	status,2,c
  6079   001C84  EF46  F00E         	goto	u3791
  6080   001C88  EF48  F00E         	goto	u3790
  6081   001C8C                     u3791:
  6082   001C8C  EF54  F001         	goto	l3792
  6083   001C90                     u3790:
  6084   001C90                     
  6085                           ; BSR set to: 1
  6086                           ;main.c: 893:                     {;main.c: 894:                         del23=0;
  6087   001C90  0E00               	movlw	0
  6088   001C92  6F3B               	movwf	(main@del23+1)& (0+255),b
  6089   001C94  0E00               	movlw	0
  6090   001C96  6F3A               	movwf	main@del23& (0+255),b
  6091                           
  6092                           ;main.c: 895:                         p1=0;
  6093   001C98  0E00               	movlw	0
  6094   001C9A  6F9E               	movwf	(main@p1+1)& (0+255),b
  6095   001C9C  0E00               	movlw	0
  6096   001C9E  6F9D               	movwf	main@p1& (0+255),b
  6097                           
  6098                           ;main.c: 896:                         p2=0;
  6099   001CA0  0E00               	movlw	0
  6100   001CA2  6FA0               	movwf	(main@p2+1)& (0+255),b
  6101   001CA4  0E00               	movlw	0
  6102   001CA6  6F9F               	movwf	main@p2& (0+255),b
  6103                           
  6104                           ;main.c: 897:                         mode=3;
  6105   001CA8  0E00               	movlw	0
  6106   001CAA  6F78               	movwf	(main@mode+1)& (0+255),b
  6107   001CAC  0E03               	movlw	3
  6108   001CAE  6F77               	movwf	main@mode& (0+255),b
  6109   001CB0  EF54  F001         	goto	l3792
  6110   001CB4                     l4492:
  6111                           
  6112                           ; BSR set to: 1
  6113   001CB4  C177  F039         	movff	main@mode,??_main
  6114   001CB8  C178  F03A         	movff	main@mode+1,??_main+1
  6115                           
  6116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6117                           ; Switch size 1, requested type "simple"
  6118                           ; Number of cases is 1, Range of values is 0 to 0
  6119                           ; switch strategies available:
  6120                           ; Name         Instructions Cycles
  6121                           ; simple_byte            4     3 (average)
  6122                           ;	Chosen strategy is simple_byte
  6123   001CBC  503A               	movf	(??_main+1)^0,w,c
  6124   001CBE  0A00               	xorlw	0	; case 0
  6125   001CC0  B4D8               	btfsc	status,2,c
  6126   001CC2  EF65  F00E         	goto	l4544
  6127   001CC6  EF54  F001         	goto	l3792
  6128   001CCA                     l4544:
  6129                           
  6130                           ; BSR set to: 1
  6131                           ; Switch size 1, requested type "simple"
  6132                           ; Number of cases is 8, Range of values is 1 to 8
  6133                           ; switch strategies available:
  6134                           ; Name         Instructions Cycles
  6135                           ; simple_byte           25    13 (average)
  6136                           ;	Chosen strategy is simple_byte
  6137   001CCA  5039               	movf	??_main^0,w,c
  6138   001CCC  0A01               	xorlw	1	; case 1
  6139   001CCE  B4D8               	btfsc	status,2,c
  6140   001CD0  EF61  F002         	goto	l3846
  6141   001CD4  0A03               	xorlw	3	; case 2
  6142   001CD6  B4D8               	btfsc	status,2,c
  6143   001CD8  EF0B  F003         	goto	l3872
  6144   001CDC  0A01               	xorlw	1	; case 3
  6145   001CDE  B4D8               	btfsc	status,2,c
  6146   001CE0  EF81  F004         	goto	l3960
  6147   001CE4  0A07               	xorlw	7	; case 4
  6148   001CE6  B4D8               	btfsc	status,2,c
  6149   001CE8  EFA0  F005         	goto	l4020
  6150   001CEC  0A01               	xorlw	1	; case 5
  6151   001CEE  B4D8               	btfsc	status,2,c
  6152   001CF0  EF93  F007         	goto	l4118
  6153   001CF4  0A03               	xorlw	3	; case 6
  6154   001CF6  B4D8               	btfsc	status,2,c
  6155   001CF8  EF26  F008         	goto	l4172
  6156   001CFC  0A01               	xorlw	1	; case 7
  6157   001CFE  B4D8               	btfsc	status,2,c
  6158   001D00  EF2E  F00A         	goto	l4296
  6159   001D04  0A0F               	xorlw	15	; case 8
  6160   001D06  B4D8               	btfsc	status,2,c
  6161   001D08  EF29  F00D         	goto	l4420
  6162   001D0C  EF54  F001         	goto	l3792
  6163   001D10  EF07  F000         	goto	start
  6164   001D14                     __end_of_main:
  6165                           	callstack 0
  6166                           
  6167 ;; *************** function _write_internal_eeprom *****************
  6168 ;; Defined at:
  6169 ;;		line 14 in file "eeprom.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  address         1    wreg     unsigned char 
  6172 ;;  data            1    0[COMRAM] unsigned char 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  address         1    1[COMRAM] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6184 ;;      Params:         1       0       0       0       0       0       0
  6185 ;;      Locals:         1       0       0       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0
  6187 ;;      Totals:         2       0       0       0       0       0       0
  6188 ;;Total ram usage:        2 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; Hardware stack levels required when called: 1
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_main
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text1
  6199   002BD2                     __ptext1:
  6200                           	callstack 0
  6201   002BD2                     _write_internal_eeprom:
  6202                           	callstack 29
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;incstack = 0
  6206                           ;write_internal_eeprom@address stored from wreg
  6207   002BD2  6E02               	movwf	write_internal_eeprom@address^0,c
  6208   002BD4                     
  6209                           ;eeprom.c: 14: void write_internal_eeprom(unsigned char address, unsigned char data);eep
      +                          rom.c: 15: {;eeprom.c: 17:  EEADR = address;
  6210   002BD4  C002  FFA9         	movff	write_internal_eeprom@address,4009	;volatile
  6211   002BD8                     
  6212                           ;eeprom.c: 20:  EEDATA = data;
  6213   002BD8  C001  FFA8         	movff	write_internal_eeprom@data,4008	;volatile
  6214   002BDC                     
  6215                           ;eeprom.c: 23:  EECON1bits.EEPGD = 0;
  6216   002BDC  9EA6               	bcf	166,7,c	;volsfr
  6217   002BDE                     
  6218                           ;eeprom.c: 26:  EECON1bits.CFGS = 0;
  6219   002BDE  9CA6               	bcf	166,6,c	;volsfr
  6220   002BE0                     
  6221                           ;eeprom.c: 29:  EECON1bits.WREN = 1;
  6222   002BE0  84A6               	bsf	166,2,c	;volsfr
  6223   002BE2                     
  6224                           ;eeprom.c: 32:  GIE = 0;
  6225   002BE2  9EF2               	bcf	4082,7,c	;volatile
  6226   002BE4                     
  6227                           ;eeprom.c: 35:  EECON2 = 0x55;
  6228   002BE4  0E55               	movlw	85
  6229   002BE6  6EA7               	movwf	167,c	;volsfr
  6230   002BE8                     
  6231                           ;eeprom.c: 36:  EECON2 = 0xAA;
  6232   002BE8  0EAA               	movlw	170
  6233   002BEA  6EA7               	movwf	167,c	;volsfr
  6234   002BEC                     
  6235                           ;eeprom.c: 39:  EECON1bits.WR = 1;
  6236   002BEC  82A6               	bsf	166,1,c	;volsfr
  6237   002BEE                     
  6238                           ;eeprom.c: 42:  GIE = 1;
  6239   002BEE  8EF2               	bsf	4082,7,c	;volatile
  6240   002BF0                     l374:
  6241   002BF0  A8A1               	btfss	161,4,c	;volatile
  6242   002BF2  EFFD  F015         	goto	u2131
  6243   002BF6  EFFF  F015         	goto	u2130
  6244   002BFA                     u2131:
  6245   002BFA  EFF8  F015         	goto	l374
  6246   002BFE                     u2130:
  6247   002BFE                     
  6248                           ;eeprom.c: 48:  PIR2bits.EEIF = 0;
  6249   002BFE  98A1               	bcf	161,4,c	;volatile
  6250   002C00  0012               	return		;funcret
  6251   002C02                     __end_of_write_internal_eeprom:
  6252                           	callstack 0
  6253                           
  6254 ;; *************** function _write_ext_eeprom *****************
  6255 ;; Defined at:
  6256 ;;		line 16 in file "ext_eeprom.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;  address         1    wreg     unsigned char 
  6259 ;;  data            1    1[COMRAM] unsigned char 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  address         1    4[COMRAM] unsigned char 
  6262 ;;  i               2    2[COMRAM] int 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6272 ;;      Params:         1       0       0       0       0       0       0
  6273 ;;      Locals:         3       0       0       0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0
  6275 ;;      Totals:         4       0       0       0       0       0       0
  6276 ;;Total ram usage:        4 bytes
  6277 ;; Hardware stack levels used: 1
  6278 ;; Hardware stack levels required when called: 3
  6279 ;; This function calls:
  6280 ;;		_i2c_start
  6281 ;;		_i2c_stop
  6282 ;;		_i2c_write
  6283 ;; This function is called by:
  6284 ;;		_main
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text2
  6289   002AF2                     __ptext2:
  6290                           	callstack 0
  6291   002AF2                     _write_ext_eeprom:
  6292                           	callstack 27
  6293                           
  6294                           ;incstack = 0
  6295                           ;write_ext_eeprom@address stored from wreg
  6296   002AF2  6E05               	movwf	write_ext_eeprom@address^0,c
  6297   002AF4                     
  6298                           ;ext_eeprom.c: 16: void write_ext_eeprom(unsigned char address, unsigned char data);ext_
      +                          eeprom.c: 17: {;ext_eeprom.c: 18:  i2c_start();
  6299   002AF4  ECE0  F016         	call	_i2c_start	;wreg free
  6300   002AF8                     
  6301                           ;ext_eeprom.c: 19:  i2c_write(0xA0);
  6302   002AF8  0EA0               	movlw	160
  6303   002AFA  ECD0  F016         	call	_i2c_write
  6304   002AFE                     
  6305                           ;ext_eeprom.c: 20:  i2c_write(address);
  6306   002AFE  5005               	movf	write_ext_eeprom@address^0,w,c
  6307   002B00  ECD0  F016         	call	_i2c_write
  6308   002B04                     
  6309                           ;ext_eeprom.c: 21:  i2c_write(data);
  6310   002B04  5002               	movf	write_ext_eeprom@data^0,w,c
  6311   002B06  ECD0  F016         	call	_i2c_write
  6312   002B0A                     
  6313                           ;ext_eeprom.c: 22:  i2c_stop();
  6314   002B0A  ECDC  F016         	call	_i2c_stop	;wreg free
  6315   002B0E                     
  6316                           ;ext_eeprom.c: 23:     for(int i=3000;i--;);
  6317   002B0E  0E0B               	movlw	11
  6318   002B10  6E04               	movwf	(write_ext_eeprom@i+1)^0,c
  6319   002B12  0EB8               	movlw	184
  6320   002B14  6E03               	movwf	write_ext_eeprom@i^0,c
  6321   002B16                     l3314:
  6322   002B16  0603               	decf	write_ext_eeprom@i^0,f,c
  6323   002B18  A0D8               	btfss	status,0,c
  6324   002B1A  0604               	decf	(write_ext_eeprom@i+1)^0,f,c
  6325   002B1C  2803               	incf	write_ext_eeprom@i^0,w,c
  6326   002B1E  E106               	bnz	u2231
  6327   002B20  2804               	incf	(write_ext_eeprom@i+1)^0,w,c
  6328   002B22  A4D8               	btfss	status,2,c
  6329   002B24  EF96  F015         	goto	u2231
  6330   002B28  EF98  F015         	goto	u2230
  6331   002B2C                     u2231:
  6332   002B2C  EF8B  F015         	goto	l3314
  6333   002B30                     u2230:
  6334   002B30  0012               	return		;funcret
  6335   002B32                     __end_of_write_ext_eeprom:
  6336                           	callstack 0
  6337                           
  6338 ;; *************** function _strcmp *****************
  6339 ;; Defined at:
  6340 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcmp.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  l               2    0[COMRAM] PTR const unsigned char 
  6343 ;;		 -> main@enter_password1(5), main@enter_password(5), 
  6344 ;;  r               2    2[COMRAM] PTR const unsigned char 
  6345 ;;		 -> main@enter_password2(5), main@password(5), 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  2    0[COMRAM] int 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6357 ;;      Params:         4       0       0       0       0       0       0
  6358 ;;      Locals:         0       0       0       0       0       0       0
  6359 ;;      Temps:          2       0       0       0       0       0       0
  6360 ;;      Totals:         6       0       0       0       0       0       0
  6361 ;;Total ram usage:        6 bytes
  6362 ;; Hardware stack levels used: 1
  6363 ;; Hardware stack levels required when called: 1
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_main
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text3
  6372   00287A                     __ptext3:
  6373                           	callstack 0
  6374   00287A                     _strcmp:
  6375                           	callstack 29
  6376   00287A  EF43  F014         	goto	l3260
  6377   00287E                     l3258:
  6378   00287E  4A01               	infsnz	strcmp@l^0,f,c
  6379   002880  2A02               	incf	(strcmp@l+1)^0,f,c
  6380   002882  4A03               	infsnz	strcmp@r^0,f,c
  6381   002884  2A04               	incf	(strcmp@r+1)^0,f,c
  6382   002886                     l3260:
  6383   002886  C003  FFD9         	movff	strcmp@r,fsr2l
  6384   00288A  C004  FFDA         	movff	strcmp@r+1,fsr2h
  6385   00288E  C001  FFE1         	movff	strcmp@l,fsr1l
  6386   002892  C002  FFE2         	movff	strcmp@l+1,fsr1h
  6387   002896  50DE               	movf	postinc2,w,c
  6388   002898  18E6               	xorwf	postinc1,w,c
  6389   00289A  A4D8               	btfss	status,2,c
  6390   00289C  EF52  F014         	goto	u2201
  6391   0028A0  EF54  F014         	goto	u2200
  6392   0028A4                     u2201:
  6393   0028A4  EF60  F014         	goto	l3264
  6394   0028A8                     u2200:
  6395   0028A8  C001  FFD9         	movff	strcmp@l,fsr2l
  6396   0028AC  C002  FFDA         	movff	strcmp@l+1,fsr2h
  6397   0028B0  50DF               	movf	indf2,w,c
  6398   0028B2  A4D8               	btfss	status,2,c
  6399   0028B4  EF5E  F014         	goto	u2211
  6400   0028B8  EF60  F014         	goto	u2210
  6401   0028BC                     u2211:
  6402   0028BC  EF3F  F014         	goto	l3258
  6403   0028C0                     u2210:
  6404   0028C0                     l3264:
  6405   0028C0  C001  FFD9         	movff	strcmp@l,fsr2l
  6406   0028C4  C002  FFDA         	movff	strcmp@l+1,fsr2h
  6407   0028C8  50DF               	movf	indf2,w,c
  6408   0028CA  6E05               	movwf	??_strcmp^0,c
  6409   0028CC  C003  FFD9         	movff	strcmp@r,fsr2l
  6410   0028D0  C004  FFDA         	movff	strcmp@r+1,fsr2h
  6411   0028D4  50DF               	movf	indf2,w,c
  6412   0028D6  6E06               	movwf	(??_strcmp+1)^0,c
  6413   0028D8  5006               	movf	(??_strcmp+1)^0,w,c
  6414   0028DA  5C05               	subwf	??_strcmp^0,w,c
  6415   0028DC  6E01               	movwf	?_strcmp^0,c
  6416   0028DE  6A02               	clrf	(?_strcmp+1)^0,c
  6417   0028E0  A0D8               	btfss	status,0,c
  6418   0028E2  0602               	decf	(?_strcmp+1)^0,f,c
  6419   0028E4  0012               	return		;funcret
  6420   0028E6                     __end_of_strcmp:
  6421                           	callstack 0
  6422                           
  6423 ;; *************** function _read_switches *****************
  6424 ;; Defined at:
  6425 ;;		line 95 in file "matrix_keypad.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  detection_ty    1    wreg     unsigned char 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  detection_ty    1    0[COMRAM] unsigned char 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      unsigned char 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6439 ;;      Params:         0       0       0       0       0       0       0
  6440 ;;      Locals:         1       0       0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0
  6442 ;;      Totals:         1       0       0       0       0       0       0
  6443 ;;Total ram usage:        1 bytes
  6444 ;; Hardware stack levels used: 1
  6445 ;; Hardware stack levels required when called: 2
  6446 ;; This function calls:
  6447 ;;		_scan_key
  6448 ;; This function is called by:
  6449 ;;		_main
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text4
  6454   002790                     __ptext4:
  6455                           	callstack 0
  6456   002790                     _read_switches:
  6457                           	callstack 28
  6458                           
  6459                           ;incstack = 0
  6460                           ;read_switches@detection_type stored from wreg
  6461   002790  6E01               	movwf	read_switches@detection_type^0,c
  6462   002792                     
  6463                           ;matrix_keypad.c: 95: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 96: {;matrix_keypad.c: 97:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 99:  if (detection_type == 1)
  6464   002792  0401               	decf	read_switches@detection_type^0,w,c
  6465   002794  A4D8               	btfss	status,2,c
  6466   002796  EFCF  F013         	goto	u2141
  6467   00279A  EFD1  F013         	goto	u2140
  6468   00279E                     u2141:
  6469   00279E  EFF5  F013         	goto	l3234
  6470   0027A2                     u2140:
  6471   0027A2                     
  6472                           ;matrix_keypad.c: 100:  {;matrix_keypad.c: 101:   key = scan_key();
  6473   0027A2  EC31  F011         	call	_scan_key	;wreg free
  6474   0027A6  6E50               	movwf	read_switches@key^0,c
  6475   0027A8                     
  6476                           ;matrix_keypad.c: 102:   if(key != 0xFF && once )
  6477   0027A8  2850               	incf	read_switches@key^0,w,c
  6478   0027AA  B4D8               	btfsc	status,2,c
  6479   0027AC  EFDA  F013         	goto	u2151
  6480   0027B0  EFDC  F013         	goto	u2150
  6481   0027B4                     u2151:
  6482   0027B4  EFE9  F013         	goto	l3230
  6483   0027B8                     u2150:
  6484   0027B8  505C               	movf	read_switches@once^0,w,c
  6485   0027BA  B4D8               	btfsc	status,2,c
  6486   0027BC  EFE2  F013         	goto	u2161
  6487   0027C0  EFE4  F013         	goto	u2160
  6488   0027C4                     u2161:
  6489   0027C4  EFE9  F013         	goto	l3230
  6490   0027C8                     u2160:
  6491   0027C8                     
  6492                           ;matrix_keypad.c: 103:   {;matrix_keypad.c: 104:    once = 0;
  6493   0027C8  0E00               	movlw	0
  6494   0027CA  6E5C               	movwf	read_switches@once^0,c
  6495                           
  6496                           ;matrix_keypad.c: 105:    return key;
  6497   0027CC  5050               	movf	read_switches@key^0,w,c
  6498   0027CE  EF02  F014         	goto	l352
  6499   0027D2                     l3230:
  6500   0027D2  2850               	incf	read_switches@key^0,w,c
  6501   0027D4  A4D8               	btfss	status,2,c
  6502   0027D6  EFEF  F013         	goto	u2171
  6503   0027DA  EFF1  F013         	goto	u2170
  6504   0027DE                     u2171:
  6505   0027DE  EF01  F014         	goto	l3240
  6506   0027E2                     u2170:
  6507   0027E2                     
  6508                           ;matrix_keypad.c: 108:   {;matrix_keypad.c: 109:    once = 1;
  6509   0027E2  0E01               	movlw	1
  6510   0027E4  6E5C               	movwf	read_switches@once^0,c
  6511   0027E6  EF01  F014         	goto	l3240
  6512   0027EA                     l3234:
  6513   0027EA  5001               	movf	read_switches@detection_type^0,w,c
  6514   0027EC  A4D8               	btfss	status,2,c
  6515   0027EE  EFFB  F013         	goto	u2181
  6516   0027F2  EFFD  F013         	goto	u2180
  6517   0027F6                     u2181:
  6518   0027F6  EF01  F014         	goto	l3240
  6519   0027FA                     u2180:
  6520   0027FA                     
  6521                           ;matrix_keypad.c: 113:  {;matrix_keypad.c: 114:   return scan_key();
  6522   0027FA  EC31  F011         	call	_scan_key	;wreg free
  6523   0027FE  EF02  F014         	goto	l352
  6524   002802                     l3240:
  6525                           
  6526                           ;matrix_keypad.c: 117:  return 0xFF;
  6527   002802  0EFF               	movlw	255
  6528   002804                     l352:
  6529   002804  0012               	return		;funcret
  6530   002806                     __end_of_read_switches:
  6531                           	callstack 0
  6532                           
  6533 ;; *************** function _scan_key *****************
  6534 ;; Defined at:
  6535 ;;		line 25 in file "matrix_keypad.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      unsigned char 
  6542 ;; Registers used:
  6543 ;;		wreg
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6549 ;;      Params:         0       0       0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0
  6551 ;;      Temps:          0       0       0       0       0       0       0
  6552 ;;      Totals:         0       0       0       0       0       0       0
  6553 ;;Total ram usage:        0 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; Hardware stack levels required when called: 1
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_read_switches
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text5
  6564   002262                     __ptext5:
  6565                           	callstack 0
  6566   002262                     _scan_key:
  6567                           	callstack 28
  6568   002262                     
  6569                           ;matrix_keypad.c: 27:  PORTBbits.RB5 = 0;
  6570   002262  9A81               	bcf	129,5,c	;volatile
  6571                           
  6572                           ;matrix_keypad.c: 28:  PORTBbits.RB6 = 1;
  6573   002264  8C81               	bsf	129,6,c	;volatile
  6574                           
  6575                           ;matrix_keypad.c: 29:  PORTBbits.RB7 = 1;
  6576   002266  8E81               	bsf	129,7,c	;volatile
  6577                           
  6578                           ;matrix_keypad.c: 31:  if (PORTBbits.RB1 == 0)
  6579   002268  B281               	btfsc	129,1,c	;volatile
  6580   00226A  EF39  F011         	goto	u2001
  6581   00226E  EF3B  F011         	goto	u2000
  6582   002272                     u2001:
  6583   002272  EF3E  F011         	goto	l322
  6584   002276                     u2000:
  6585   002276                     
  6586                           ;matrix_keypad.c: 32:  {;matrix_keypad.c: 33:   return 1;
  6587   002276  0E01               	movlw	1
  6588   002278  EFB4  F011         	goto	l323
  6589   00227C                     l322:
  6590   00227C  B481               	btfsc	129,2,c	;volatile
  6591   00227E  EF43  F011         	goto	u2011
  6592   002282  EF45  F011         	goto	u2010
  6593   002286                     u2011:
  6594   002286  EF48  F011         	goto	l325
  6595   00228A                     u2010:
  6596   00228A                     
  6597                           ;matrix_keypad.c: 36:  {;matrix_keypad.c: 37:   return 4;
  6598   00228A  0E04               	movlw	4
  6599   00228C  EFB4  F011         	goto	l323
  6600   002290                     l325:
  6601   002290  B681               	btfsc	129,3,c	;volatile
  6602   002292  EF4D  F011         	goto	u2021
  6603   002296  EF4F  F011         	goto	u2020
  6604   00229A                     u2021:
  6605   00229A  EF52  F011         	goto	l327
  6606   00229E                     u2020:
  6607   00229E                     
  6608                           ;matrix_keypad.c: 40:  {;matrix_keypad.c: 41:   return 7;
  6609   00229E  0E07               	movlw	7
  6610   0022A0  EFB4  F011         	goto	l323
  6611   0022A4                     l327:
  6612   0022A4  B881               	btfsc	129,4,c	;volatile
  6613   0022A6  EF57  F011         	goto	u2031
  6614   0022AA  EF59  F011         	goto	u2030
  6615   0022AE                     u2031:
  6616   0022AE  EF5C  F011         	goto	l324
  6617   0022B2                     u2030:
  6618   0022B2                     
  6619                           ;matrix_keypad.c: 44:  {;matrix_keypad.c: 45:   return 10;
  6620   0022B2  0E0A               	movlw	10
  6621   0022B4  EFB4  F011         	goto	l323
  6622   0022B8                     l324:
  6623                           
  6624                           ;matrix_keypad.c: 48:  PORTBbits.RB5 = 1;
  6625   0022B8  8A81               	bsf	129,5,c	;volatile
  6626                           
  6627                           ;matrix_keypad.c: 49:  PORTBbits.RB6 = 0;
  6628   0022BA  9C81               	bcf	129,6,c	;volatile
  6629                           
  6630                           ;matrix_keypad.c: 50:  PORTBbits.RB7 = 1;
  6631   0022BC  8E81               	bsf	129,7,c	;volatile
  6632                           
  6633                           ;matrix_keypad.c: 52:  if (PORTBbits.RB1 == 0)
  6634   0022BE  B281               	btfsc	129,1,c	;volatile
  6635   0022C0  EF64  F011         	goto	u2041
  6636   0022C4  EF66  F011         	goto	u2040
  6637   0022C8                     u2041:
  6638   0022C8  EF69  F011         	goto	l330
  6639   0022CC                     u2040:
  6640   0022CC                     
  6641                           ;matrix_keypad.c: 53:  {;matrix_keypad.c: 54:   return 2;
  6642   0022CC  0E02               	movlw	2
  6643   0022CE  EFB4  F011         	goto	l323
  6644   0022D2                     l330:
  6645   0022D2  B481               	btfsc	129,2,c	;volatile
  6646   0022D4  EF6E  F011         	goto	u2051
  6647   0022D8  EF70  F011         	goto	u2050
  6648   0022DC                     u2051:
  6649   0022DC  EF73  F011         	goto	l332
  6650   0022E0                     u2050:
  6651   0022E0                     
  6652                           ;matrix_keypad.c: 57:  {;matrix_keypad.c: 58:   return 5;
  6653   0022E0  0E05               	movlw	5
  6654   0022E2  EFB4  F011         	goto	l323
  6655   0022E6                     l332:
  6656   0022E6  B681               	btfsc	129,3,c	;volatile
  6657   0022E8  EF78  F011         	goto	u2061
  6658   0022EC  EF7A  F011         	goto	u2060
  6659   0022F0                     u2061:
  6660   0022F0  EF7D  F011         	goto	l334
  6661   0022F4                     u2060:
  6662   0022F4                     
  6663                           ;matrix_keypad.c: 61:  {;matrix_keypad.c: 62:   return 8;
  6664   0022F4  0E08               	movlw	8
  6665   0022F6  EFB4  F011         	goto	l323
  6666   0022FA                     l334:
  6667   0022FA  B881               	btfsc	129,4,c	;volatile
  6668   0022FC  EF82  F011         	goto	u2071
  6669   002300  EF84  F011         	goto	u2070
  6670   002304                     u2071:
  6671   002304  EF87  F011         	goto	l331
  6672   002308                     u2070:
  6673   002308                     
  6674                           ;matrix_keypad.c: 65:  {;matrix_keypad.c: 66:   return 11;
  6675   002308  0E0B               	movlw	11
  6676   00230A  EFB4  F011         	goto	l323
  6677   00230E                     l331:
  6678                           
  6679                           ;matrix_keypad.c: 69:  PORTBbits.RB5 = 1;
  6680   00230E  8A81               	bsf	129,5,c	;volatile
  6681                           
  6682                           ;matrix_keypad.c: 70:  PORTBbits.RB6 = 1;
  6683   002310  8C81               	bsf	129,6,c	;volatile
  6684                           
  6685                           ;matrix_keypad.c: 71:  PORTBbits.RB7 = 0;
  6686   002312  9E81               	bcf	129,7,c	;volatile
  6687                           
  6688                           ;matrix_keypad.c: 73:  PORTBbits.RB7 = 0;
  6689   002314  9E81               	bcf	129,7,c	;volatile
  6690                           
  6691                           ;matrix_keypad.c: 75:  if (PORTBbits.RB1 == 0)
  6692   002316  B281               	btfsc	129,1,c	;volatile
  6693   002318  EF90  F011         	goto	u2081
  6694   00231C  EF92  F011         	goto	u2080
  6695   002320                     u2081:
  6696   002320  EF95  F011         	goto	l337
  6697   002324                     u2080:
  6698   002324                     
  6699                           ;matrix_keypad.c: 76:  {;matrix_keypad.c: 77:   return 3;
  6700   002324  0E03               	movlw	3
  6701   002326  EFB4  F011         	goto	l323
  6702   00232A                     l337:
  6703   00232A  B481               	btfsc	129,2,c	;volatile
  6704   00232C  EF9A  F011         	goto	u2091
  6705   002330  EF9C  F011         	goto	u2090
  6706   002334                     u2091:
  6707   002334  EF9F  F011         	goto	l339
  6708   002338                     u2090:
  6709   002338                     
  6710                           ;matrix_keypad.c: 80:  {;matrix_keypad.c: 81:   return 6;
  6711   002338  0E06               	movlw	6
  6712   00233A  EFB4  F011         	goto	l323
  6713   00233E                     l339:
  6714   00233E  B681               	btfsc	129,3,c	;volatile
  6715   002340  EFA4  F011         	goto	u2101
  6716   002344  EFA6  F011         	goto	u2100
  6717   002348                     u2101:
  6718   002348  EFA9  F011         	goto	l341
  6719   00234C                     u2100:
  6720   00234C                     
  6721                           ;matrix_keypad.c: 84:  {;matrix_keypad.c: 85:   return 9;
  6722   00234C  0E09               	movlw	9
  6723   00234E  EFB4  F011         	goto	l323
  6724   002352                     l341:
  6725   002352  B881               	btfsc	129,4,c	;volatile
  6726   002354  EFAE  F011         	goto	u2111
  6727   002358  EFB0  F011         	goto	u2110
  6728   00235C                     u2111:
  6729   00235C  EFB3  F011         	goto	l340
  6730   002360                     u2110:
  6731   002360                     
  6732                           ;matrix_keypad.c: 88:  {;matrix_keypad.c: 89:   return 12;
  6733   002360  0E0C               	movlw	12
  6734   002362  EFB4  F011         	goto	l323
  6735   002366                     l340:
  6736   002366                     
  6737                           ;matrix_keypad.c: 92:  return 0xFF;
  6738   002366  0EFF               	movlw	255
  6739   002368                     l323:
  6740   002368  0012               	return		;funcret
  6741   00236A                     __end_of_scan_key:
  6742                           	callstack 0
  6743                           
  6744 ;; *************** function _read_internal_eeprom *****************
  6745 ;; Defined at:
  6746 ;;		line 51 in file "eeprom.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  address         1    wreg     unsigned char 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  address         1    0[COMRAM] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      unsigned char 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6760 ;;      Params:         0       0       0       0       0       0       0
  6761 ;;      Locals:         1       0       0       0       0       0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0
  6763 ;;      Totals:         1       0       0       0       0       0       0
  6764 ;;Total ram usage:        1 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_main
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text6
  6775   002D5A                     __ptext6:
  6776                           	callstack 0
  6777   002D5A                     _read_internal_eeprom:
  6778                           	callstack 29
  6779                           
  6780                           ;incstack = 0
  6781                           ;read_internal_eeprom@address stored from wreg
  6782   002D5A  6E01               	movwf	read_internal_eeprom@address^0,c
  6783   002D5C                     
  6784                           ;eeprom.c: 51: unsigned char read_internal_eeprom(unsigned char address);eeprom.c: 52: {
      +                          ;eeprom.c: 54:  EEADR = address;
  6785   002D5C  C001  FFA9         	movff	read_internal_eeprom@address,4009	;volatile
  6786   002D60                     
  6787                           ;eeprom.c: 57:  EECON1bits.WREN = 0;
  6788   002D60  94A6               	bcf	166,2,c	;volsfr
  6789   002D62                     
  6790                           ;eeprom.c: 60:  EECON1bits.EEPGD = 0;
  6791   002D62  9EA6               	bcf	166,7,c	;volsfr
  6792   002D64                     
  6793                           ;eeprom.c: 63:  EECON1bits.CFGS = 0;
  6794   002D64  9CA6               	bcf	166,6,c	;volsfr
  6795   002D66                     
  6796                           ;eeprom.c: 66:  EECON1bits.RD = 1;
  6797   002D66  80A6               	bsf	166,0,c	;volsfr
  6798   002D68                     
  6799                           ;eeprom.c: 69:  return EEDATA;
  6800   002D68  50A8               	movf	168,w,c	;volatile
  6801   002D6A  0012               	return		;funcret
  6802   002D6C                     __end_of_read_internal_eeprom:
  6803                           	callstack 0
  6804                           
  6805 ;; *************** function _read_ext_eeprom *****************
  6806 ;; Defined at:
  6807 ;;		line 26 in file "ext_eeprom.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  address         1    wreg     unsigned char 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  address         1    1[COMRAM] unsigned char 
  6812 ;;  data            1    2[COMRAM] unsigned char 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      unsigned char 
  6815 ;; Registers used:
  6816 ;;		wreg, status,2, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6822 ;;      Params:         0       0       0       0       0       0       0
  6823 ;;      Locals:         2       0       0       0       0       0       0
  6824 ;;      Temps:          0       0       0       0       0       0       0
  6825 ;;      Totals:         2       0       0       0       0       0       0
  6826 ;;Total ram usage:        2 bytes
  6827 ;; Hardware stack levels used: 1
  6828 ;; Hardware stack levels required when called: 4
  6829 ;; This function calls:
  6830 ;;		_i2c_read
  6831 ;;		_i2c_rep_start
  6832 ;;		_i2c_start
  6833 ;;		_i2c_stop
  6834 ;;		_i2c_write
  6835 ;; This function is called by:
  6836 ;;		_main
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text7
  6841   002C02                     __ptext7:
  6842                           	callstack 0
  6843   002C02                     _read_ext_eeprom:
  6844                           	callstack 26
  6845                           
  6846                           ;incstack = 0
  6847                           ;read_ext_eeprom@address stored from wreg
  6848   002C02  6E02               	movwf	read_ext_eeprom@address^0,c
  6849   002C04                     
  6850                           ;ext_eeprom.c: 26: unsigned char read_ext_eeprom(unsigned char address);ext_eeprom.c: 27
      +                          : {;ext_eeprom.c: 28:  unsigned char data;;ext_eeprom.c: 30:  i2c_start();
  6851   002C04  ECE0  F016         	call	_i2c_start	;wreg free
  6852   002C08                     
  6853                           ;ext_eeprom.c: 31:  i2c_write(0xA0);
  6854   002C08  0EA0               	movlw	160
  6855   002C0A  ECD0  F016         	call	_i2c_write
  6856   002C0E                     
  6857                           ;ext_eeprom.c: 32:  i2c_write(address);
  6858   002C0E  5002               	movf	read_ext_eeprom@address^0,w,c
  6859   002C10  ECD0  F016         	call	_i2c_write
  6860   002C14                     
  6861                           ;ext_eeprom.c: 33:  i2c_rep_start();
  6862   002C14  ECE4  F016         	call	_i2c_rep_start	;wreg free
  6863   002C18                     
  6864                           ;ext_eeprom.c: 34:  i2c_write(0xA1);
  6865   002C18  0EA1               	movlw	161
  6866   002C1A  ECD0  F016         	call	_i2c_write
  6867                           
  6868                           ;ext_eeprom.c: 35:  data = i2c_read();
  6869   002C1E  ECD6  F016         	call	_i2c_read	;wreg free
  6870   002C22  6E03               	movwf	read_ext_eeprom@data^0,c
  6871   002C24                     
  6872                           ;ext_eeprom.c: 36:  i2c_stop();
  6873   002C24  ECDC  F016         	call	_i2c_stop	;wreg free
  6874                           
  6875                           ;ext_eeprom.c: 38:  return data;
  6876   002C28  5003               	movf	read_ext_eeprom@data^0,w,c
  6877   002C2A  0012               	return		;funcret
  6878   002C2C                     __end_of_read_ext_eeprom:
  6879                           	callstack 0
  6880                           
  6881 ;; *************** function _read_adc *****************
  6882 ;; Defined at:
  6883 ;;		line 52 in file "adc.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  channel         1    wreg     unsigned char 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  channel         1    6[COMRAM] unsigned char 
  6888 ;;  reg_val         2    4[COMRAM] unsigned short 
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  2    0[COMRAM] unsigned short 
  6891 ;; Registers used:
  6892 ;;		wreg, status,2, status,0
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6898 ;;      Params:         2       0       0       0       0       0       0
  6899 ;;      Locals:         3       0       0       0       0       0       0
  6900 ;;      Temps:          2       0       0       0       0       0       0
  6901 ;;      Totals:         7       0       0       0       0       0       0
  6902 ;;Total ram usage:        7 bytes
  6903 ;; Hardware stack levels used: 1
  6904 ;; Hardware stack levels required when called: 1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_main
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text8
  6913   002A68                     __ptext8:
  6914                           	callstack 0
  6915   002A68                     _read_adc:
  6916                           	callstack 29
  6917                           
  6918                           ;incstack = 0
  6919                           ;read_adc@channel stored from wreg
  6920   002A68  6E07               	movwf	read_adc@channel^0,c
  6921   002A6A                     
  6922                           ;adc.c: 52: unsigned short read_adc(unsigned char channel);adc.c: 53: {;adc.c: 54:  unsi
      +                          gned short reg_val;;adc.c: 57:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  6923   002A6A  C007  F003         	movff	read_adc@channel,??_read_adc
  6924   002A6E  90D8               	bcf	status,0,c
  6925   002A70  3603               	rlcf	??_read_adc^0,f,c
  6926   002A72  90D8               	bcf	status,0,c
  6927   002A74  3603               	rlcf	??_read_adc^0,f,c
  6928   002A76  50C2               	movf	194,w,c	;volatile
  6929   002A78  0BC3               	andlw	195
  6930   002A7A  1003               	iorwf	??_read_adc^0,w,c
  6931   002A7C  6EC2               	movwf	194,c	;volatile
  6932   002A7E                     
  6933                           ;adc.c: 60:  GO = 1;
  6934   002A7E  82C2               	bsf	4034,1,c	;volatile
  6935   002A80                     l303:
  6936   002A80  B2C2               	btfsc	4034,1,c	;volatile
  6937   002A82  EF45  F015         	goto	u2191
  6938   002A86  EF47  F015         	goto	u2190
  6939   002A8A                     u2191:
  6940   002A8A  EF40  F015         	goto	l303
  6941   002A8E                     u2190:
  6942   002A8E                     
  6943                           ;adc.c: 62:  reg_val = (ADRESH << 8) | ADRESL;
  6944   002A8E  50C3               	movf	195,w,c	;volatile
  6945   002A90  CFC4 F003          	movff	4036,??_read_adc	;volatile
  6946   002A94  6A04               	clrf	(??_read_adc+1)^0,c
  6947   002A96  C003  F004         	movff	??_read_adc,??_read_adc+1
  6948   002A9A  6A03               	clrf	??_read_adc^0,c
  6949   002A9C  1003               	iorwf	??_read_adc^0,w,c
  6950   002A9E  6E05               	movwf	read_adc@reg_val^0,c
  6951   002AA0  5004               	movf	(??_read_adc+1)^0,w,c
  6952   002AA2  6E06               	movwf	(read_adc@reg_val+1)^0,c
  6953   002AA4                     
  6954                           ;adc.c: 67:  return reg_val;
  6955   002AA4  C005  F001         	movff	read_adc@reg_val,?_read_adc
  6956   002AA8  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  6957   002AAC  0012               	return		;funcret
  6958   002AAE                     __end_of_read_adc:
  6959                           	callstack 0
  6960                           
  6961 ;; *************** function _puts *****************
  6962 ;; Defined at:
  6963 ;;		line 71 in file "uart.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  s               2    1[COMRAM] PTR const unsigned char 
  6966 ;;		 -> STR_24(3), STR_23(29), STR_22(3), 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;		None
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  2    1[COMRAM] int 
  6971 ;; Registers used:
  6972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6978 ;;      Params:         2       0       0       0       0       0       0
  6979 ;;      Locals:         0       0       0       0       0       0       0
  6980 ;;      Temps:          0       0       0       0       0       0       0
  6981 ;;      Totals:         2       0       0       0       0       0       0
  6982 ;;Total ram usage:        2 bytes
  6983 ;; Hardware stack levels used: 1
  6984 ;; Hardware stack levels required when called: 2
  6985 ;; This function calls:
  6986 ;;		_putch
  6987 ;; This function is called by:
  6988 ;;		_main
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           	psect	text9
  6993   002B6C                     __ptext9:
  6994                           	callstack 0
  6995   002B6C                     _puts:
  6996                           	callstack 28
  6997   002B6C                     
  6998                           ;uart.c: 71: int puts(const char *s);uart.c: 72: {;uart.c: 73:  while(*s)
  6999   002B6C  EFC2  F015         	goto	l3300
  7000   002B70                     l3296:
  7001                           
  7002                           ;uart.c: 74:  {;uart.c: 75:   putch(*s++);
  7003   002B70  C002  FFF6         	movff	puts@s,tblptrl
  7004   002B74  C003  FFF7         	movff	puts@s+1,tblptrh
  7005   002B78                     	if	0	;tblptru may be non-zero
  7006   002B78                     	endif
  7007   002B78                     	if	0	;tblptru may be non-zero
  7008   002B78                     	endif
  7009   002B78  0008               	tblrd		*
  7010   002B7A  50F5               	movf	tablat,w,c
  7011   002B7C  EC8C  F016         	call	_putch
  7012   002B80  4A02               	infsnz	puts@s^0,f,c
  7013   002B82  2A03               	incf	(puts@s+1)^0,f,c
  7014   002B84                     l3300:
  7015                           
  7016                           ;uart.c: 73:  while(*s)
  7017   002B84  C002  FFF6         	movff	puts@s,tblptrl
  7018   002B88  C003  FFF7         	movff	puts@s+1,tblptrh
  7019   002B8C                     	if	0	;tblptru may be non-zero
  7020   002B8C                     	endif
  7021   002B8C                     	if	0	;tblptru may be non-zero
  7022   002B8C                     	endif
  7023   002B8C  0008               	tblrd		*
  7024   002B8E  50F5               	movf	tablat,w,c
  7025   002B90  0900               	iorlw	0
  7026   002B92  A4D8               	btfss	status,2,c
  7027   002B94  EFCE  F015         	goto	u2221
  7028   002B98  EFD0  F015         	goto	u2220
  7029   002B9C                     u2221:
  7030   002B9C  EFB8  F015         	goto	l3296
  7031   002BA0                     u2220:
  7032   002BA0  0012               	return		;funcret
  7033   002BA2                     __end_of_puts:
  7034                           	callstack 0
  7035                           
  7036 ;; *************** function _putch *****************
  7037 ;; Defined at:
  7038 ;;		line 60 in file "uart.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  byte            1    wreg     unsigned char 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  byte            1    0[COMRAM] unsigned char 
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1    wreg      void 
  7045 ;; Registers used:
  7046 ;;		wreg
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7052 ;;      Params:         0       0       0       0       0       0       0
  7053 ;;      Locals:         1       0       0       0       0       0       0
  7054 ;;      Temps:          0       0       0       0       0       0       0
  7055 ;;      Totals:         1       0       0       0       0       0       0
  7056 ;;Total ram usage:        1 bytes
  7057 ;; Hardware stack levels used: 1
  7058 ;; Hardware stack levels required when called: 1
  7059 ;; This function calls:
  7060 ;;		Nothing
  7061 ;; This function is called by:
  7062 ;;		_main
  7063 ;;		_puts
  7064 ;;		_getche
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text10
  7069   002D18                     __ptext10:
  7070                           	callstack 0
  7071   002D18                     _putch:
  7072                           	callstack 28
  7073                           
  7074                           ;incstack = 0
  7075                           ;putch@byte stored from wreg
  7076   002D18  6E01               	movwf	putch@byte^0,c
  7077   002D1A                     l460:
  7078                           
  7079                           ;uart.c: 64:  while(!TXIF)
  7080   002D1A  A89E               	btfss	3998,4,c	;volatile
  7081   002D1C  EF92  F016         	goto	u1991
  7082   002D20  EF94  F016         	goto	u1990
  7083   002D24                     u1991:
  7084   002D24  EF8D  F016         	goto	l460
  7085   002D28                     u1990:
  7086   002D28                     
  7087                           ;uart.c: 68:  TXREG = byte;
  7088   002D28  C001  FFAD         	movff	putch@byte,4013	;volatile
  7089   002D2C  0012               	return		;funcret
  7090   002D2E                     __end_of_putch:
  7091                           	callstack 0
  7092                           
  7093 ;; *************** function _init_uart *****************
  7094 ;; Defined at:
  7095 ;;		line 4 in file "uart.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7109 ;;      Params:         0       0       0       0       0       0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0
  7112 ;;      Totals:         0       0       0       0       0       0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used: 1
  7115 ;; Hardware stack levels required when called: 1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_main
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text11
  7124   002C2C                     __ptext11:
  7125                           	callstack 0
  7126   002C2C                     _init_uart:
  7127                           	callstack 29
  7128   002C2C                     
  7129                           ;uart.c: 7:  TRISC7 = 1;
  7130   002C2C  8E94               	bsf	3988,7,c	;volatile
  7131                           
  7132                           ;uart.c: 8:  TRISC6 = 0;
  7133   002C2E  9C94               	bcf	3988,6,c	;volatile
  7134                           
  7135                           ;uart.c: 12:  TX9 = 0;
  7136   002C30  9CAC               	bcf	4012,6,c	;volatile
  7137                           
  7138                           ;uart.c: 14:  TXEN = 1;
  7139   002C32  8AAC               	bsf	4012,5,c	;volatile
  7140                           
  7141                           ;uart.c: 17:  SYNC = 0;
  7142   002C34  98AC               	bcf	4012,4,c	;volatile
  7143                           
  7144                           ;uart.c: 19:  SENDB = 0;
  7145   002C36  96AC               	bcf	4012,3,c	;volatile
  7146                           
  7147                           ;uart.c: 22:  BRGH = 1;
  7148   002C38  84AC               	bsf	4012,2,c	;volatile
  7149                           
  7150                           ;uart.c: 26:  SPEN = 1;
  7151   002C3A  8EAB               	bsf	4011,7,c	;volatile
  7152                           
  7153                           ;uart.c: 28:  RX9 = 0;
  7154   002C3C  9CAB               	bcf	4011,6,c	;volatile
  7155                           
  7156                           ;uart.c: 30:  CREN = 1;
  7157   002C3E  88AB               	bsf	4011,4,c	;volatile
  7158                           
  7159                           ;uart.c: 34:  ABDOVF = 0;
  7160   002C40  9EB8               	bcf	4024,7,c	;volatile
  7161                           
  7162                           ;uart.c: 36:  BRG16 = 0;
  7163   002C42  96B8               	bcf	4024,3,c	;volatile
  7164                           
  7165                           ;uart.c: 38:  WUE = 0;
  7166   002C44  92B8               	bcf	4024,1,c	;volatile
  7167                           
  7168                           ;uart.c: 40:  ABDEN = 0;
  7169   002C46  90B8               	bcf	4024,0,c	;volatile
  7170   002C48                     
  7171                           ;uart.c: 44:  SPBRG = 129;
  7172   002C48  0E81               	movlw	129
  7173   002C4A  6EAF               	movwf	175,c	;volatile
  7174   002C4C                     
  7175                           ;uart.c: 48:  TXIE = 1;
  7176   002C4C  889D               	bsf	3997,4,c	;volatile
  7177   002C4E                     
  7178                           ;uart.c: 50:  TXIF = 0;
  7179   002C4E  989E               	bcf	3998,4,c	;volatile
  7180   002C50                     
  7181                           ;uart.c: 55:  RCIE = 1;
  7182   002C50  8A9D               	bsf	3997,5,c	;volatile
  7183   002C52                     
  7184                           ;uart.c: 57:  RCIF = 0;
  7185   002C52  9A9E               	bcf	3998,5,c	;volatile
  7186   002C54  0012               	return		;funcret
  7187   002C56                     __end_of_init_uart:
  7188                           	callstack 0
  7189                           
  7190 ;; *************** function _init_config *****************
  7191 ;; Defined at:
  7192 ;;		line 64 in file "main.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7206 ;;      Params:         0       0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0       0
  7209 ;;      Totals:         0       0       0       0       0       0       0
  7210 ;;Total ram usage:        0 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; Hardware stack levels required when called: 6
  7213 ;; This function calls:
  7214 ;;		_init_adc
  7215 ;;		_init_clcd
  7216 ;;		_init_ds1307
  7217 ;;		_init_i2c
  7218 ;;		_init_matrix_keypad
  7219 ;;		_init_timer0
  7220 ;; This function is called by:
  7221 ;;		_main
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text12
  7226   002CE4                     __ptext12:
  7227                           	callstack 0
  7228   002CE4                     _init_config:
  7229                           	callstack 24
  7230   002CE4                     
  7231                           ;main.c: 65:     init_clcd();
  7232   002CE4  ECF2  F012         	call	_init_clcd	;wreg free
  7233   002CE8                     
  7234                           ;main.c: 66:     init_adc();
  7235   002CE8  EC53  F016         	call	_init_adc	;wreg free
  7236   002CEC                     
  7237                           ;main.c: 67:     init_matrix_keypad();
  7238   002CEC  ECB6  F016         	call	_init_matrix_keypad	;wreg free
  7239                           
  7240                           ;main.c: 68:     init_timer0();
  7241   002CF0  EC97  F016         	call	_init_timer0	;wreg free
  7242   002CF4                     
  7243                           ;main.c: 69:     GIE = 0;
  7244   002CF4  9EF2               	bcf	4082,7,c	;volatile
  7245                           
  7246                           ;main.c: 71:     init_i2c();
  7247   002CF6  ECA2  F016         	call	_init_i2c	;wreg free
  7248   002CFA                     
  7249                           ;main.c: 72:     init_ds1307();
  7250   002CFA  EC57  F015         	call	_init_ds1307	;wreg free
  7251   002CFE  0012               	return		;funcret
  7252   002D00                     __end_of_init_config:
  7253                           	callstack 0
  7254                           
  7255 ;; *************** function _init_timer0 *****************
  7256 ;; Defined at:
  7257 ;;		line 11 in file "timer0.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7271 ;;      Params:         0       0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used: 1
  7277 ;; Hardware stack levels required when called: 1
  7278 ;; This function calls:
  7279 ;;		Nothing
  7280 ;; This function is called by:
  7281 ;;		_init_config
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           	psect	text13
  7286   002D2E                     __ptext13:
  7287                           	callstack 0
  7288   002D2E                     _init_timer0:
  7289                           	callstack 28
  7290   002D2E                     
  7291                           ;timer0.c: 19:  T08BIT = 1;
  7292   002D2E  8CD5               	bsf	4053,6,c	;volatile
  7293                           
  7294                           ;timer0.c: 22:  T0CS = 0;
  7295   002D30  9AD5               	bcf	4053,5,c	;volatile
  7296                           
  7297                           ;timer0.c: 25:  TMR0ON = 1;
  7298   002D32  8ED5               	bsf	4053,7,c	;volatile
  7299                           
  7300                           ;timer0.c: 28:  PSA = 1;
  7301   002D34  86D5               	bsf	4053,3,c	;volatile
  7302   002D36                     
  7303                           ;timer0.c: 30:  TMR0 = 6;
  7304   002D36  0E00               	movlw	0
  7305   002D38  6ED7               	movwf	215,c	;volatile
  7306   002D3A  0E06               	movlw	6
  7307   002D3C  6ED6               	movwf	214,c	;volatile
  7308   002D3E                     
  7309                           ;timer0.c: 33:  TMR0IF = 0;
  7310   002D3E  94F2               	bcf	4082,2,c	;volatile
  7311   002D40                     
  7312                           ;timer0.c: 36:  TMR0IE = 0;
  7313   002D40  9AF2               	bcf	4082,5,c	;volatile
  7314   002D42  0012               	return		;funcret
  7315   002D44                     __end_of_init_timer0:
  7316                           	callstack 0
  7317                           
  7318 ;; *************** function _init_matrix_keypad *****************
  7319 ;; Defined at:
  7320 ;;		line 11 in file "matrix_keypad.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;		None
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;		None
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  1    wreg      void 
  7327 ;; Registers used:
  7328 ;;		wreg, status,2, status,0
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7334 ;;      Params:         0       0       0       0       0       0       0
  7335 ;;      Locals:         0       0       0       0       0       0       0
  7336 ;;      Temps:          0       0       0       0       0       0       0
  7337 ;;      Totals:         0       0       0       0       0       0       0
  7338 ;;Total ram usage:        0 bytes
  7339 ;; Hardware stack levels used: 1
  7340 ;; Hardware stack levels required when called: 1
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_init_config
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text14
  7349   002D6C                     __ptext14:
  7350                           	callstack 0
  7351   002D6C                     _init_matrix_keypad:
  7352                           	callstack 28
  7353   002D6C                     
  7354                           ;matrix_keypad.c: 14:  ADCON1 = 0x0F;
  7355   002D6C  0E0F               	movlw	15
  7356   002D6E  6EC1               	movwf	193,c	;volatile
  7357                           
  7358                           ;matrix_keypad.c: 17:  TRISB = 0x1E;
  7359   002D70  0E1E               	movlw	30
  7360   002D72  6E93               	movwf	147,c	;volatile
  7361   002D74                     
  7362                           ;matrix_keypad.c: 20:  RBPU = 0;
  7363   002D74  9EF1               	bcf	4081,7,c	;volatile
  7364   002D76                     
  7365                           ;matrix_keypad.c: 22:  PORTB = PORTB | 0xE0;
  7366   002D76  5081               	movf	129,w,c	;volatile
  7367   002D78  09E0               	iorlw	224
  7368   002D7A  6E81               	movwf	129,c	;volatile
  7369   002D7C  0012               	return		;funcret
  7370   002D7E                     __end_of_init_matrix_keypad:
  7371                           	callstack 0
  7372                           
  7373 ;; *************** function _init_i2c *****************
  7374 ;; Defined at:
  7375 ;;		line 4 in file "i2c.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7389 ;;      Params:         0       0       0       0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0
  7392 ;;      Totals:         0       0       0       0       0       0       0
  7393 ;;Total ram usage:        0 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; Hardware stack levels required when called: 1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_init_config
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text15
  7404   002D44                     __ptext15:
  7405                           	callstack 0
  7406   002D44                     _init_i2c:
  7407                           	callstack 28
  7408   002D44                     
  7409                           ;i2c.c: 7:  TRISC3 = 1;
  7410   002D44  8694               	bsf	3988,3,c	;volatile
  7411                           
  7412                           ;i2c.c: 8:  TRISC4 = 1;
  7413   002D46  8894               	bsf	3988,4,c	;volatile
  7414   002D48                     
  7415                           ;i2c.c: 10:  SSPCON1 = 0x28;
  7416   002D48  0E28               	movlw	40
  7417   002D4A  6EC6               	movwf	198,c	;volatile
  7418                           
  7419                           ;i2c.c: 12:  SSPADD = 0x31;
  7420   002D4C  0E31               	movlw	49
  7421   002D4E  6EC8               	movwf	200,c	;volatile
  7422   002D50                     
  7423                           ;i2c.c: 14:  CKE = 0;
  7424   002D50  9CC7               	bcf	4039,6,c	;volatile
  7425   002D52                     
  7426                           ;i2c.c: 16:  SMP = 1;
  7427   002D52  8EC7               	bsf	4039,7,c	;volatile
  7428   002D54                     
  7429                           ;i2c.c: 18:  SSPIF = 0;
  7430   002D54  969E               	bcf	3998,3,c	;volatile
  7431   002D56                     
  7432                           ;i2c.c: 20:  BCLIF = 0;
  7433   002D56  96A1               	bcf	4001,3,c	;volatile
  7434   002D58  0012               	return		;funcret
  7435   002D5A                     __end_of_init_i2c:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function _init_ds1307 *****************
  7439 ;; Defined at:
  7440 ;;		line 12 in file "ds1307.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;		None
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  dummy           1   16[COMRAM] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      void 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0, cstack
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7454 ;;      Params:         0       0       0       0       0       0       0
  7455 ;;      Locals:         1       0       0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0
  7457 ;;      Totals:         1       0       0       0       0       0       0
  7458 ;;Total ram usage:        1 bytes
  7459 ;; Hardware stack levels used: 1
  7460 ;; Hardware stack levels required when called: 5
  7461 ;; This function calls:
  7462 ;;		_read_ds1307
  7463 ;;		_write_ds1307
  7464 ;; This function is called by:
  7465 ;;		_init_config
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           	psect	text16
  7470   002AAE                     __ptext16:
  7471                           	callstack 0
  7472   002AAE                     _init_ds1307:
  7473                           	callstack 24
  7474   002AAE                     
  7475                           ;ds1307.c: 14:  unsigned char dummy;;ds1307.c: 17:  dummy = read_ds1307(0x00);
  7476   002AAE  0E00               	movlw	0
  7477   002AB0  EC2B  F016         	call	_read_ds1307
  7478   002AB4  6E11               	movwf	init_ds1307@dummy^0,c
  7479   002AB6                     
  7480                           ;ds1307.c: 18:  write_ds1307(0x00, dummy | 0x80);
  7481   002AB6  5011               	movf	init_ds1307@dummy^0,w,c
  7482   002AB8  0980               	iorlw	128
  7483   002ABA  6E0F               	movwf	write_ds1307@data^0,c
  7484   002ABC  0E00               	movlw	0
  7485   002ABE  EC63  F016         	call	_write_ds1307
  7486   002AC2  0E02               	movlw	2
  7487   002AC4  EC2B  F016         	call	_read_ds1307
  7488   002AC8                     
  7489                           ;ds1307.c: 22:  write_ds1307(0x02, dummy & 0x00);
  7490   002AC8  0E00               	movlw	0
  7491   002ACA  6E0F               	movwf	write_ds1307@data^0,c
  7492   002ACC  0E02               	movlw	2
  7493   002ACE  EC63  F016         	call	_write_ds1307
  7494   002AD2                     
  7495                           ;ds1307.c: 37:  write_ds1307(0x07, 0x93);
  7496   002AD2  0E93               	movlw	147
  7497   002AD4  6E0F               	movwf	write_ds1307@data^0,c
  7498   002AD6  0E07               	movlw	7
  7499   002AD8  EC63  F016         	call	_write_ds1307
  7500   002ADC                     
  7501                           ;ds1307.c: 40:  dummy = read_ds1307(0x00);
  7502   002ADC  0E00               	movlw	0
  7503   002ADE  EC2B  F016         	call	_read_ds1307
  7504   002AE2  6E11               	movwf	init_ds1307@dummy^0,c
  7505   002AE4                     
  7506                           ;ds1307.c: 41:  write_ds1307(0x00, dummy & 0x7F);
  7507   002AE4  5011               	movf	init_ds1307@dummy^0,w,c
  7508   002AE6  0B7F               	andlw	127
  7509   002AE8  6E0F               	movwf	write_ds1307@data^0,c
  7510   002AEA  0E00               	movlw	0
  7511   002AEC  EC63  F016         	call	_write_ds1307
  7512   002AF0  0012               	return		;funcret
  7513   002AF2                     __end_of_init_ds1307:
  7514                           	callstack 0
  7515                           
  7516 ;; *************** function _write_ds1307 *****************
  7517 ;; Defined at:
  7518 ;;		line 45 in file "ds1307.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  address         1    wreg     unsigned char 
  7521 ;;  data            1   14[COMRAM] unsigned char 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  address         1   15[COMRAM] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7533 ;;      Params:         1       0       0       0       0       0       0
  7534 ;;      Locals:         1       0       0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0
  7536 ;;      Totals:         2       0       0       0       0       0       0
  7537 ;;Total ram usage:        2 bytes
  7538 ;; Hardware stack levels used: 1
  7539 ;; Hardware stack levels required when called: 3
  7540 ;; This function calls:
  7541 ;;		_i2c_start
  7542 ;;		_i2c_stop
  7543 ;;		_i2c_write
  7544 ;; This function is called by:
  7545 ;;		_main
  7546 ;;		_init_ds1307
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           	psect	text17
  7551   002CC6                     __ptext17:
  7552                           	callstack 0
  7553   002CC6                     _write_ds1307:
  7554                           	callstack 27
  7555                           
  7556                           ;incstack = 0
  7557                           ;write_ds1307@address stored from wreg
  7558   002CC6  6E10               	movwf	write_ds1307@address^0,c
  7559   002CC8                     
  7560                           ;ds1307.c: 45: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 46
      +                          : {;ds1307.c: 47:  i2c_start();
  7561   002CC8  ECE0  F016         	call	_i2c_start	;wreg free
  7562   002CCC                     
  7563                           ;ds1307.c: 48:  i2c_write(0xD0);
  7564   002CCC  0ED0               	movlw	208
  7565   002CCE  ECD0  F016         	call	_i2c_write
  7566   002CD2                     
  7567                           ;ds1307.c: 49:  i2c_write(address);
  7568   002CD2  5010               	movf	write_ds1307@address^0,w,c
  7569   002CD4  ECD0  F016         	call	_i2c_write
  7570   002CD8                     
  7571                           ;ds1307.c: 50:  i2c_write(data);
  7572   002CD8  500F               	movf	write_ds1307@data^0,w,c
  7573   002CDA  ECD0  F016         	call	_i2c_write
  7574   002CDE                     
  7575                           ;ds1307.c: 51:  i2c_stop();
  7576   002CDE  ECDC  F016         	call	_i2c_stop	;wreg free
  7577   002CE2  0012               	return		;funcret
  7578   002CE4                     __end_of_write_ds1307:
  7579                           	callstack 0
  7580                           
  7581 ;; *************** function _init_clcd *****************
  7582 ;; Defined at:
  7583 ;;		line 35 in file "clcd.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;		None
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;		None
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  1    wreg      void 
  7590 ;; Registers used:
  7591 ;;		wreg, status,2, status,0, cstack
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7597 ;;      Params:         0       0       0       0       0       0       0
  7598 ;;      Locals:         0       0       0       0       0       0       0
  7599 ;;      Temps:          1       0       0       0       0       0       0
  7600 ;;      Totals:         1       0       0       0       0       0       0
  7601 ;;Total ram usage:        1 bytes
  7602 ;; Hardware stack levels used: 1
  7603 ;; Hardware stack levels required when called: 2
  7604 ;; This function calls:
  7605 ;;		_clcd_write
  7606 ;; This function is called by:
  7607 ;;		_init_config
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text18
  7612   0025E4                     __ptext18:
  7613                           	callstack 0
  7614   0025E4                     _init_clcd:
  7615                           	callstack 27
  7616   0025E4                     
  7617                           ;clcd.c: 38:  TRISD = 0x00;
  7618   0025E4  0E00               	movlw	0
  7619   0025E6  6E95               	movwf	149,c	;volatile
  7620   0025E8                     
  7621                           ;clcd.c: 40:  TRISC = TRISC & 0xF8;
  7622   0025E8  5094               	movf	148,w,c	;volatile
  7623   0025EA  0BF8               	andlw	248
  7624   0025EC  6E94               	movwf	148,c	;volatile
  7625   0025EE                     
  7626                           ;clcd.c: 42:  RC0 = 0;
  7627   0025EE  9082               	bcf	3970,0,c	;volatile
  7628   0025F0                     
  7629                           ;clcd.c: 46:     _delay((unsigned long)((30)*(20000000/4000.0)));
  7630   0025F0  0EC3               	movlw	195
  7631   0025F2  6E03               	movwf	??_init_clcd^0,c
  7632   0025F4  0ECD               	movlw	205
  7633   0025F6                     u3827:
  7634   0025F6  2EE8               	decfsz	wreg,f,c
  7635   0025F8  D7FE               	bra	u3827
  7636   0025FA  2E03               	decfsz	??_init_clcd^0,f,c
  7637   0025FC  D7FC               	bra	u3827
  7638   0025FE  0000               	nop	
  7639   002600                     
  7640                           ;clcd.c: 49:     clcd_write(0x33, 0 );
  7641   002600  0E00               	movlw	0
  7642   002602  6E01               	movwf	clcd_write@control_bit^0,c
  7643   002604  0E33               	movlw	51
  7644   002606  EC99  F015         	call	_clcd_write
  7645   00260A                     
  7646                           ;clcd.c: 50:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  7647   00260A  0E1B               	movlw	27
  7648   00260C  6E03               	movwf	??_init_clcd^0,c
  7649   00260E  0E9E               	movlw	158
  7650   002610                     u3837:
  7651   002610  2EE8               	decfsz	wreg,f,c
  7652   002612  D7FE               	bra	u3837
  7653   002614  2E03               	decfsz	??_init_clcd^0,f,c
  7654   002616  D7FC               	bra	u3837
  7655   002618  D000               	nop2	
  7656   00261A                     
  7657                           ;clcd.c: 51:     clcd_write(0x33, 0 );
  7658   00261A  0E00               	movlw	0
  7659   00261C  6E01               	movwf	clcd_write@control_bit^0,c
  7660   00261E  0E33               	movlw	51
  7661   002620  EC99  F015         	call	_clcd_write
  7662   002624                     
  7663                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7664   002624  0EA6               	movlw	166
  7665   002626                     u3847:
  7666   002626  2EE8               	decfsz	wreg,f,c
  7667   002628  D7FE               	bra	u3847
  7668   00262A  D000               	nop2	
  7669   00262C                     
  7670                           ;clcd.c: 53:     clcd_write(0x33, 0 );
  7671   00262C  0E00               	movlw	0
  7672   00262E  6E01               	movwf	clcd_write@control_bit^0,c
  7673   002630  0E33               	movlw	51
  7674   002632  EC99  F015         	call	_clcd_write
  7675   002636                     
  7676                           ;clcd.c: 54:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7677   002636  D000               	nop2		;2 cycle nop
  7678   002638  D000               	nop2		;2 cycle nop
  7679   00263A  0000               	nop	
  7680   00263C                     
  7681                           ;clcd.c: 56:     clcd_write(0x02, 0);
  7682   00263C  0E00               	movlw	0
  7683   00263E  6E01               	movwf	clcd_write@control_bit^0,c
  7684   002640  0E02               	movlw	2
  7685   002642  EC99  F015         	call	_clcd_write
  7686   002646                     
  7687                           ;clcd.c: 57:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7688   002646  0EA6               	movlw	166
  7689   002648                     u3857:
  7690   002648  2EE8               	decfsz	wreg,f,c
  7691   00264A  D7FE               	bra	u3857
  7692   00264C  D000               	nop2	
  7693   00264E                     
  7694                           ;clcd.c: 58:     clcd_write(0x38, 0);
  7695   00264E  0E00               	movlw	0
  7696   002650  6E01               	movwf	clcd_write@control_bit^0,c
  7697   002652  0E38               	movlw	56
  7698   002654  EC99  F015         	call	_clcd_write
  7699   002658                     
  7700                           ;clcd.c: 59:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7701   002658  0EA6               	movlw	166
  7702   00265A                     u3867:
  7703   00265A  2EE8               	decfsz	wreg,f,c
  7704   00265C  D7FE               	bra	u3867
  7705   00265E  D000               	nop2	
  7706   002660                     
  7707                           ;clcd.c: 60:     clcd_write(0x01, 0);
  7708   002660  0E00               	movlw	0
  7709   002662  6E01               	movwf	clcd_write@control_bit^0,c
  7710   002664  0E01               	movlw	1
  7711   002666  EC99  F015         	call	_clcd_write
  7712   00266A                     
  7713                           ;clcd.c: 61:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  7714   00266A  0E04               	movlw	4
  7715   00266C  6E03               	movwf	??_init_clcd^0,c
  7716   00266E  0E3E               	movlw	62
  7717   002670                     u3877:
  7718   002670  2EE8               	decfsz	wreg,f,c
  7719   002672  D7FE               	bra	u3877
  7720   002674  2E03               	decfsz	??_init_clcd^0,f,c
  7721   002676  D7FC               	bra	u3877
  7722   002678                     
  7723                           ;clcd.c: 62:     clcd_write(0x0C, 0);
  7724   002678  0E00               	movlw	0
  7725   00267A  6E01               	movwf	clcd_write@control_bit^0,c
  7726   00267C  0E0C               	movlw	12
  7727   00267E  EC99  F015         	call	_clcd_write
  7728   002682                     
  7729                           ;clcd.c: 63:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  7730   002682  0EA6               	movlw	166
  7731   002684                     u3887:
  7732   002684  2EE8               	decfsz	wreg,f,c
  7733   002686  D7FE               	bra	u3887
  7734   002688  D000               	nop2	
  7735   00268A  0012               	return		;funcret
  7736   00268C                     __end_of_init_clcd:
  7737                           	callstack 0
  7738                           
  7739 ;; *************** function _init_adc *****************
  7740 ;; Defined at:
  7741 ;;		line 12 in file "adc.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7755 ;;      Params:         0       0       0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 1
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_init_config
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text19
  7770   002CA6                     __ptext19:
  7771                           	callstack 0
  7772   002CA6                     _init_adc:
  7773                           	callstack 28
  7774   002CA6                     
  7775                           ;adc.c: 15:  ADFM = 1;
  7776   002CA6  8EC0               	bsf	4032,7,c	;volatile
  7777                           
  7778                           ;adc.c: 22:  ACQT2 = 1;
  7779   002CA8  8AC0               	bsf	4032,5,c	;volatile
  7780                           
  7781                           ;adc.c: 23:  ACQT1 = 0;
  7782   002CAA  98C0               	bcf	4032,4,c	;volatile
  7783                           
  7784                           ;adc.c: 24:  ACQT0 = 0;
  7785   002CAC  96C0               	bcf	4032,3,c	;volatile
  7786                           
  7787                           ;adc.c: 30:  ADCS0 = 0;
  7788   002CAE  90C0               	bcf	4032,0,c	;volatile
  7789                           
  7790                           ;adc.c: 31:  ADCS1 = 1;
  7791   002CB0  82C0               	bsf	4032,1,c	;volatile
  7792                           
  7793                           ;adc.c: 32:  ADCS2 = 0;
  7794   002CB2  94C0               	bcf	4032,2,c	;volatile
  7795                           
  7796                           ;adc.c: 35:  GODONE = 0;
  7797   002CB4  92C2               	bcf	4034,1,c	;volatile
  7798                           
  7799                           ;adc.c: 40:  VCFG1 = 0;
  7800   002CB6  9AC1               	bcf	4033,5,c	;volatile
  7801                           
  7802                           ;adc.c: 42:  VCFG0 = 0;
  7803   002CB8  98C1               	bcf	4033,4,c	;volatile
  7804   002CBA                     
  7805                           ;adc.c: 45:  ADRESH = 0;
  7806   002CBA  0E00               	movlw	0
  7807   002CBC  6EC4               	movwf	196,c	;volatile
  7808                           
  7809                           ;adc.c: 46:  ADRESL = 0;
  7810   002CBE  0E00               	movlw	0
  7811   002CC0  6EC3               	movwf	195,c	;volatile
  7812   002CC2                     
  7813                           ;adc.c: 49:  ADON = 1;
  7814   002CC2  80C2               	bsf	4034,0,c	;volatile
  7815   002CC4  0012               	return		;funcret
  7816   002CC6                     __end_of_init_adc:
  7817                           	callstack 0
  7818                           
  7819 ;; *************** function _get_time *****************
  7820 ;; Defined at:
  7821 ;;		line 43 in file "main.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;		None
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      void 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2, status,0, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7835 ;;      Params:         0       0       0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0
  7838 ;;      Totals:         0       0       0       0       0       0       0
  7839 ;;Total ram usage:        0 bytes
  7840 ;; Hardware stack levels used: 1
  7841 ;; Hardware stack levels required when called: 5
  7842 ;; This function calls:
  7843 ;;		_read_ds1307
  7844 ;; This function is called by:
  7845 ;;		_main
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text20
  7850   002710                     __ptext20:
  7851                           	callstack 0
  7852   002710                     _get_time:
  7853                           	callstack 25
  7854   002710                     
  7855                           ;main.c: 44:     clock_reg[0] = read_ds1307(0x02);
  7856   002710  0E02               	movlw	2
  7857   002712  EC2B  F016         	call	_read_ds1307
  7858   002716  6E4B               	movwf	_clock_reg^0,c
  7859                           
  7860                           ;main.c: 45:     clock_reg[1] = read_ds1307(0x01);
  7861   002718  0E01               	movlw	1
  7862   00271A  EC2B  F016         	call	_read_ds1307
  7863   00271E  6E4C               	movwf	(_clock_reg+1)^0,c
  7864                           
  7865                           ;main.c: 46:     clock_reg[2] = read_ds1307(0x00);
  7866   002720  0E00               	movlw	0
  7867   002722  EC2B  F016         	call	_read_ds1307
  7868   002726  6E4D               	movwf	(_clock_reg+2)^0,c
  7869   002728                     
  7870                           ;main.c: 48:     if (clock_reg[0] & 0x40) {
  7871   002728  AC4B               	btfss	_clock_reg^0,6,c
  7872   00272A  EF99  F013         	goto	u2121
  7873   00272E  EF9B  F013         	goto	u2120
  7874   002732                     u2121:
  7875   002732  EFA6  F013         	goto	l3160
  7876   002736                     u2120:
  7877   002736                     
  7878                           ;main.c: 49:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  7879   002736  384B               	swapf	_clock_reg^0,w,c
  7880   002738  0B0F               	andlw	15
  7881   00273A  0B01               	andlw	1
  7882   00273C  0F30               	addlw	48
  7883   00273E  6E51               	movwf	_time^0,c
  7884                           
  7885                           ;main.c: 50:         time[1] = '0' + (clock_reg[0] & 0x0F);
  7886   002740  504B               	movf	_clock_reg^0,w,c
  7887   002742  0B0F               	andlw	15
  7888   002744  0F30               	addlw	48
  7889   002746  6E52               	movwf	(_time+1)^0,c
  7890                           
  7891                           ;main.c: 51:     } else {
  7892   002748  EFAF  F013         	goto	l3162
  7893   00274C                     l3160:
  7894                           
  7895                           ;main.c: 52:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  7896   00274C  384B               	swapf	_clock_reg^0,w,c
  7897   00274E  0B0F               	andlw	15
  7898   002750  0B03               	andlw	3
  7899   002752  0F30               	addlw	48
  7900   002754  6E51               	movwf	_time^0,c
  7901                           
  7902                           ;main.c: 53:         time[1] = '0' + (clock_reg[0] & 0x0F);
  7903   002756  504B               	movf	_clock_reg^0,w,c
  7904   002758  0B0F               	andlw	15
  7905   00275A  0F30               	addlw	48
  7906   00275C  6E52               	movwf	(_time+1)^0,c
  7907   00275E                     l3162:
  7908                           
  7909                           ;main.c: 55:     time[2] = ':';
  7910   00275E  0E3A               	movlw	58
  7911   002760  6E53               	movwf	(_time+2)^0,c
  7912   002762                     
  7913                           ;main.c: 56:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  7914   002762  384C               	swapf	(_clock_reg+1)^0,w,c
  7915   002764  0B0F               	andlw	15
  7916   002766  0B0F               	andlw	15
  7917   002768  0F30               	addlw	48
  7918   00276A  6E54               	movwf	(_time+3)^0,c
  7919   00276C                     
  7920                           ;main.c: 57:     time[4] = '0' + (clock_reg[1] & 0x0F);
  7921   00276C  504C               	movf	(_clock_reg+1)^0,w,c
  7922   00276E  0B0F               	andlw	15
  7923   002770  0F30               	addlw	48
  7924   002772  6E55               	movwf	(_time+4)^0,c
  7925   002774                     
  7926                           ;main.c: 58:     time[5] = ':';
  7927   002774  0E3A               	movlw	58
  7928   002776  6E56               	movwf	(_time+5)^0,c
  7929                           
  7930                           ;main.c: 59:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  7931   002778  384D               	swapf	(_clock_reg+2)^0,w,c
  7932   00277A  0B0F               	andlw	15
  7933   00277C  0B0F               	andlw	15
  7934   00277E  0F30               	addlw	48
  7935   002780  6E57               	movwf	(_time+6)^0,c
  7936                           
  7937                           ;main.c: 60:     time[7] = '0' + (clock_reg[2] & 0x0F);
  7938   002782  504D               	movf	(_clock_reg+2)^0,w,c
  7939   002784  0B0F               	andlw	15
  7940   002786  0F30               	addlw	48
  7941   002788  6E58               	movwf	(_time+7)^0,c
  7942   00278A                     
  7943                           ;main.c: 61:     time[8] = '\0';
  7944   00278A  0E00               	movlw	0
  7945   00278C  6E59               	movwf	(_time+8)^0,c
  7946   00278E  0012               	return		;funcret
  7947   002790                     __end_of_get_time:
  7948                           	callstack 0
  7949                           
  7950 ;; *************** function _read_ds1307 *****************
  7951 ;; Defined at:
  7952 ;;		line 54 in file "ds1307.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  address         1    wreg     unsigned char 
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;  address         1    1[COMRAM] unsigned char 
  7957 ;;  data            1    2[COMRAM] unsigned char 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      unsigned char 
  7960 ;; Registers used:
  7961 ;;		wreg, status,2, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7967 ;;      Params:         0       0       0       0       0       0       0
  7968 ;;      Locals:         2       0       0       0       0       0       0
  7969 ;;      Temps:          0       0       0       0       0       0       0
  7970 ;;      Totals:         2       0       0       0       0       0       0
  7971 ;;Total ram usage:        2 bytes
  7972 ;; Hardware stack levels used: 1
  7973 ;; Hardware stack levels required when called: 4
  7974 ;; This function calls:
  7975 ;;		_i2c_read
  7976 ;;		_i2c_rep_start
  7977 ;;		_i2c_start
  7978 ;;		_i2c_stop
  7979 ;;		_i2c_write
  7980 ;; This function is called by:
  7981 ;;		_get_time
  7982 ;;		_main
  7983 ;;		_init_ds1307
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text21
  7988   002C56                     __ptext21:
  7989                           	callstack 0
  7990   002C56                     _read_ds1307:
  7991                           	callstack 26
  7992                           
  7993                           ;incstack = 0
  7994                           ;read_ds1307@address stored from wreg
  7995   002C56  6E02               	movwf	read_ds1307@address^0,c
  7996   002C58                     
  7997                           ;ds1307.c: 54: unsigned char read_ds1307(unsigned char address);ds1307.c: 55: {;ds1307.c
      +                          : 56:  unsigned char data;;ds1307.c: 58:  i2c_start();
  7998   002C58  ECE0  F016         	call	_i2c_start	;wreg free
  7999   002C5C                     
  8000                           ;ds1307.c: 59:  i2c_write(0xD0);
  8001   002C5C  0ED0               	movlw	208
  8002   002C5E  ECD0  F016         	call	_i2c_write
  8003   002C62                     
  8004                           ;ds1307.c: 60:  i2c_write(address);
  8005   002C62  5002               	movf	read_ds1307@address^0,w,c
  8006   002C64  ECD0  F016         	call	_i2c_write
  8007   002C68                     
  8008                           ;ds1307.c: 61:  i2c_rep_start();
  8009   002C68  ECE4  F016         	call	_i2c_rep_start	;wreg free
  8010   002C6C                     
  8011                           ;ds1307.c: 62:  i2c_write(0xD1);
  8012   002C6C  0ED1               	movlw	209
  8013   002C6E  ECD0  F016         	call	_i2c_write
  8014                           
  8015                           ;ds1307.c: 63:  data = i2c_read();
  8016   002C72  ECD6  F016         	call	_i2c_read	;wreg free
  8017   002C76  6E03               	movwf	read_ds1307@data^0,c
  8018   002C78                     
  8019                           ;ds1307.c: 64:  i2c_stop();
  8020   002C78  ECDC  F016         	call	_i2c_stop	;wreg free
  8021                           
  8022                           ;ds1307.c: 66:  return data;
  8023   002C7C  5003               	movf	read_ds1307@data^0,w,c
  8024   002C7E  0012               	return		;funcret
  8025   002C80                     __end_of_read_ds1307:
  8026                           	callstack 0
  8027                           
  8028 ;; *************** function _i2c_write *****************
  8029 ;; Defined at:
  8030 ;;		line 55 in file "i2c.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  data            1    wreg     unsigned char 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;  data            1    0[COMRAM] unsigned char 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      void 
  8037 ;; Registers used:
  8038 ;;		wreg, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8044 ;;      Params:         0       0       0       0       0       0       0
  8045 ;;      Locals:         1       0       0       0       0       0       0
  8046 ;;      Temps:          0       0       0       0       0       0       0
  8047 ;;      Totals:         1       0       0       0       0       0       0
  8048 ;;Total ram usage:        1 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; Hardware stack levels required when called: 2
  8051 ;; This function calls:
  8052 ;;		_i2c_idle
  8053 ;; This function is called by:
  8054 ;;		_write_ds1307
  8055 ;;		_read_ds1307
  8056 ;;		_write_ext_eeprom
  8057 ;;		_read_ext_eeprom
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text22
  8062   002DA0                     __ptext22:
  8063                           	callstack 0
  8064   002DA0                     _i2c_write:
  8065                           	callstack 27
  8066                           
  8067                           ;incstack = 0
  8068                           ;i2c_write@data stored from wreg
  8069   002DA0  6E01               	movwf	i2c_write@data^0,c
  8070   002DA2                     
  8071                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  8072   002DA2  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  8073   002DA6                     
  8074                           ;i2c.c: 58:  i2c_idle();
  8075   002DA6  ECBF  F016         	call	_i2c_idle	;wreg free
  8076   002DAA  0012               	return		;funcret
  8077   002DAC                     __end_of_i2c_write:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function _i2c_stop *****************
  8081 ;; Defined at:
  8082 ;;		line 43 in file "i2c.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;		None
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		cstack
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8096 ;;      Params:         0       0       0       0       0       0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0
  8099 ;;      Totals:         0       0       0       0       0       0       0
  8100 ;;Total ram usage:        0 bytes
  8101 ;; Hardware stack levels used: 1
  8102 ;; Hardware stack levels required when called: 2
  8103 ;; This function calls:
  8104 ;;		_i2c_idle
  8105 ;; This function is called by:
  8106 ;;		_write_ds1307
  8107 ;;		_read_ds1307
  8108 ;;		_write_ext_eeprom
  8109 ;;		_read_ext_eeprom
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text23
  8114   002DB8                     __ptext23:
  8115                           	callstack 0
  8116   002DB8                     _i2c_stop:
  8117                           	callstack 27
  8118   002DB8                     
  8119                           ;i2c.c: 45:  PEN = 1;
  8120   002DB8  84C5               	bsf	4037,2,c	;volatile
  8121   002DBA                     
  8122                           ;i2c.c: 46:  i2c_idle();
  8123   002DBA  ECBF  F016         	call	_i2c_idle	;wreg free
  8124   002DBE  0012               	return		;funcret
  8125   002DC0                     __end_of_i2c_stop:
  8126                           	callstack 0
  8127                           
  8128 ;; *************** function _i2c_start *****************
  8129 ;; Defined at:
  8130 ;;		line 37 in file "i2c.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;		None
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;		None
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  1    wreg      void 
  8137 ;; Registers used:
  8138 ;;		cstack
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8144 ;;      Params:         0       0       0       0       0       0       0
  8145 ;;      Locals:         0       0       0       0       0       0       0
  8146 ;;      Temps:          0       0       0       0       0       0       0
  8147 ;;      Totals:         0       0       0       0       0       0       0
  8148 ;;Total ram usage:        0 bytes
  8149 ;; Hardware stack levels used: 1
  8150 ;; Hardware stack levels required when called: 2
  8151 ;; This function calls:
  8152 ;;		_i2c_idle
  8153 ;; This function is called by:
  8154 ;;		_write_ds1307
  8155 ;;		_read_ds1307
  8156 ;;		_write_ext_eeprom
  8157 ;;		_read_ext_eeprom
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text24
  8162   002DC0                     __ptext24:
  8163                           	callstack 0
  8164   002DC0                     _i2c_start:
  8165                           	callstack 27
  8166   002DC0                     
  8167                           ;i2c.c: 39:  SEN = 1;
  8168   002DC0  80C5               	bsf	4037,0,c	;volatile
  8169   002DC2                     
  8170                           ;i2c.c: 40:  i2c_idle();
  8171   002DC2  ECBF  F016         	call	_i2c_idle	;wreg free
  8172   002DC6  0012               	return		;funcret
  8173   002DC8                     __end_of_i2c_start:
  8174                           	callstack 0
  8175                           
  8176 ;; *************** function _i2c_rep_start *****************
  8177 ;; Defined at:
  8178 ;;		line 49 in file "i2c.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8192 ;;      Params:         0       0       0       0       0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0
  8195 ;;      Totals:         0       0       0       0       0       0       0
  8196 ;;Total ram usage:        0 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; Hardware stack levels required when called: 2
  8199 ;; This function calls:
  8200 ;;		_i2c_idle
  8201 ;; This function is called by:
  8202 ;;		_read_ds1307
  8203 ;;		_read_ext_eeprom
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text25
  8208   002DC8                     __ptext25:
  8209                           	callstack 0
  8210   002DC8                     _i2c_rep_start:
  8211                           	callstack 27
  8212   002DC8                     
  8213                           ;i2c.c: 51:  RSEN = 1;
  8214   002DC8  82C5               	bsf	4037,1,c	;volatile
  8215   002DCA                     
  8216                           ;i2c.c: 52:  i2c_idle();
  8217   002DCA  ECBF  F016         	call	_i2c_idle	;wreg free
  8218   002DCE  0012               	return		;funcret
  8219   002DD0                     __end_of_i2c_rep_start:
  8220                           	callstack 0
  8221                           
  8222 ;; *************** function _i2c_read *****************
  8223 ;; Defined at:
  8224 ;;		line 73 in file "i2c.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;		None
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      unsigned char 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8238 ;;      Params:         0       0       0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0
  8241 ;;      Totals:         0       0       0       0       0       0       0
  8242 ;;Total ram usage:        0 bytes
  8243 ;; Hardware stack levels used: 1
  8244 ;; Hardware stack levels required when called: 3
  8245 ;; This function calls:
  8246 ;;		_i2c_no_ack
  8247 ;;		_i2c_rx_mode
  8248 ;; This function is called by:
  8249 ;;		_read_ds1307
  8250 ;;		_read_ext_eeprom
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text26
  8255   002DAC                     __ptext26:
  8256                           	callstack 0
  8257   002DAC                     _i2c_read:
  8258                           	callstack 26
  8259   002DAC                     
  8260                           ;i2c.c: 75:  i2c_rx_mode();
  8261   002DAC  ECE8  F016         	call	_i2c_rx_mode	;wreg free
  8262                           
  8263                           ;i2c.c: 76:  i2c_no_ack();
  8264   002DB0  ECEC  F016         	call	_i2c_no_ack	;wreg free
  8265   002DB4                     
  8266                           ;i2c.c: 78:  return SSPBUF;
  8267   002DB4  50C9               	movf	201,w,c	;volatile
  8268   002DB6  0012               	return		;funcret
  8269   002DB8                     __end_of_i2c_read:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function _i2c_rx_mode *****************
  8273 ;; Defined at:
  8274 ;;		line 61 in file "i2c.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8288 ;;      Params:         0       0       0       0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; Hardware stack levels required when called: 2
  8295 ;; This function calls:
  8296 ;;		_i2c_idle
  8297 ;; This function is called by:
  8298 ;;		_i2c_read
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text27
  8303   002DD0                     __ptext27:
  8304                           	callstack 0
  8305   002DD0                     _i2c_rx_mode:
  8306                           	callstack 26
  8307   002DD0                     
  8308                           ;i2c.c: 63:  RCEN = 1;
  8309   002DD0  86C5               	bsf	4037,3,c	;volatile
  8310   002DD2                     
  8311                           ;i2c.c: 64:  i2c_idle();
  8312   002DD2  ECBF  F016         	call	_i2c_idle	;wreg free
  8313   002DD6  0012               	return		;funcret
  8314   002DD8                     __end_of_i2c_rx_mode:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _i2c_idle *****************
  8318 ;; Defined at:
  8319 ;;		line 23 in file "i2c.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      void 
  8326 ;; Registers used:
  8327 ;;		None
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8333 ;;      Params:         0       0       0       0       0       0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0
  8336 ;;      Totals:         0       0       0       0       0       0       0
  8337 ;;Total ram usage:        0 bytes
  8338 ;; Hardware stack levels used: 1
  8339 ;; Hardware stack levels required when called: 1
  8340 ;; This function calls:
  8341 ;;		Nothing
  8342 ;; This function is called by:
  8343 ;;		_i2c_start
  8344 ;;		_i2c_stop
  8345 ;;		_i2c_rep_start
  8346 ;;		_i2c_write
  8347 ;;		_i2c_rx_mode
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text28
  8352   002D7E                     __ptext28:
  8353                           	callstack 0
  8354   002D7E                     _i2c_idle:
  8355                           	callstack 27
  8356   002D7E                     l539:
  8357   002D7E  A69E               	btfss	3998,3,c	;volatile
  8358   002D80  EFC4  F016         	goto	u1921
  8359   002D84  EFC6  F016         	goto	u1920
  8360   002D88                     u1921:
  8361   002D88  EFBF  F016         	goto	l539
  8362   002D8C                     u1920:
  8363   002D8C                     
  8364                           ;i2c.c: 26:  SSPIF = 0;
  8365   002D8C  969E               	bcf	3998,3,c	;volatile
  8366   002D8E  0012               	return		;funcret
  8367   002D90                     __end_of_i2c_idle:
  8368                           	callstack 0
  8369                           
  8370 ;; *************** function _i2c_no_ack *****************
  8371 ;; Defined at:
  8372 ;;		line 67 in file "i2c.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;		None
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;		None
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  1    wreg      void 
  8379 ;; Registers used:
  8380 ;;		None
  8381 ;; Tracked objects:
  8382 ;;		On entry : 0/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8386 ;;      Params:         0       0       0       0       0       0       0
  8387 ;;      Locals:         0       0       0       0       0       0       0
  8388 ;;      Temps:          0       0       0       0       0       0       0
  8389 ;;      Totals:         0       0       0       0       0       0       0
  8390 ;;Total ram usage:        0 bytes
  8391 ;; Hardware stack levels used: 1
  8392 ;; Hardware stack levels required when called: 1
  8393 ;; This function calls:
  8394 ;;		Nothing
  8395 ;; This function is called by:
  8396 ;;		_i2c_read
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text29
  8401   002DD8                     __ptext29:
  8402                           	callstack 0
  8403   002DD8                     _i2c_no_ack:
  8404                           	callstack 27
  8405   002DD8                     
  8406                           ;i2c.c: 69:  ACKDT = 1;
  8407   002DD8  8AC5               	bsf	4037,5,c	;volatile
  8408                           
  8409                           ;i2c.c: 70:  ACKEN = 1;
  8410   002DDA  88C5               	bsf	4037,4,c	;volatile
  8411   002DDC  0012               	return		;funcret
  8412   002DDE                     __end_of_i2c_no_ack:
  8413                           	callstack 0
  8414                           
  8415 ;; *************** function _display_time *****************
  8416 ;; Defined at:
  8417 ;;		line 37 in file "main.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8431 ;;      Params:         0       0       0       0       0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0
  8434 ;;      Totals:         0       0       0       0       0       0       0
  8435 ;;Total ram usage:        0 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; Hardware stack levels required when called: 3
  8438 ;; This function calls:
  8439 ;;		_clcd_print
  8440 ;; This function is called by:
  8441 ;;		_main
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text30
  8446   002D90                     __ptext30:
  8447                           	callstack 0
  8448   002D90                     _display_time:
  8449                           	callstack 27
  8450   002D90                     
  8451                           ;main.c: 38:     clcd_print(time, (0xC0 + (0)));
  8452   002D90  0E51               	movlw	low _time
  8453   002D92  6E07               	movwf	clcd_print@data^0,c
  8454   002D94  6A08               	clrf	(clcd_print@data+1)^0,c
  8455   002D96  0EC0               	movlw	192
  8456   002D98  6E09               	movwf	clcd_print@addr^0,c
  8457   002D9A  EC73  F014         	call	_clcd_print	;wreg free
  8458   002D9E  0012               	return		;funcret
  8459   002DA0                     __end_of_display_time:
  8460                           	callstack 0
  8461                           
  8462 ;; *************** function _clcd_print *****************
  8463 ;; Defined at:
  8464 ;;		line 66 in file "clcd.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;  data            2    6[COMRAM] PTR const unsigned char 
  8467 ;;		 -> STR_33(13), STR_32(17), STR_31(17), STR_30(17), 
  8468 ;;		 -> STR_29(21), STR_28(18), STR_27(17), STR_26(17), 
  8469 ;;		 -> STR_25(16), STR_21(20), STR_20(20), STR_19(18), 
  8470 ;;		 -> STR_18(17), STR_17(17), STR_16(3), STR_15(3), 
  8471 ;;		 -> STR_14(3), STR_13(3), menu(100), STR_12(17), 
  8472 ;;		 -> STR_11(6), STR_10(9), STR_9(17), STR_8(13), 
  8473 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(4), 
  8474 ;;		 -> STR_3(5), STR_2(10), ev(36), STR_1(5), 
  8475 ;;		 -> main@array(10), time(9), 
  8476 ;;  addr            1    8[COMRAM] unsigned char 
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8488 ;;      Params:         3       0       0       0       0       0       0
  8489 ;;      Locals:         0       0       0       0       0       0       0
  8490 ;;      Temps:          0       0       0       0       0       0       0
  8491 ;;      Totals:         3       0       0       0       0       0       0
  8492 ;;Total ram usage:        3 bytes
  8493 ;; Hardware stack levels used: 1
  8494 ;; Hardware stack levels required when called: 2
  8495 ;; This function calls:
  8496 ;;		_clcd_write
  8497 ;; This function is called by:
  8498 ;;		_display_time
  8499 ;;		_main
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text31
  8504   0028E6                     __ptext31:
  8505                           	callstack 0
  8506   0028E6                     _clcd_print:
  8507                           	callstack 27
  8508   0028E6                     
  8509                           ;clcd.c: 66: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 67: 
      +                          {;clcd.c: 68:  clcd_write(addr, 0);
  8510   0028E6  0E00               	movlw	0
  8511   0028E8  6E01               	movwf	clcd_write@control_bit^0,c
  8512   0028EA  5009               	movf	clcd_print@addr^0,w,c
  8513   0028EC  EC99  F015         	call	_clcd_write
  8514                           
  8515                           ;clcd.c: 69:  while (*data != '\0')
  8516   0028F0  EF90  F014         	goto	l2992
  8517   0028F4                     l2988:
  8518                           
  8519                           ;clcd.c: 70:  {;clcd.c: 71:   clcd_write(*data++, 1);
  8520   0028F4  0E01               	movlw	1
  8521   0028F6  6E01               	movwf	clcd_write@control_bit^0,c
  8522   0028F8  C007  FFF6         	movff	clcd_print@data,tblptrl
  8523   0028FC  C008  FFF7         	movff	clcd_print@data+1,tblptrh
  8524   002900  6AF8               	clrf	tblptru,c
  8525   002902  0E05               	movlw	(high __ramtop+-1)
  8526   002904  64F7               	cpfsgt	tblptrh,c
  8527   002906  D003               	bra	u1967
  8528   002908  0008               	tblrd		*
  8529   00290A  50F5               	movf	tablat,w,c
  8530   00290C  D005               	bra	u1960
  8531   00290E                     u1967:
  8532   00290E  CFF6 FFE9          	movff	tblptrl,fsr0l
  8533   002912  CFF7 FFEA          	movff	tblptrh,fsr0h
  8534   002916  50EF               	movf	indf0,w,c
  8535   002918                     u1960:
  8536   002918  EC99  F015         	call	_clcd_write
  8537   00291C  4A07               	infsnz	clcd_print@data^0,f,c
  8538   00291E  2A08               	incf	(clcd_print@data+1)^0,f,c
  8539   002920                     l2992:
  8540                           
  8541                           ;clcd.c: 69:  while (*data != '\0')
  8542   002920  C007  FFF6         	movff	clcd_print@data,tblptrl
  8543   002924  C008  FFF7         	movff	clcd_print@data+1,tblptrh
  8544   002928  6AF8               	clrf	tblptru,c
  8545   00292A  0E05               	movlw	(high __ramtop+-1)
  8546   00292C  64F7               	cpfsgt	tblptrh,c
  8547   00292E  D003               	bra	u1977
  8548   002930  0008               	tblrd		*
  8549   002932  50F5               	movf	tablat,w,c
  8550   002934  D005               	bra	u1970
  8551   002936                     u1977:
  8552   002936  CFF6 FFE9          	movff	tblptrl,fsr0l
  8553   00293A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8554   00293E  50EF               	movf	indf0,w,c
  8555   002940                     u1970:
  8556   002940  0900               	iorlw	0
  8557   002942  A4D8               	btfss	status,2,c
  8558   002944  EFA6  F014         	goto	u1981
  8559   002948  EFA8  F014         	goto	u1980
  8560   00294C                     u1981:
  8561   00294C  EF7A  F014         	goto	l2988
  8562   002950                     u1980:
  8563   002950  0012               	return		;funcret
  8564   002952                     __end_of_clcd_print:
  8565                           	callstack 0
  8566                           
  8567 ;; *************** function _clcd_putch *****************
  8568 ;; Defined at:
  8569 ;;		line 75 in file "clcd.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;  data            1    wreg     const unsigned char 
  8572 ;;  addr            1   14[COMRAM] unsigned char 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  data            1   15[COMRAM] const unsigned char 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  1    wreg      void 
  8577 ;; Registers used:
  8578 ;;		wreg, status,2, cstack
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8584 ;;      Params:         1       0       0       0       0       0       0
  8585 ;;      Locals:         1       0       0       0       0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0
  8587 ;;      Totals:         2       0       0       0       0       0       0
  8588 ;;Total ram usage:        2 bytes
  8589 ;; Hardware stack levels used: 1
  8590 ;; Hardware stack levels required when called: 2
  8591 ;; This function calls:
  8592 ;;		_clcd_write
  8593 ;; This function is called by:
  8594 ;;		_main
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text32
  8599   002D00                     __ptext32:
  8600                           	callstack 0
  8601   002D00                     _clcd_putch:
  8602                           	callstack 28
  8603                           
  8604                           ;incstack = 0
  8605                           ;clcd_putch@data stored from wreg
  8606   002D00  6E10               	movwf	clcd_putch@data^0,c
  8607   002D02                     
  8608                           ;clcd.c: 75: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 76: {
      +                          ;clcd.c: 77:  clcd_write(addr, 0);
  8609   002D02  0E00               	movlw	0
  8610   002D04  6E01               	movwf	clcd_write@control_bit^0,c
  8611   002D06  500F               	movf	clcd_putch@addr^0,w,c
  8612   002D08  EC99  F015         	call	_clcd_write
  8613                           
  8614                           ;clcd.c: 78:  clcd_write(data, 1);
  8615   002D0C  0E01               	movlw	1
  8616   002D0E  6E01               	movwf	clcd_write@control_bit^0,c
  8617   002D10  5010               	movf	clcd_putch@data^0,w,c
  8618   002D12  EC99  F015         	call	_clcd_write
  8619   002D16  0012               	return		;funcret
  8620   002D18                     __end_of_clcd_putch:
  8621                           	callstack 0
  8622                           
  8623 ;; *************** function _clcd_write *****************
  8624 ;; Defined at:
  8625 ;;		line 12 in file "clcd.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  byte            1    wreg     unsigned char 
  8628 ;;  control_bit     1    0[COMRAM] unsigned char 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  byte            1    1[COMRAM] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8640 ;;      Params:         1       0       0       0       0       0       0
  8641 ;;      Locals:         1       0       0       0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0
  8643 ;;      Totals:         2       0       0       0       0       0       0
  8644 ;;Total ram usage:        2 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; Hardware stack levels required when called: 1
  8647 ;; This function calls:
  8648 ;;		Nothing
  8649 ;; This function is called by:
  8650 ;;		_main
  8651 ;;		_init_clcd
  8652 ;;		_clcd_print
  8653 ;;		_clcd_putch
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text33
  8658   002B32                     __ptext33:
  8659                           	callstack 0
  8660   002B32                     _clcd_write:
  8661                           	callstack 27
  8662                           
  8663                           ;incstack = 0
  8664                           ;clcd_write@byte stored from wreg
  8665   002B32  6E02               	movwf	clcd_write@byte^0,c
  8666   002B34                     
  8667                           ;clcd.c: 12: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 13: 
      +                          {;clcd.c: 14:  RC1 = control_bit;
  8668   002B34  B001               	btfsc	clcd_write@control_bit^0,0,c
  8669   002B36  EF9F  F015         	goto	u1931
  8670   002B3A  EFA2  F015         	goto	u1930
  8671   002B3E                     u1931:
  8672   002B3E  8282               	bsf	3970,1,c	;volatile
  8673   002B40  EFA3  F015         	goto	u1945
  8674   002B44                     u1930:
  8675   002B44  9282               	bcf	3970,1,c	;volatile
  8676   002B46                     u1945:
  8677   002B46                     
  8678                           ;clcd.c: 15:  PORTD = byte;
  8679   002B46  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  8680   002B4A                     
  8681                           ;clcd.c: 18:  RC2 = 1;
  8682   002B4A  8482               	bsf	3970,2,c	;volatile
  8683   002B4C                     
  8684                           ;clcd.c: 19:  RC2 = 0;
  8685   002B4C  9482               	bcf	3970,2,c	;volatile
  8686   002B4E                     
  8687                           ;clcd.c: 21:  TRISD7 = 0xFF;
  8688   002B4E  8E95               	bsf	3989,7,c	;volatile
  8689   002B50                     
  8690                           ;clcd.c: 22:  RC0 = 1;
  8691   002B50  8082               	bsf	3970,0,c	;volatile
  8692   002B52                     
  8693                           ;clcd.c: 23:  RC1 = 0;
  8694   002B52  9282               	bcf	3970,1,c	;volatile
  8695   002B54                     l2970:
  8696                           
  8697                           ;clcd.c: 26:  {;clcd.c: 27:   RC2 = 1;
  8698   002B54  8482               	bsf	3970,2,c	;volatile
  8699   002B56                     
  8700                           ;clcd.c: 28:   RC2 = 0;
  8701   002B56  9482               	bcf	3970,2,c	;volatile
  8702   002B58                     
  8703                           ;clcd.c: 29:  } while (RD7);
  8704   002B58  BE83               	btfsc	3971,7,c	;volatile
  8705   002B5A  EFB1  F015         	goto	u1951
  8706   002B5E  EFB3  F015         	goto	u1950
  8707   002B62                     u1951:
  8708   002B62  EFAA  F015         	goto	l2970
  8709   002B66                     u1950:
  8710   002B66                     
  8711                           ;clcd.c: 31:  RC0 = 0;
  8712   002B66  9082               	bcf	3970,0,c	;volatile
  8713                           
  8714                           ;clcd.c: 32:  TRISD7 = 0x00;
  8715   002B68  9E95               	bcf	3989,7,c	;volatile
  8716   002B6A  0012               	return		;funcret
  8717   002B6C                     __end_of_clcd_write:
  8718                           	callstack 0
  8719                           
  8720 ;; *************** function ___xxtofl *****************
  8721 ;; Defined at:
  8722 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;  sign            1    wreg     unsigned char 
  8725 ;;  val             4    7[COMRAM] long 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;  sign            1   15[COMRAM] unsigned char 
  8728 ;;  arg             4   17[COMRAM] unsigned long 
  8729 ;;  exp             1   16[COMRAM] unsigned char 
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  4    7[COMRAM] unsigned char 
  8732 ;; Registers used:
  8733 ;;		wreg, status,2, status,0
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8739 ;;      Params:         4       0       0       0       0       0       0
  8740 ;;      Locals:         6       0       0       0       0       0       0
  8741 ;;      Temps:          4       0       0       0       0       0       0
  8742 ;;      Totals:        14       0       0       0       0       0       0
  8743 ;;Total ram usage:       14 bytes
  8744 ;; Hardware stack levels used: 1
  8745 ;; Hardware stack levels required when called: 1
  8746 ;; This function calls:
  8747 ;;		Nothing
  8748 ;; This function is called by:
  8749 ;;		_main
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           	psect	text34
  8754   0020AE                     __ptext34:
  8755                           	callstack 0
  8756   0020AE                     ___xxtofl:
  8757                           	callstack 29
  8758                           
  8759                           ;incstack = 0
  8760                           ;___xxtofl@sign stored from wreg
  8761   0020AE  6E10               	movwf	___xxtofl@sign^0,c
  8762   0020B0  5010               	movf	___xxtofl@sign^0,w,c
  8763   0020B2  B4D8               	btfsc	status,2,c
  8764   0020B4  EF5E  F010         	goto	u2721
  8765   0020B8  EF60  F010         	goto	u2720
  8766   0020BC                     u2721:
  8767   0020BC  EF82  F010         	goto	l1244
  8768   0020C0                     u2720:
  8769   0020C0  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  8770   0020C2  EF67  F010         	goto	u2730
  8771   0020C6  EF65  F010         	goto	u2731
  8772   0020CA                     u2731:
  8773   0020CA  EF82  F010         	goto	l1244
  8774   0020CE                     u2730:
  8775   0020CE  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  8776   0020D2  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  8777   0020D6  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  8778   0020DA  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  8779   0020DE  1E0C               	comf	??___xxtofl^0,f,c
  8780   0020E0  1E0D               	comf	(??___xxtofl+1)^0,f,c
  8781   0020E2  1E0E               	comf	(??___xxtofl+2)^0,f,c
  8782   0020E4  1E0F               	comf	(??___xxtofl+3)^0,f,c
  8783   0020E6  2A0C               	incf	??___xxtofl^0,f,c
  8784   0020E8  0E00               	movlw	0
  8785   0020EA  220D               	addwfc	(??___xxtofl+1)^0,f,c
  8786   0020EC  220E               	addwfc	(??___xxtofl+2)^0,f,c
  8787   0020EE  220F               	addwfc	(??___xxtofl+3)^0,f,c
  8788   0020F0  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  8789   0020F4  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  8790   0020F8  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  8791   0020FC  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  8792   002100  EF8A  F010         	goto	l3628
  8793   002104                     l1244:
  8794   002104  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  8795   002108  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8796   00210C  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8797   002110  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8798   002114                     l3628:
  8799   002114  5008               	movf	___xxtofl@val^0,w,c
  8800   002116  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  8801   002118  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  8802   00211A  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  8803   00211C  A4D8               	btfss	status,2,c
  8804   00211E  EF93  F010         	goto	u2741
  8805   002122  EF95  F010         	goto	u2740
  8806   002126                     u2741:
  8807   002126  EF9F  F010         	goto	l3634
  8808   00212A                     u2740:
  8809   00212A  0E00               	movlw	0
  8810   00212C  6E08               	movwf	?___xxtofl^0,c
  8811   00212E  0E00               	movlw	0
  8812   002130  6E09               	movwf	(?___xxtofl+1)^0,c
  8813   002132  0E00               	movlw	0
  8814   002134  6E0A               	movwf	(?___xxtofl+2)^0,c
  8815   002136  0E00               	movlw	0
  8816   002138  6E0B               	movwf	(?___xxtofl+3)^0,c
  8817   00213A  EF30  F011         	goto	l1247
  8818   00213E                     l3634:
  8819   00213E  0E96               	movlw	150
  8820   002140  6E11               	movwf	___xxtofl@exp^0,c
  8821   002142  EFA9  F010         	goto	l3638
  8822   002146                     l3636:
  8823   002146  2A11               	incf	___xxtofl@exp^0,f,c
  8824   002148  90D8               	bcf	status,0,c
  8825   00214A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  8826   00214C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  8827   00214E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  8828   002150  3212               	rrcf	___xxtofl@arg^0,f,c
  8829   002152                     l3638:
  8830   002152  0E00               	movlw	0
  8831   002154  1412               	andwf	___xxtofl@arg^0,w,c
  8832   002156  6E0C               	movwf	??___xxtofl^0,c
  8833   002158  0E00               	movlw	0
  8834   00215A  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  8835   00215C  6E0D               	movwf	(??___xxtofl+1)^0,c
  8836   00215E  0E00               	movlw	0
  8837   002160  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  8838   002162  6E0E               	movwf	(??___xxtofl+2)^0,c
  8839   002164  0EFE               	movlw	254
  8840   002166  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  8841   002168  6E0F               	movwf	(??___xxtofl+3)^0,c
  8842   00216A  500C               	movf	??___xxtofl^0,w,c
  8843   00216C  100D               	iorwf	(??___xxtofl+1)^0,w,c
  8844   00216E  100E               	iorwf	(??___xxtofl+2)^0,w,c
  8845   002170  100F               	iorwf	(??___xxtofl+3)^0,w,c
  8846   002172  A4D8               	btfss	status,2,c
  8847   002174  EFBE  F010         	goto	u2751
  8848   002178  EFC0  F010         	goto	u2750
  8849   00217C                     u2751:
  8850   00217C  EFA3  F010         	goto	l3636
  8851   002180                     u2750:
  8852   002180  EFCE  F010         	goto	l1251
  8853   002184                     l3640:
  8854   002184  2A11               	incf	___xxtofl@exp^0,f,c
  8855   002186  0E01               	movlw	1
  8856   002188  2612               	addwf	___xxtofl@arg^0,f,c
  8857   00218A  0E00               	movlw	0
  8858   00218C  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  8859   00218E  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  8860   002190  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  8861   002192  90D8               	bcf	status,0,c
  8862   002194  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  8863   002196  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  8864   002198  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  8865   00219A  3212               	rrcf	___xxtofl@arg^0,f,c
  8866   00219C                     l1251:
  8867   00219C  0E00               	movlw	0
  8868   00219E  1412               	andwf	___xxtofl@arg^0,w,c
  8869   0021A0  6E0C               	movwf	??___xxtofl^0,c
  8870   0021A2  0E00               	movlw	0
  8871   0021A4  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  8872   0021A6  6E0D               	movwf	(??___xxtofl+1)^0,c
  8873   0021A8  0E00               	movlw	0
  8874   0021AA  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  8875   0021AC  6E0E               	movwf	(??___xxtofl+2)^0,c
  8876   0021AE  0EFF               	movlw	255
  8877   0021B0  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  8878   0021B2  6E0F               	movwf	(??___xxtofl+3)^0,c
  8879   0021B4  500C               	movf	??___xxtofl^0,w,c
  8880   0021B6  100D               	iorwf	(??___xxtofl+1)^0,w,c
  8881   0021B8  100E               	iorwf	(??___xxtofl+2)^0,w,c
  8882   0021BA  100F               	iorwf	(??___xxtofl+3)^0,w,c
  8883   0021BC  A4D8               	btfss	status,2,c
  8884   0021BE  EFE3  F010         	goto	u2761
  8885   0021C2  EFE5  F010         	goto	u2760
  8886   0021C6                     u2761:
  8887   0021C6  EFC2  F010         	goto	l3640
  8888   0021CA                     u2760:
  8889   0021CA  EFED  F010         	goto	l3648
  8890   0021CE                     l3646:
  8891   0021CE  0611               	decf	___xxtofl@exp^0,f,c
  8892   0021D0  90D8               	bcf	status,0,c
  8893   0021D2  3612               	rlcf	___xxtofl@arg^0,f,c
  8894   0021D4  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  8895   0021D6  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  8896   0021D8  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  8897   0021DA                     l3648:
  8898   0021DA  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  8899   0021DC  EFF2  F010         	goto	u2771
  8900   0021E0  EFF4  F010         	goto	u2770
  8901   0021E4                     u2771:
  8902   0021E4  EFFC  F010         	goto	l1258
  8903   0021E8                     u2770:
  8904   0021E8  0E02               	movlw	2
  8905   0021EA  6011               	cpfslt	___xxtofl@exp^0,c
  8906   0021EC  EFFA  F010         	goto	u2781
  8907   0021F0  EFFC  F010         	goto	u2780
  8908   0021F4                     u2781:
  8909   0021F4  EFE7  F010         	goto	l3646
  8910   0021F8                     u2780:
  8911   0021F8                     l1258:
  8912   0021F8  B011               	btfsc	___xxtofl@exp^0,0,c
  8913   0021FA  EF01  F011         	goto	u2791
  8914   0021FE  EF03  F011         	goto	u2790
  8915   002202                     u2791:
  8916   002202  EF04  F011         	goto	l3654
  8917   002206                     u2790:
  8918   002206  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  8919   002208                     l3654:
  8920   002208  90D8               	bcf	status,0,c
  8921   00220A  3211               	rrcf	___xxtofl@exp^0,f,c
  8922   00220C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  8923   002210  6A0D               	clrf	(??___xxtofl+1)^0,c
  8924   002212  6A0E               	clrf	(??___xxtofl+2)^0,c
  8925   002214  6A0F               	clrf	(??___xxtofl+3)^0,c
  8926   002216  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  8927   00221A  6A0E               	clrf	(??___xxtofl+2)^0,c
  8928   00221C  6A0D               	clrf	(??___xxtofl+1)^0,c
  8929   00221E  6A0C               	clrf	??___xxtofl^0,c
  8930   002220  500C               	movf	??___xxtofl^0,w,c
  8931   002222  1212               	iorwf	___xxtofl@arg^0,f,c
  8932   002224  500D               	movf	(??___xxtofl+1)^0,w,c
  8933   002226  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  8934   002228  500E               	movf	(??___xxtofl+2)^0,w,c
  8935   00222A  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  8936   00222C  500F               	movf	(??___xxtofl+3)^0,w,c
  8937   00222E  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  8938   002230  5010               	movf	___xxtofl@sign^0,w,c
  8939   002232  B4D8               	btfsc	status,2,c
  8940   002234  EF1E  F011         	goto	u2801
  8941   002238  EF20  F011         	goto	u2800
  8942   00223C                     u2801:
  8943   00223C  EF28  F011         	goto	l3664
  8944   002240                     u2800:
  8945   002240  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  8946   002242  EF27  F011         	goto	u2810
  8947   002246  EF25  F011         	goto	u2811
  8948   00224A                     u2811:
  8949   00224A  EF28  F011         	goto	l3664
  8950   00224E                     u2810:
  8951   00224E  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  8952   002250                     l3664:
  8953   002250  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  8954   002254  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  8955   002258  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  8956   00225C  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  8957   002260                     l1247:
  8958   002260  0012               	return		;funcret
  8959   002262                     __end_of___xxtofl:
  8960                           	callstack 0
  8961                           
  8962 ;; *************** function ___wmul *****************
  8963 ;; Defined at:
  8964 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;  multiplier      2    0[COMRAM] unsigned int 
  8967 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;  product         2    4[COMRAM] unsigned int 
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  2    0[COMRAM] unsigned int 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, status,0, prodl, prodh
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8979 ;;      Params:         4       0       0       0       0       0       0
  8980 ;;      Locals:         2       0       0       0       0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0
  8982 ;;      Totals:         6       0       0       0       0       0       0
  8983 ;;Total ram usage:        6 bytes
  8984 ;; Hardware stack levels used: 1
  8985 ;; Hardware stack levels required when called: 1
  8986 ;; This function calls:
  8987 ;;		Nothing
  8988 ;; This function is called by:
  8989 ;;		_main
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text35
  8994   002C80                     __ptext35:
  8995                           	callstack 0
  8996   002C80                     ___wmul:
  8997                           	callstack 29
  8998   002C80  5001               	movf	___wmul@multiplier^0,w,c
  8999   002C82  0203               	mulwf	___wmul@multiplicand^0,c
  9000   002C84  CFF3 F005          	movff	prodl,___wmul@product
  9001   002C88  CFF4 F006          	movff	prodh,___wmul@product+1
  9002   002C8C  5001               	movf	___wmul@multiplier^0,w,c
  9003   002C8E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9004   002C90  50F3               	movf	243,w,c
  9005   002C92  2606               	addwf	(___wmul@product+1)^0,f,c
  9006   002C94  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9007   002C96  0203               	mulwf	___wmul@multiplicand^0,c
  9008   002C98  50F3               	movf	243,w,c
  9009   002C9A  2606               	addwf	(___wmul@product+1)^0,f,c
  9010   002C9C  C005  F001         	movff	___wmul@product,?___wmul
  9011   002CA0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9012   002CA4  0012               	return		;funcret
  9013   002CA6                     __end_of___wmul:
  9014                           	callstack 0
  9015                           
  9016 ;; *************** function ___lwmod *****************
  9017 ;; Defined at:
  9018 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  dividend        2    0[COMRAM] unsigned int 
  9021 ;;  divisor         2    2[COMRAM] unsigned int 
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;  counter         1    4[COMRAM] unsigned char 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  2    0[COMRAM] unsigned int 
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9033 ;;      Params:         4       0       0       0       0       0       0
  9034 ;;      Locals:         1       0       0       0       0       0       0
  9035 ;;      Temps:          0       0       0       0       0       0       0
  9036 ;;      Totals:         5       0       0       0       0       0       0
  9037 ;;Total ram usage:        5 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; Hardware stack levels required when called: 1
  9040 ;; This function calls:
  9041 ;;		Nothing
  9042 ;; This function is called by:
  9043 ;;		_main
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           	psect	text36
  9048   0029B6                     __ptext36:
  9049                           	callstack 0
  9050   0029B6                     ___lwmod:
  9051                           	callstack 29
  9052   0029B6  5003               	movf	___lwmod@divisor^0,w,c
  9053   0029B8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  9054   0029BA  B4D8               	btfsc	status,2,c
  9055   0029BC  EFE2  F014         	goto	u2691
  9056   0029C0  EFE4  F014         	goto	u2690
  9057   0029C4                     u2691:
  9058   0029C4  EF08  F015         	goto	l1090
  9059   0029C8                     u2690:
  9060   0029C8  0E01               	movlw	1
  9061   0029CA  6E05               	movwf	___lwmod@counter^0,c
  9062   0029CC  EFEC  F014         	goto	l3612
  9063   0029D0                     l3610:
  9064   0029D0  90D8               	bcf	status,0,c
  9065   0029D2  3603               	rlcf	___lwmod@divisor^0,f,c
  9066   0029D4  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  9067   0029D6  2A05               	incf	___lwmod@counter^0,f,c
  9068   0029D8                     l3612:
  9069   0029D8  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  9070   0029DA  EFF1  F014         	goto	u2701
  9071   0029DE  EFF3  F014         	goto	u2700
  9072   0029E2                     u2701:
  9073   0029E2  EFE8  F014         	goto	l3610
  9074   0029E6                     u2700:
  9075   0029E6                     l3614:
  9076   0029E6  5003               	movf	___lwmod@divisor^0,w,c
  9077   0029E8  5C01               	subwf	___lwmod@dividend^0,w,c
  9078   0029EA  5004               	movf	(___lwmod@divisor+1)^0,w,c
  9079   0029EC  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  9080   0029EE  A0D8               	btfss	status,0,c
  9081   0029F0  EFFC  F014         	goto	u2711
  9082   0029F4  EFFE  F014         	goto	u2710
  9083   0029F8                     u2711:
  9084   0029F8  EF02  F015         	goto	l3618
  9085   0029FC                     u2710:
  9086   0029FC  5003               	movf	___lwmod@divisor^0,w,c
  9087   0029FE  5E01               	subwf	___lwmod@dividend^0,f,c
  9088   002A00  5004               	movf	(___lwmod@divisor+1)^0,w,c
  9089   002A02  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  9090   002A04                     l3618:
  9091   002A04  90D8               	bcf	status,0,c
  9092   002A06  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  9093   002A08  3203               	rrcf	___lwmod@divisor^0,f,c
  9094   002A0A  2E05               	decfsz	___lwmod@counter^0,f,c
  9095   002A0C  EFF3  F014         	goto	l3614
  9096   002A10                     l1090:
  9097   002A10  C001  F001         	movff	___lwmod@dividend,?___lwmod
  9098   002A14  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  9099   002A18  0012               	return		;funcret
  9100   002A1A                     __end_of___lwmod:
  9101                           	callstack 0
  9102                           
  9103 ;; *************** function ___lwdiv *****************
  9104 ;; Defined at:
  9105 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  dividend        2    0[COMRAM] unsigned int 
  9108 ;;  divisor         2    2[COMRAM] unsigned int 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  quotient        2    4[COMRAM] unsigned int 
  9111 ;;  counter         1    6[COMRAM] unsigned char 
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  2    0[COMRAM] unsigned int 
  9114 ;; Registers used:
  9115 ;;		wreg, status,2, status,0
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9121 ;;      Params:         4       0       0       0       0       0       0
  9122 ;;      Locals:         3       0       0       0       0       0       0
  9123 ;;      Temps:          0       0       0       0       0       0       0
  9124 ;;      Totals:         7       0       0       0       0       0       0
  9125 ;;Total ram usage:        7 bytes
  9126 ;; Hardware stack levels used: 1
  9127 ;; Hardware stack levels required when called: 1
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		_main
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           	psect	text37
  9136   002806                     __ptext37:
  9137                           	callstack 0
  9138   002806                     ___lwdiv:
  9139                           	callstack 29
  9140   002806  0E00               	movlw	0
  9141   002808  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  9142   00280A  0E00               	movlw	0
  9143   00280C  6E05               	movwf	___lwdiv@quotient^0,c
  9144   00280E  5003               	movf	___lwdiv@divisor^0,w,c
  9145   002810  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9146   002812  B4D8               	btfsc	status,2,c
  9147   002814  EF0E  F014         	goto	u2661
  9148   002818  EF10  F014         	goto	u2660
  9149   00281C                     u2661:
  9150   00281C  EF38  F014         	goto	l1080
  9151   002820                     u2660:
  9152   002820  0E01               	movlw	1
  9153   002822  6E07               	movwf	___lwdiv@counter^0,c
  9154   002824  EF18  F014         	goto	l3592
  9155   002828                     l3590:
  9156   002828  90D8               	bcf	status,0,c
  9157   00282A  3603               	rlcf	___lwdiv@divisor^0,f,c
  9158   00282C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9159   00282E  2A07               	incf	___lwdiv@counter^0,f,c
  9160   002830                     l3592:
  9161   002830  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  9162   002832  EF1D  F014         	goto	u2671
  9163   002836  EF1F  F014         	goto	u2670
  9164   00283A                     u2671:
  9165   00283A  EF14  F014         	goto	l3590
  9166   00283E                     u2670:
  9167   00283E                     l3594:
  9168   00283E  90D8               	bcf	status,0,c
  9169   002840  3605               	rlcf	___lwdiv@quotient^0,f,c
  9170   002842  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9171   002844  5003               	movf	___lwdiv@divisor^0,w,c
  9172   002846  5C01               	subwf	___lwdiv@dividend^0,w,c
  9173   002848  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  9174   00284A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9175   00284C  A0D8               	btfss	status,0,c
  9176   00284E  EF2B  F014         	goto	u2681
  9177   002852  EF2D  F014         	goto	u2680
  9178   002856                     u2681:
  9179   002856  EF32  F014         	goto	l3602
  9180   00285A                     u2680:
  9181   00285A  5003               	movf	___lwdiv@divisor^0,w,c
  9182   00285C  5E01               	subwf	___lwdiv@dividend^0,f,c
  9183   00285E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  9184   002860  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9185   002862  8005               	bsf	___lwdiv@quotient^0,0,c
  9186   002864                     l3602:
  9187   002864  90D8               	bcf	status,0,c
  9188   002866  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9189   002868  3203               	rrcf	___lwdiv@divisor^0,f,c
  9190   00286A  2E07               	decfsz	___lwdiv@counter^0,f,c
  9191   00286C  EF1F  F014         	goto	l3594
  9192   002870                     l1080:
  9193   002870  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  9194   002874  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9195   002878  0012               	return		;funcret
  9196   00287A                     __end_of___lwdiv:
  9197                           	callstack 0
  9198                           
  9199 ;; *************** function ___fltol *****************
  9200 ;; Defined at:
  9201 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  9202 ;; Parameters:    Size  Location     Type
  9203 ;;  f1              4   46[COMRAM] unsigned int 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  exp1            1   55[COMRAM] unsigned char 
  9206 ;;  sign1           1   54[COMRAM] unsigned char 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  4   46[COMRAM] long 
  9209 ;; Registers used:
  9210 ;;		wreg, status,2, status,0
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9216 ;;      Params:         4       0       0       0       0       0       0
  9217 ;;      Locals:         2       0       0       0       0       0       0
  9218 ;;      Temps:          4       0       0       0       0       0       0
  9219 ;;      Totals:        10       0       0       0       0       0       0
  9220 ;;Total ram usage:       10 bytes
  9221 ;; Hardware stack levels used: 1
  9222 ;; Hardware stack levels required when called: 1
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_main
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text38
  9231   00236A                     __ptext38:
  9232                           	callstack 0
  9233   00236A                     ___fltol:
  9234                           	callstack 29
  9235   00236A  3431               	rlcf	(___fltol@f1+2)^0,w,c
  9236   00236C  3432               	rlcf	(___fltol@f1+3)^0,w,c
  9237   00236E  6E38               	movwf	___fltol@exp1^0,c
  9238   002370  5038               	movf	___fltol@exp1^0,w,c
  9239   002372  A4D8               	btfss	status,2,c
  9240   002374  EFBE  F011         	goto	u2591
  9241   002378  EFC0  F011         	goto	u2590
  9242   00237C                     u2591:
  9243   00237C  EFCA  F011         	goto	l3546
  9244   002380                     u2590:
  9245   002380                     l3542:
  9246   002380  0E00               	movlw	0
  9247   002382  6E2F               	movwf	?___fltol^0,c
  9248   002384  0E00               	movlw	0
  9249   002386  6E30               	movwf	(?___fltol+1)^0,c
  9250   002388  0E00               	movlw	0
  9251   00238A  6E31               	movwf	(?___fltol+2)^0,c
  9252   00238C  0E00               	movlw	0
  9253   00238E  6E32               	movwf	(?___fltol+3)^0,c
  9254   002390  EF37  F012         	goto	l886
  9255   002394                     l3546:
  9256   002394  C02F  F033         	movff	___fltol@f1,??___fltol
  9257   002398  C030  F034         	movff	___fltol@f1+1,??___fltol+1
  9258   00239C  C031  F035         	movff	___fltol@f1+2,??___fltol+2
  9259   0023A0  C032  F036         	movff	___fltol@f1+3,??___fltol+3
  9260   0023A4  0E20               	movlw	32
  9261   0023A6  EFDA  F011         	goto	u2600
  9262   0023AA                     u2605:
  9263   0023AA  90D8               	bcf	status,0,c
  9264   0023AC  3236               	rrcf	(??___fltol+3)^0,f,c
  9265   0023AE  3235               	rrcf	(??___fltol+2)^0,f,c
  9266   0023B0  3234               	rrcf	(??___fltol+1)^0,f,c
  9267   0023B2  3233               	rrcf	??___fltol^0,f,c
  9268   0023B4                     u2600:
  9269   0023B4  2EE8               	decfsz	wreg,f,c
  9270   0023B6  EFD5  F011         	goto	u2605
  9271   0023BA  5033               	movf	??___fltol^0,w,c
  9272   0023BC  6E37               	movwf	___fltol@sign1^0,c
  9273   0023BE  8E31               	bsf	(___fltol@f1+2)^0,7,c
  9274   0023C0  0EFF               	movlw	255
  9275   0023C2  162F               	andwf	___fltol@f1^0,f,c
  9276   0023C4  0EFF               	movlw	255
  9277   0023C6  1630               	andwf	(___fltol@f1+1)^0,f,c
  9278   0023C8  0EFF               	movlw	255
  9279   0023CA  1631               	andwf	(___fltol@f1+2)^0,f,c
  9280   0023CC  0E00               	movlw	0
  9281   0023CE  1632               	andwf	(___fltol@f1+3)^0,f,c
  9282   0023D0  0E96               	movlw	150
  9283   0023D2  5E38               	subwf	___fltol@exp1^0,f,c
  9284   0023D4  BE38               	btfsc	___fltol@exp1^0,7,c
  9285   0023D6  EFF1  F011         	goto	u2610
  9286   0023DA  EFEF  F011         	goto	u2611
  9287   0023DE                     u2611:
  9288   0023DE  EF07  F012         	goto	l3566
  9289   0023E2                     u2610:
  9290   0023E2  5038               	movf	___fltol@exp1^0,w,c
  9291   0023E4  0A80               	xorlw	128
  9292   0023E6  0F97               	addlw	151
  9293   0023E8  B0D8               	btfsc	status,0,c
  9294   0023EA  EFF9  F011         	goto	u2621
  9295   0023EE  EFFB  F011         	goto	u2620
  9296   0023F2                     u2621:
  9297   0023F2  EFFD  F011         	goto	l3562
  9298   0023F6                     u2620:
  9299   0023F6  EFC0  F011         	goto	l3542
  9300   0023FA                     l3562:
  9301   0023FA  90D8               	bcf	status,0,c
  9302   0023FC  3232               	rrcf	(___fltol@f1+3)^0,f,c
  9303   0023FE  3231               	rrcf	(___fltol@f1+2)^0,f,c
  9304   002400  3230               	rrcf	(___fltol@f1+1)^0,f,c
  9305   002402  322F               	rrcf	___fltol@f1^0,f,c
  9306   002404  3E38               	incfsz	___fltol@exp1^0,f,c
  9307   002406  EFFD  F011         	goto	l3562
  9308   00240A  EF1F  F012         	goto	l3576
  9309   00240E                     l3566:
  9310   00240E  0E1F               	movlw	31
  9311   002410  6438               	cpfsgt	___fltol@exp1^0,c
  9312   002412  EF0D  F012         	goto	u2631
  9313   002416  EF0F  F012         	goto	u2630
  9314   00241A                     u2631:
  9315   00241A  EF17  F012         	goto	l3574
  9316   00241E                     u2630:
  9317   00241E  EFC0  F011         	goto	l3542
  9318   002422                     l3572:
  9319   002422  90D8               	bcf	status,0,c
  9320   002424  362F               	rlcf	___fltol@f1^0,f,c
  9321   002426  3630               	rlcf	(___fltol@f1+1)^0,f,c
  9322   002428  3631               	rlcf	(___fltol@f1+2)^0,f,c
  9323   00242A  3632               	rlcf	(___fltol@f1+3)^0,f,c
  9324   00242C  0638               	decf	___fltol@exp1^0,f,c
  9325   00242E                     l3574:
  9326   00242E  5038               	movf	___fltol@exp1^0,w,c
  9327   002430  A4D8               	btfss	status,2,c
  9328   002432  EF1D  F012         	goto	u2641
  9329   002436  EF1F  F012         	goto	u2640
  9330   00243A                     u2641:
  9331   00243A  EF11  F012         	goto	l3572
  9332   00243E                     u2640:
  9333   00243E                     l3576:
  9334   00243E  5037               	movf	___fltol@sign1^0,w,c
  9335   002440  B4D8               	btfsc	status,2,c
  9336   002442  EF25  F012         	goto	u2651
  9337   002446  EF27  F012         	goto	u2650
  9338   00244A                     u2651:
  9339   00244A  EF2F  F012         	goto	l3580
  9340   00244E                     u2650:
  9341   00244E  1E32               	comf	(___fltol@f1+3)^0,f,c
  9342   002450  1E31               	comf	(___fltol@f1+2)^0,f,c
  9343   002452  1E30               	comf	(___fltol@f1+1)^0,f,c
  9344   002454  6C2F               	negf	___fltol@f1^0,c
  9345   002456  0E00               	movlw	0
  9346   002458  2230               	addwfc	(___fltol@f1+1)^0,f,c
  9347   00245A  2231               	addwfc	(___fltol@f1+2)^0,f,c
  9348   00245C  2232               	addwfc	(___fltol@f1+3)^0,f,c
  9349   00245E                     l3580:
  9350   00245E  C02F  F02F         	movff	___fltol@f1,?___fltol
  9351   002462  C030  F030         	movff	___fltol@f1+1,?___fltol+1
  9352   002466  C031  F031         	movff	___fltol@f1+2,?___fltol+2
  9353   00246A  C032  F032         	movff	___fltol@f1+3,?___fltol+3
  9354   00246E                     l886:
  9355   00246E  0012               	return		;funcret
  9356   002470                     __end_of___fltol:
  9357                           	callstack 0
  9358                           
  9359 ;; *************** function ___fldiv *****************
  9360 ;; Defined at:
  9361 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;  b               4   21[COMRAM] long 
  9364 ;;  a               4   25[COMRAM] long 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;  grs             4   40[COMRAM] unsigned long 
  9367 ;;  rem             4   33[COMRAM] unsigned long 
  9368 ;;  new_exp         2   38[COMRAM] short 
  9369 ;;  aexp            1   45[COMRAM] unsigned char 
  9370 ;;  bexp            1   44[COMRAM] unsigned char 
  9371 ;;  sign            1   37[COMRAM] unsigned char 
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  4   21[COMRAM] unsigned char 
  9374 ;; Registers used:
  9375 ;;		wreg, status,2, status,0
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9381 ;;      Params:         8       0       0       0       0       0       0
  9382 ;;      Locals:        13       0       0       0       0       0       0
  9383 ;;      Temps:          4       0       0       0       0       0       0
  9384 ;;      Totals:        25       0       0       0       0       0       0
  9385 ;;Total ram usage:       25 bytes
  9386 ;; Hardware stack levels used: 1
  9387 ;; Hardware stack levels required when called: 1
  9388 ;; This function calls:
  9389 ;;		Nothing
  9390 ;; This function is called by:
  9391 ;;		_main
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           	psect	text39
  9396   001D14                     __ptext39:
  9397                           	callstack 0
  9398   001D14                     ___fldiv:
  9399                           	callstack 29
  9400   001D14  5019               	movf	(___fldiv@b+3)^0,w,c
  9401   001D16  0B80               	andlw	128
  9402   001D18  6E26               	movwf	___fldiv@sign^0,c
  9403   001D1A  5019               	movf	(___fldiv@b+3)^0,w,c
  9404   001D1C  2419               	addwf	(___fldiv@b+3)^0,w,c
  9405   001D1E  6E2D               	movwf	___fldiv@bexp^0,c
  9406   001D20  AE18               	btfss	(___fldiv@b+2)^0,7,c
  9407   001D22  EF95  F00E         	goto	u2241
  9408   001D26  EF97  F00E         	goto	u2240
  9409   001D2A                     u2241:
  9410   001D2A  EF98  F00E         	goto	l3328
  9411   001D2E                     u2240:
  9412   001D2E  802D               	bsf	___fldiv@bexp^0,0,c
  9413   001D30                     l3328:
  9414   001D30  502D               	movf	___fldiv@bexp^0,w,c
  9415   001D32  B4D8               	btfsc	status,2,c
  9416   001D34  EF9E  F00E         	goto	u2251
  9417   001D38  EFA0  F00E         	goto	u2250
  9418   001D3C                     u2251:
  9419   001D3C  EFB5  F00E         	goto	l3338
  9420   001D40                     u2250:
  9421   001D40  282D               	incf	___fldiv@bexp^0,w,c
  9422   001D42  A4D8               	btfss	status,2,c
  9423   001D44  EFA6  F00E         	goto	u2261
  9424   001D48  EFA8  F00E         	goto	u2260
  9425   001D4C                     u2261:
  9426   001D4C  EFB0  F00E         	goto	l3334
  9427   001D50                     u2260:
  9428   001D50  0E00               	movlw	0
  9429   001D52  6E16               	movwf	___fldiv@b^0,c
  9430   001D54  0E00               	movlw	0
  9431   001D56  6E17               	movwf	(___fldiv@b+1)^0,c
  9432   001D58  0E00               	movlw	0
  9433   001D5A  6E18               	movwf	(___fldiv@b+2)^0,c
  9434   001D5C  0E00               	movlw	0
  9435   001D5E  6E19               	movwf	(___fldiv@b+3)^0,c
  9436   001D60                     l3334:
  9437   001D60  8E18               	bsf	(___fldiv@b+2)^0,7,c
  9438   001D62  0E00               	movlw	0
  9439   001D64  6E19               	movwf	(___fldiv@b+3)^0,c
  9440   001D66  EFBD  F00E         	goto	l3340
  9441   001D6A                     l3338:
  9442   001D6A  0E00               	movlw	0
  9443   001D6C  6E16               	movwf	___fldiv@b^0,c
  9444   001D6E  0E00               	movlw	0
  9445   001D70  6E17               	movwf	(___fldiv@b+1)^0,c
  9446   001D72  0E00               	movlw	0
  9447   001D74  6E18               	movwf	(___fldiv@b+2)^0,c
  9448   001D76  0E00               	movlw	0
  9449   001D78  6E19               	movwf	(___fldiv@b+3)^0,c
  9450   001D7A                     l3340:
  9451   001D7A  501D               	movf	(___fldiv@a+3)^0,w,c
  9452   001D7C  0B80               	andlw	128
  9453   001D7E  1A26               	xorwf	___fldiv@sign^0,f,c
  9454   001D80  501D               	movf	(___fldiv@a+3)^0,w,c
  9455   001D82  241D               	addwf	(___fldiv@a+3)^0,w,c
  9456   001D84  6E2E               	movwf	___fldiv@aexp^0,c
  9457   001D86  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  9458   001D88  EFC8  F00E         	goto	u2271
  9459   001D8C  EFCA  F00E         	goto	u2270
  9460   001D90                     u2271:
  9461   001D90  EFCB  F00E         	goto	l3348
  9462   001D94                     u2270:
  9463   001D94  802E               	bsf	___fldiv@aexp^0,0,c
  9464   001D96                     l3348:
  9465   001D96  502E               	movf	___fldiv@aexp^0,w,c
  9466   001D98  B4D8               	btfsc	status,2,c
  9467   001D9A  EFD1  F00E         	goto	u2281
  9468   001D9E  EFD3  F00E         	goto	u2280
  9469   001DA2                     u2281:
  9470   001DA2  EFE8  F00E         	goto	l3358
  9471   001DA6                     u2280:
  9472   001DA6  282E               	incf	___fldiv@aexp^0,w,c
  9473   001DA8  A4D8               	btfss	status,2,c
  9474   001DAA  EFD9  F00E         	goto	u2291
  9475   001DAE  EFDB  F00E         	goto	u2290
  9476   001DB2                     u2291:
  9477   001DB2  EFE3  F00E         	goto	l3354
  9478   001DB6                     u2290:
  9479   001DB6  0E00               	movlw	0
  9480   001DB8  6E1A               	movwf	___fldiv@a^0,c
  9481   001DBA  0E00               	movlw	0
  9482   001DBC  6E1B               	movwf	(___fldiv@a+1)^0,c
  9483   001DBE  0E00               	movlw	0
  9484   001DC0  6E1C               	movwf	(___fldiv@a+2)^0,c
  9485   001DC2  0E00               	movlw	0
  9486   001DC4  6E1D               	movwf	(___fldiv@a+3)^0,c
  9487   001DC6                     l3354:
  9488   001DC6  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  9489   001DC8  0E00               	movlw	0
  9490   001DCA  6E1D               	movwf	(___fldiv@a+3)^0,c
  9491   001DCC  EFF0  F00E         	goto	l3360
  9492   001DD0                     l3358:
  9493   001DD0  0E00               	movlw	0
  9494   001DD2  6E1A               	movwf	___fldiv@a^0,c
  9495   001DD4  0E00               	movlw	0
  9496   001DD6  6E1B               	movwf	(___fldiv@a+1)^0,c
  9497   001DD8  0E00               	movlw	0
  9498   001DDA  6E1C               	movwf	(___fldiv@a+2)^0,c
  9499   001DDC  0E00               	movlw	0
  9500   001DDE  6E1D               	movwf	(___fldiv@a+3)^0,c
  9501   001DE0                     l3360:
  9502   001DE0  501A               	movf	___fldiv@a^0,w,c
  9503   001DE2  101B               	iorwf	(___fldiv@a+1)^0,w,c
  9504   001DE4  101C               	iorwf	(___fldiv@a+2)^0,w,c
  9505   001DE6  101D               	iorwf	(___fldiv@a+3)^0,w,c
  9506   001DE8  A4D8               	btfss	status,2,c
  9507   001DEA  EFF9  F00E         	goto	u2301
  9508   001DEE  EFFB  F00E         	goto	u2300
  9509   001DF2                     u2301:
  9510   001DF2  EF13  F00F         	goto	l3372
  9511   001DF6                     u2300:
  9512   001DF6  0E00               	movlw	0
  9513   001DF8  6E16               	movwf	___fldiv@b^0,c
  9514   001DFA  0E00               	movlw	0
  9515   001DFC  6E17               	movwf	(___fldiv@b+1)^0,c
  9516   001DFE  0E00               	movlw	0
  9517   001E00  6E18               	movwf	(___fldiv@b+2)^0,c
  9518   001E02  0E00               	movlw	0
  9519   001E04  6E19               	movwf	(___fldiv@b+3)^0,c
  9520   001E06  0E80               	movlw	128
  9521   001E08  1218               	iorwf	(___fldiv@b+2)^0,f,c
  9522   001E0A  0E7F               	movlw	127
  9523   001E0C  1219               	iorwf	(___fldiv@b+3)^0,f,c
  9524   001E0E                     l3366:
  9525   001E0E  5026               	movf	___fldiv@sign^0,w,c
  9526   001E10  1219               	iorwf	(___fldiv@b+3)^0,f,c
  9527   001E12  C016  F016         	movff	___fldiv@b,?___fldiv
  9528   001E16  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  9529   001E1A  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  9530   001E1E  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  9531   001E22  EF56  F010         	goto	l1171
  9532   001E26                     l3372:
  9533   001E26  502D               	movf	___fldiv@bexp^0,w,c
  9534   001E28  A4D8               	btfss	status,2,c
  9535   001E2A  EF19  F00F         	goto	u2311
  9536   001E2E  EF1B  F00F         	goto	u2310
  9537   001E32                     u2311:
  9538   001E32  EF25  F00F         	goto	l3380
  9539   001E36                     u2310:
  9540   001E36  0E00               	movlw	0
  9541   001E38  6E16               	movwf	?___fldiv^0,c
  9542   001E3A  0E00               	movlw	0
  9543   001E3C  6E17               	movwf	(?___fldiv+1)^0,c
  9544   001E3E  0E00               	movlw	0
  9545   001E40  6E18               	movwf	(?___fldiv+2)^0,c
  9546   001E42  0E00               	movlw	0
  9547   001E44  6E19               	movwf	(?___fldiv+3)^0,c
  9548   001E46  EF56  F010         	goto	l1171
  9549   001E4A                     l3380:
  9550   001E4A  502E               	movf	___fldiv@aexp^0,w,c
  9551   001E4C  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  9552   001E50  6A1F               	clrf	(??___fldiv+1)^0,c
  9553   001E52  5E1E               	subwf	??___fldiv^0,f,c
  9554   001E54  0E00               	movlw	0
  9555   001E56  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  9556   001E58  0E7F               	movlw	127
  9557   001E5A  241E               	addwf	??___fldiv^0,w,c
  9558   001E5C  6E27               	movwf	___fldiv@new_exp^0,c
  9559   001E5E  0E00               	movlw	0
  9560   001E60  201F               	addwfc	(??___fldiv+1)^0,w,c
  9561   001E62  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  9562   001E64  C016  F022         	movff	___fldiv@b,___fldiv@rem
  9563   001E68  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  9564   001E6C  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  9565   001E70  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  9566   001E74  0E00               	movlw	0
  9567   001E76  6E16               	movwf	___fldiv@b^0,c
  9568   001E78  0E00               	movlw	0
  9569   001E7A  6E17               	movwf	(___fldiv@b+1)^0,c
  9570   001E7C  0E00               	movlw	0
  9571   001E7E  6E18               	movwf	(___fldiv@b+2)^0,c
  9572   001E80  0E00               	movlw	0
  9573   001E82  6E19               	movwf	(___fldiv@b+3)^0,c
  9574   001E84  0E00               	movlw	0
  9575   001E86  6E29               	movwf	___fldiv@grs^0,c
  9576   001E88  0E00               	movlw	0
  9577   001E8A  6E2A               	movwf	(___fldiv@grs+1)^0,c
  9578   001E8C  0E00               	movlw	0
  9579   001E8E  6E2B               	movwf	(___fldiv@grs+2)^0,c
  9580   001E90  0E00               	movlw	0
  9581   001E92  6E2C               	movwf	(___fldiv@grs+3)^0,c
  9582   001E94  0E00               	movlw	0
  9583   001E96  6E2E               	movwf	___fldiv@aexp^0,c
  9584   001E98  EF86  F00F         	goto	l1173
  9585   001E9C                     l3390:
  9586   001E9C  502E               	movf	___fldiv@aexp^0,w,c
  9587   001E9E  B4D8               	btfsc	status,2,c
  9588   001EA0  EF54  F00F         	goto	u2321
  9589   001EA4  EF56  F00F         	goto	u2320
  9590   001EA8                     u2321:
  9591   001EA8  EF6D  F00F         	goto	l3398
  9592   001EAC                     u2320:
  9593   001EAC  90D8               	bcf	status,0,c
  9594   001EAE  3622               	rlcf	___fldiv@rem^0,f,c
  9595   001EB0  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  9596   001EB2  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  9597   001EB4  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  9598   001EB6  90D8               	bcf	status,0,c
  9599   001EB8  3616               	rlcf	___fldiv@b^0,f,c
  9600   001EBA  3617               	rlcf	(___fldiv@b+1)^0,f,c
  9601   001EBC  3618               	rlcf	(___fldiv@b+2)^0,f,c
  9602   001EBE  3619               	rlcf	(___fldiv@b+3)^0,f,c
  9603   001EC0  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  9604   001EC2  EF65  F00F         	goto	u2331
  9605   001EC6  EF67  F00F         	goto	u2330
  9606   001ECA                     u2331:
  9607   001ECA  EF68  F00F         	goto	l1176
  9608   001ECE                     u2330:
  9609   001ECE  8016               	bsf	___fldiv@b^0,0,c
  9610   001ED0                     l1176:
  9611   001ED0  90D8               	bcf	status,0,c
  9612   001ED2  3629               	rlcf	___fldiv@grs^0,f,c
  9613   001ED4  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  9614   001ED6  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  9615   001ED8  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  9616   001EDA                     l3398:
  9617   001EDA  501A               	movf	___fldiv@a^0,w,c
  9618   001EDC  5C22               	subwf	___fldiv@rem^0,w,c
  9619   001EDE  501B               	movf	(___fldiv@a+1)^0,w,c
  9620   001EE0  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  9621   001EE2  501C               	movf	(___fldiv@a+2)^0,w,c
  9622   001EE4  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  9623   001EE6  501D               	movf	(___fldiv@a+3)^0,w,c
  9624   001EE8  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  9625   001EEA  A0D8               	btfss	status,0,c
  9626   001EEC  EF7A  F00F         	goto	u2341
  9627   001EF0  EF7C  F00F         	goto	u2340
  9628   001EF4                     u2341:
  9629   001EF4  EF85  F00F         	goto	l3404
  9630   001EF8                     u2340:
  9631   001EF8  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  9632   001EFA  501A               	movf	___fldiv@a^0,w,c
  9633   001EFC  5E22               	subwf	___fldiv@rem^0,f,c
  9634   001EFE  501B               	movf	(___fldiv@a+1)^0,w,c
  9635   001F00  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  9636   001F02  501C               	movf	(___fldiv@a+2)^0,w,c
  9637   001F04  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  9638   001F06  501D               	movf	(___fldiv@a+3)^0,w,c
  9639   001F08  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  9640   001F0A                     l3404:
  9641   001F0A  2A2E               	incf	___fldiv@aexp^0,f,c
  9642   001F0C                     l1173:
  9643   001F0C  0E19               	movlw	25
  9644   001F0E  642E               	cpfsgt	___fldiv@aexp^0,c
  9645   001F10  EF8C  F00F         	goto	u2351
  9646   001F14  EF8E  F00F         	goto	u2350
  9647   001F18                     u2351:
  9648   001F18  EF4E  F00F         	goto	l3390
  9649   001F1C                     u2350:
  9650   001F1C  5022               	movf	___fldiv@rem^0,w,c
  9651   001F1E  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  9652   001F20  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  9653   001F22  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  9654   001F24  B4D8               	btfsc	status,2,c
  9655   001F26  EF97  F00F         	goto	u2361
  9656   001F2A  EF99  F00F         	goto	u2360
  9657   001F2E                     u2361:
  9658   001F2E  EFB1  F00F         	goto	l3416
  9659   001F32                     u2360:
  9660   001F32  8029               	bsf	___fldiv@grs^0,0,c
  9661   001F34  EFB1  F00F         	goto	l3416
  9662   001F38                     l3410:
  9663   001F38  90D8               	bcf	status,0,c
  9664   001F3A  3616               	rlcf	___fldiv@b^0,f,c
  9665   001F3C  3617               	rlcf	(___fldiv@b+1)^0,f,c
  9666   001F3E  3618               	rlcf	(___fldiv@b+2)^0,f,c
  9667   001F40  3619               	rlcf	(___fldiv@b+3)^0,f,c
  9668   001F42  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  9669   001F44  EFA6  F00F         	goto	u2371
  9670   001F48  EFA8  F00F         	goto	u2370
  9671   001F4C                     u2371:
  9672   001F4C  EFA9  F00F         	goto	l1182
  9673   001F50                     u2370:
  9674   001F50  8016               	bsf	___fldiv@b^0,0,c
  9675   001F52                     l1182:
  9676   001F52  90D8               	bcf	status,0,c
  9677   001F54  3629               	rlcf	___fldiv@grs^0,f,c
  9678   001F56  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  9679   001F58  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  9680   001F5A  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  9681   001F5C  0627               	decf	___fldiv@new_exp^0,f,c
  9682   001F5E  A0D8               	btfss	status,0,c
  9683   001F60  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  9684   001F62                     l3416:
  9685   001F62  AE18               	btfss	(___fldiv@b+2)^0,7,c
  9686   001F64  EFB6  F00F         	goto	u2381
  9687   001F68  EFB8  F00F         	goto	u2380
  9688   001F6C                     u2381:
  9689   001F6C  EF9C  F00F         	goto	l3410
  9690   001F70                     u2380:
  9691   001F70  0E00               	movlw	0
  9692   001F72  6E2E               	movwf	___fldiv@aexp^0,c
  9693   001F74  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  9694   001F76  EFBF  F00F         	goto	u2391
  9695   001F7A  EFC1  F00F         	goto	u2390
  9696   001F7E                     u2391:
  9697   001F7E  EFE5  F00F         	goto	l1184
  9698   001F82                     u2390:
  9699   001F82  0EFF               	movlw	255
  9700   001F84  1429               	andwf	___fldiv@grs^0,w,c
  9701   001F86  6E1E               	movwf	??___fldiv^0,c
  9702   001F88  0EFF               	movlw	255
  9703   001F8A  142A               	andwf	(___fldiv@grs+1)^0,w,c
  9704   001F8C  6E1F               	movwf	(??___fldiv+1)^0,c
  9705   001F8E  0EFF               	movlw	255
  9706   001F90  142B               	andwf	(___fldiv@grs+2)^0,w,c
  9707   001F92  6E20               	movwf	(??___fldiv+2)^0,c
  9708   001F94  0E7F               	movlw	127
  9709   001F96  142C               	andwf	(___fldiv@grs+3)^0,w,c
  9710   001F98  6E21               	movwf	(??___fldiv+3)^0,c
  9711   001F9A  501E               	movf	??___fldiv^0,w,c
  9712   001F9C  101F               	iorwf	(??___fldiv+1)^0,w,c
  9713   001F9E  1020               	iorwf	(??___fldiv+2)^0,w,c
  9714   001FA0  1021               	iorwf	(??___fldiv+3)^0,w,c
  9715   001FA2  B4D8               	btfsc	status,2,c
  9716   001FA4  EFD6  F00F         	goto	u2401
  9717   001FA8  EFD8  F00F         	goto	u2400
  9718   001FAC                     u2401:
  9719   001FAC  EFDC  F00F         	goto	l1185
  9720   001FB0                     u2400:
  9721   001FB0                     l3424:
  9722   001FB0  0E01               	movlw	1
  9723   001FB2  6E2E               	movwf	___fldiv@aexp^0,c
  9724   001FB4  EFE5  F00F         	goto	l1184
  9725   001FB8                     l1185:
  9726   001FB8  A016               	btfss	___fldiv@b^0,0,c
  9727   001FBA  EFE1  F00F         	goto	u2411
  9728   001FBE  EFE3  F00F         	goto	u2410
  9729   001FC2                     u2411:
  9730   001FC2  EFE5  F00F         	goto	l1184
  9731   001FC6                     u2410:
  9732   001FC6  EFD8  F00F         	goto	l3424
  9733   001FCA                     l1184:
  9734   001FCA  502E               	movf	___fldiv@aexp^0,w,c
  9735   001FCC  B4D8               	btfsc	status,2,c
  9736   001FCE  EFEB  F00F         	goto	u2421
  9737   001FD2  EFED  F00F         	goto	u2420
  9738   001FD6                     u2421:
  9739   001FD6  EF11  F010         	goto	l3436
  9740   001FDA                     u2420:
  9741   001FDA  0E01               	movlw	1
  9742   001FDC  2616               	addwf	___fldiv@b^0,f,c
  9743   001FDE  0E00               	movlw	0
  9744   001FE0  2217               	addwfc	(___fldiv@b+1)^0,f,c
  9745   001FE2  2218               	addwfc	(___fldiv@b+2)^0,f,c
  9746   001FE4  2219               	addwfc	(___fldiv@b+3)^0,f,c
  9747   001FE6  A019               	btfss	(___fldiv@b+3)^0,0,c
  9748   001FE8  EFF8  F00F         	goto	u2431
  9749   001FEC  EFFA  F00F         	goto	u2430
  9750   001FF0                     u2431:
  9751   001FF0  EF11  F010         	goto	l3436
  9752   001FF4                     u2430:
  9753   001FF4  C016  F01E         	movff	___fldiv@b,??___fldiv
  9754   001FF8  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  9755   001FFC  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  9756   002000  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  9757   002004  3421               	rlcf	(??___fldiv+3)^0,w,c
  9758   002006  3221               	rrcf	(??___fldiv+3)^0,f,c
  9759   002008  3220               	rrcf	(??___fldiv+2)^0,f,c
  9760   00200A  321F               	rrcf	(??___fldiv+1)^0,f,c
  9761   00200C  321E               	rrcf	??___fldiv^0,f,c
  9762   00200E  C01E  F016         	movff	??___fldiv,___fldiv@b
  9763   002012  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  9764   002016  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  9765   00201A  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  9766   00201E  4A27               	infsnz	___fldiv@new_exp^0,f,c
  9767   002020  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  9768   002022                     l3436:
  9769   002022  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9770   002024  EF1C  F010         	goto	u2441
  9771   002028  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  9772   00202A  E108               	bnz	u2440
  9773   00202C  2827               	incf	___fldiv@new_exp^0,w,c
  9774   00202E  A0D8               	btfss	status,0,c
  9775   002030  EF1C  F010         	goto	u2441
  9776   002034  EF1E  F010         	goto	u2440
  9777   002038                     u2441:
  9778   002038  EF29  F010         	goto	l3440
  9779   00203C                     u2440:
  9780   00203C  0E00               	movlw	0
  9781   00203E  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  9782   002040  6827               	setf	___fldiv@new_exp^0,c
  9783   002042  0E00               	movlw	0
  9784   002044  6E16               	movwf	___fldiv@b^0,c
  9785   002046  0E00               	movlw	0
  9786   002048  6E17               	movwf	(___fldiv@b+1)^0,c
  9787   00204A  0E00               	movlw	0
  9788   00204C  6E18               	movwf	(___fldiv@b+2)^0,c
  9789   00204E  0E00               	movlw	0
  9790   002050  6E19               	movwf	(___fldiv@b+3)^0,c
  9791   002052                     l3440:
  9792   002052  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9793   002054  EF36  F010         	goto	u2450
  9794   002058  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  9795   00205A  E106               	bnz	u2451
  9796   00205C  0427               	decf	___fldiv@new_exp^0,w,c
  9797   00205E  B0D8               	btfsc	status,0,c
  9798   002060  EF34  F010         	goto	u2451
  9799   002064  EF36  F010         	goto	u2450
  9800   002068                     u2451:
  9801   002068  EF44  F010         	goto	l3444
  9802   00206C                     u2450:
  9803   00206C  0E00               	movlw	0
  9804   00206E  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  9805   002070  0E00               	movlw	0
  9806   002072  6E27               	movwf	___fldiv@new_exp^0,c
  9807   002074  0E00               	movlw	0
  9808   002076  6E16               	movwf	___fldiv@b^0,c
  9809   002078  0E00               	movlw	0
  9810   00207A  6E17               	movwf	(___fldiv@b+1)^0,c
  9811   00207C  0E00               	movlw	0
  9812   00207E  6E18               	movwf	(___fldiv@b+2)^0,c
  9813   002080  0E00               	movlw	0
  9814   002082  6E19               	movwf	(___fldiv@b+3)^0,c
  9815   002084  0E00               	movlw	0
  9816   002086  6E26               	movwf	___fldiv@sign^0,c
  9817   002088                     l3444:
  9818   002088  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  9819   00208C  A02D               	btfss	___fldiv@bexp^0,0,c
  9820   00208E  EF4B  F010         	goto	u2461
  9821   002092  EF4D  F010         	goto	u2460
  9822   002096                     u2461:
  9823   002096  EF50  F010         	goto	l3450
  9824   00209A                     u2460:
  9825   00209A  8E18               	bsf	(___fldiv@b+2)^0,7,c
  9826   00209C  EF51  F010         	goto	l3452
  9827   0020A0                     l3450:
  9828   0020A0  9E18               	bcf	(___fldiv@b+2)^0,7,c
  9829   0020A2                     l3452:
  9830   0020A2  90D8               	bcf	status,0,c
  9831   0020A4  302D               	rrcf	___fldiv@bexp^0,w,c
  9832   0020A6  6E19               	movwf	(___fldiv@b+3)^0,c
  9833   0020A8  EF07  F00F         	goto	l3366
  9834   0020AC                     l1171:
  9835   0020AC  0012               	return		;funcret
  9836   0020AE                     __end_of___fldiv:
  9837                           	callstack 0
  9838                           
  9839 ;; *************** function ___awmod *****************
  9840 ;; Defined at:
  9841 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;  dividend        2    8[COMRAM] int 
  9844 ;;  divisor         2   10[COMRAM] int 
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;  sign            1   13[COMRAM] unsigned char 
  9847 ;;  counter         1   12[COMRAM] unsigned char 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  2    8[COMRAM] int 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9857 ;;      Params:         4       0       0       0       0       0       0
  9858 ;;      Locals:         2       0       0       0       0       0       0
  9859 ;;      Temps:          0       0       0       0       0       0       0
  9860 ;;      Totals:         6       0       0       0       0       0       0
  9861 ;;Total ram usage:        6 bytes
  9862 ;; Hardware stack levels used: 1
  9863 ;; Hardware stack levels required when called: 1
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_main
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text40
  9872   002534                     __ptext40:
  9873                           	callstack 0
  9874   002534                     ___awmod:
  9875                           	callstack 29
  9876   002534  0E00               	movlw	0
  9877   002536  6E0E               	movwf	___awmod@sign^0,c
  9878   002538  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  9879   00253A  EFA3  F012         	goto	u2530
  9880   00253E  EFA1  F012         	goto	u2531
  9881   002542                     u2531:
  9882   002542  EFA9  F012         	goto	l3512
  9883   002546                     u2530:
  9884   002546  6C09               	negf	___awmod@dividend^0,c
  9885   002548  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  9886   00254A  B0D8               	btfsc	status,0,c
  9887   00254C  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  9888   00254E  0E01               	movlw	1
  9889   002550  6E0E               	movwf	___awmod@sign^0,c
  9890   002552                     l3512:
  9891   002552  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  9892   002554  EFB0  F012         	goto	u2540
  9893   002558  EFAE  F012         	goto	u2541
  9894   00255C                     u2541:
  9895   00255C  EFB4  F012         	goto	l3516
  9896   002560                     u2540:
  9897   002560  6C0B               	negf	___awmod@divisor^0,c
  9898   002562  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  9899   002564  B0D8               	btfsc	status,0,c
  9900   002566  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  9901   002568                     l3516:
  9902   002568  500B               	movf	___awmod@divisor^0,w,c
  9903   00256A  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  9904   00256C  B4D8               	btfsc	status,2,c
  9905   00256E  EFBB  F012         	goto	u2551
  9906   002572  EFBD  F012         	goto	u2550
  9907   002576                     u2551:
  9908   002576  EFE1  F012         	goto	l3532
  9909   00257A                     u2550:
  9910   00257A  0E01               	movlw	1
  9911   00257C  6E0D               	movwf	___awmod@counter^0,c
  9912   00257E  EFC5  F012         	goto	l3522
  9913   002582                     l3520:
  9914   002582  90D8               	bcf	status,0,c
  9915   002584  360B               	rlcf	___awmod@divisor^0,f,c
  9916   002586  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  9917   002588  2A0D               	incf	___awmod@counter^0,f,c
  9918   00258A                     l3522:
  9919   00258A  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  9920   00258C  EFCA  F012         	goto	u2561
  9921   002590  EFCC  F012         	goto	u2560
  9922   002594                     u2561:
  9923   002594  EFC1  F012         	goto	l3520
  9924   002598                     u2560:
  9925   002598                     l3524:
  9926   002598  500B               	movf	___awmod@divisor^0,w,c
  9927   00259A  5C09               	subwf	___awmod@dividend^0,w,c
  9928   00259C  500C               	movf	(___awmod@divisor+1)^0,w,c
  9929   00259E  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  9930   0025A0  A0D8               	btfss	status,0,c
  9931   0025A2  EFD5  F012         	goto	u2571
  9932   0025A6  EFD7  F012         	goto	u2570
  9933   0025AA                     u2571:
  9934   0025AA  EFDB  F012         	goto	l3528
  9935   0025AE                     u2570:
  9936   0025AE  500B               	movf	___awmod@divisor^0,w,c
  9937   0025B0  5E09               	subwf	___awmod@dividend^0,f,c
  9938   0025B2  500C               	movf	(___awmod@divisor+1)^0,w,c
  9939   0025B4  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  9940   0025B6                     l3528:
  9941   0025B6  90D8               	bcf	status,0,c
  9942   0025B8  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  9943   0025BA  320B               	rrcf	___awmod@divisor^0,f,c
  9944   0025BC  2E0D               	decfsz	___awmod@counter^0,f,c
  9945   0025BE  EFCC  F012         	goto	l3524
  9946   0025C2                     l3532:
  9947   0025C2  500E               	movf	___awmod@sign^0,w,c
  9948   0025C4  B4D8               	btfsc	status,2,c
  9949   0025C6  EFE7  F012         	goto	u2581
  9950   0025CA  EFE9  F012         	goto	u2580
  9951   0025CE                     u2581:
  9952   0025CE  EFED  F012         	goto	l3536
  9953   0025D2                     u2580:
  9954   0025D2  6C09               	negf	___awmod@dividend^0,c
  9955   0025D4  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  9956   0025D6  B0D8               	btfsc	status,0,c
  9957   0025D8  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  9958   0025DA                     l3536:
  9959   0025DA  C009  F009         	movff	___awmod@dividend,?___awmod
  9960   0025DE  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  9961   0025E2  0012               	return		;funcret
  9962   0025E4                     __end_of___awmod:
  9963                           	callstack 0
  9964                           
  9965 ;; *************** function ___awdiv *****************
  9966 ;; Defined at:
  9967 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  dividend        2    0[COMRAM] int 
  9970 ;;  divisor         2    2[COMRAM] int 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  quotient        2    6[COMRAM] int 
  9973 ;;  sign            1    5[COMRAM] unsigned char 
  9974 ;;  counter         1    4[COMRAM] unsigned char 
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  2    0[COMRAM] int 
  9977 ;; Registers used:
  9978 ;;		wreg, status,2, status,0
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9984 ;;      Params:         4       0       0       0       0       0       0
  9985 ;;      Locals:         4       0       0       0       0       0       0
  9986 ;;      Temps:          0       0       0       0       0       0       0
  9987 ;;      Totals:         8       0       0       0       0       0       0
  9988 ;;Total ram usage:        8 bytes
  9989 ;; Hardware stack levels used: 1
  9990 ;; Hardware stack levels required when called: 1
  9991 ;; This function calls:
  9992 ;;		Nothing
  9993 ;; This function is called by:
  9994 ;;		_main
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           	psect	text41
  9999   002470                     __ptext41:
 10000                           	callstack 0
 10001   002470                     ___awdiv:
 10002                           	callstack 29
 10003   002470  0E00               	movlw	0
 10004   002472  6E06               	movwf	___awdiv@sign^0,c
 10005   002474  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10006   002476  EF41  F012         	goto	u2470
 10007   00247A  EF3F  F012         	goto	u2471
 10008   00247E                     u2471:
 10009   00247E  EF47  F012         	goto	l3468
 10010   002482                     u2470:
 10011   002482  6C03               	negf	___awdiv@divisor^0,c
 10012   002484  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10013   002486  B0D8               	btfsc	status,0,c
 10014   002488  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10015   00248A  0E01               	movlw	1
 10016   00248C  6E06               	movwf	___awdiv@sign^0,c
 10017   00248E                     l3468:
 10018   00248E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10019   002490  EF4E  F012         	goto	u2480
 10020   002494  EF4C  F012         	goto	u2481
 10021   002498                     u2481:
 10022   002498  EF54  F012         	goto	l3474
 10023   00249C                     u2480:
 10024   00249C  6C01               	negf	___awdiv@dividend^0,c
 10025   00249E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10026   0024A0  B0D8               	btfsc	status,0,c
 10027   0024A2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10028   0024A4  0E01               	movlw	1
 10029   0024A6  1A06               	xorwf	___awdiv@sign^0,f,c
 10030   0024A8                     l3474:
 10031   0024A8  0E00               	movlw	0
 10032   0024AA  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10033   0024AC  0E00               	movlw	0
 10034   0024AE  6E07               	movwf	___awdiv@quotient^0,c
 10035   0024B0  5003               	movf	___awdiv@divisor^0,w,c
 10036   0024B2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10037   0024B4  B4D8               	btfsc	status,2,c
 10038   0024B6  EF5F  F012         	goto	u2491
 10039   0024BA  EF61  F012         	goto	u2490
 10040   0024BE                     u2491:
 10041   0024BE  EF89  F012         	goto	l3496
 10042   0024C2                     u2490:
 10043   0024C2  0E01               	movlw	1
 10044   0024C4  6E05               	movwf	___awdiv@counter^0,c
 10045   0024C6  EF69  F012         	goto	l3482
 10046   0024CA                     l3480:
 10047   0024CA  90D8               	bcf	status,0,c
 10048   0024CC  3603               	rlcf	___awdiv@divisor^0,f,c
 10049   0024CE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10050   0024D0  2A05               	incf	___awdiv@counter^0,f,c
 10051   0024D2                     l3482:
 10052   0024D2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10053   0024D4  EF6E  F012         	goto	u2501
 10054   0024D8  EF70  F012         	goto	u2500
 10055   0024DC                     u2501:
 10056   0024DC  EF65  F012         	goto	l3480
 10057   0024E0                     u2500:
 10058   0024E0                     l3484:
 10059   0024E0  90D8               	bcf	status,0,c
 10060   0024E2  3607               	rlcf	___awdiv@quotient^0,f,c
 10061   0024E4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10062   0024E6  5003               	movf	___awdiv@divisor^0,w,c
 10063   0024E8  5C01               	subwf	___awdiv@dividend^0,w,c
 10064   0024EA  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10065   0024EC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10066   0024EE  A0D8               	btfss	status,0,c
 10067   0024F0  EF7C  F012         	goto	u2511
 10068   0024F4  EF7E  F012         	goto	u2510
 10069   0024F8                     u2511:
 10070   0024F8  EF83  F012         	goto	l3492
 10071   0024FC                     u2510:
 10072   0024FC  5003               	movf	___awdiv@divisor^0,w,c
 10073   0024FE  5E01               	subwf	___awdiv@dividend^0,f,c
 10074   002500  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10075   002502  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10076   002504  8007               	bsf	___awdiv@quotient^0,0,c
 10077   002506                     l3492:
 10078   002506  90D8               	bcf	status,0,c
 10079   002508  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10080   00250A  3203               	rrcf	___awdiv@divisor^0,f,c
 10081   00250C  2E05               	decfsz	___awdiv@counter^0,f,c
 10082   00250E  EF70  F012         	goto	l3484
 10083   002512                     l3496:
 10084   002512  5006               	movf	___awdiv@sign^0,w,c
 10085   002514  B4D8               	btfsc	status,2,c
 10086   002516  EF8F  F012         	goto	u2521
 10087   00251A  EF91  F012         	goto	u2520
 10088   00251E                     u2521:
 10089   00251E  EF95  F012         	goto	l3500
 10090   002522                     u2520:
 10091   002522  6C07               	negf	___awdiv@quotient^0,c
 10092   002524  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10093   002526  B0D8               	btfsc	status,0,c
 10094   002528  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10095   00252A                     l3500:
 10096   00252A  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10097   00252E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10098   002532  0012               	return		;funcret
 10099   002534                     __end_of___awdiv:
 10100                           	callstack 0
 10101                           
 10102 ;; *************** function _isr *****************
 10103 ;; Defined at:
 10104 ;;		line 11 in file "isr.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;		None
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;		None
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1    wreg      void 
 10111 ;; Registers used:
 10112 ;;		wreg, status,2, status,0
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10118 ;;      Params:         0       0       0       0       0       0       0
 10119 ;;      Locals:         0       0       0       0       0       0       0
 10120 ;;      Temps:          0       0       0       0       0       0       0
 10121 ;;      Totals:         0       0       0       0       0       0       0
 10122 ;;Total ram usage:        0 bytes
 10123 ;; Hardware stack levels used: 1
 10124 ;; This function calls:
 10125 ;;		Nothing
 10126 ;; This function is called by:
 10127 ;;		Interrupt level 2
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	intcode
 10132   000008                     __pintcode:
 10133                           	callstack 0
 10134   000008                     _isr:
 10135                           	callstack 24
 10136                           
 10137                           ;incstack = 0
 10138   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10139   00000A  ED0D  F015         	call	int_func,f	;refresh shadow registers
 10140                           
 10141                           	psect	intcode_body
 10142   002A1A                     __pintcode_body:
 10143                           	callstack 24
 10144   002A1A                     int_func:
 10145                           	callstack 24
 10146   002A1A  0006               	pop		; remove dummy address from shadow register refresh
 10147   002A1C                     
 10148                           ;isr.c: 14:  static unsigned short count1;;isr.c: 16:  if (TMR0IF)
 10149   002A1C  A4F2               	btfss	4082,2,c	;volatile
 10150   002A1E  EF13  F015         	goto	i2u380_41
 10151   002A22  EF15  F015         	goto	i2u380_40
 10152   002A26                     i2u380_41:
 10153   002A26  EF32  F015         	goto	i2l412
 10154   002A2A                     i2u380_40:
 10155   002A2A                     
 10156                           ;isr.c: 17:  {;isr.c: 18:   TMR0 = TMR0 + 8;
 10157   002A2A  0E08               	movlw	8
 10158   002A2C  24D6               	addwf	214,w,c	;volatile
 10159   002A2E  6ED6               	movwf	214,c	;volatile
 10160   002A30  0E00               	movlw	0
 10161   002A32  20D7               	addwfc	215,w,c	;volatile
 10162   002A34  6ED7               	movwf	215,c	;volatile
 10163                           
 10164                           ;isr.c: 20:   if (count1++ == 20000)
 10165   002A36  4A4E               	infsnz	isr@count1^0,f,c
 10166   002A38  2A4F               	incf	(isr@count1+1)^0,f,c
 10167   002A3A  0E21               	movlw	33
 10168   002A3C  184E               	xorwf	isr@count1^0,w,c
 10169   002A3E  E107               	bnz	i2u381_41
 10170   002A40  0E4E               	movlw	78
 10171   002A42  184F               	xorwf	(isr@count1+1)^0,w,c
 10172   002A44  A4D8               	btfss	status,2,c
 10173   002A46  EF27  F015         	goto	i2u381_41
 10174   002A4A  EF29  F015         	goto	i2u381_40
 10175   002A4E                     i2u381_41:
 10176   002A4E  EF31  F015         	goto	i2l4508
 10177   002A52                     i2u381_40:
 10178   002A52                     
 10179                           ;isr.c: 21:   {;isr.c: 22:             count1 = 0;
 10180   002A52  0E00               	movlw	0
 10181   002A54  6E4F               	movwf	(isr@count1+1)^0,c
 10182   002A56  0E00               	movlw	0
 10183   002A58  6E4E               	movwf	isr@count1^0,c
 10184   002A5A                     
 10185                           ;isr.c: 23:             count--;
 10186   002A5A  0101               	movlb	1	; () banked
 10187   002A5C  07BA               	decf	_count& (0+255),f,b
 10188   002A5E  A0D8               	btfss	status,0,c
 10189   002A60  07BB               	decf	(_count+1)& (0+255),f,b
 10190   002A62                     i2l4508:
 10191                           
 10192                           ;isr.c: 25:   TMR0IF = 0;
 10193   002A62  94F2               	bcf	4082,2,c	;volatile
 10194   002A64                     i2l412:
 10195   002A64  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10196   002A66  0011               	retfie		f
 10197   002A68                     __end_of_isr:
 10198                           	callstack 0
 10199                           
 10200                           	psect	rparam
 10201   000000                     
 10202                           	psect	temp
 10203   00005D                     btemp:
 10204                           	callstack 0
 10205   00005D                     	ds	1
 10206   000000                     int$flags	set	btemp
 10207   000000                     wtemp8	set	btemp+1
 10208   000000                     ttemp5	set	btemp+1
 10209   000000                     ttemp6	set	btemp+4
 10210   000000                     ttemp7	set	btemp+8
 10211                           
 10212                           	psect	idloc
 10213                           
 10214                           ;Config register IDLOC0 @ 0x200000
 10215                           ;	unspecified, using default values
 10216   200000                     	org	2097152
 10217   200000  FF                 	db	255
 10218                           
 10219                           ;Config register IDLOC1 @ 0x200001
 10220                           ;	unspecified, using default values
 10221   200001                     	org	2097153
 10222   200001  FF                 	db	255
 10223                           
 10224                           ;Config register IDLOC2 @ 0x200002
 10225                           ;	unspecified, using default values
 10226   200002                     	org	2097154
 10227   200002  FF                 	db	255
 10228                           
 10229                           ;Config register IDLOC3 @ 0x200003
 10230                           ;	unspecified, using default values
 10231   200003                     	org	2097155
 10232   200003  FF                 	db	255
 10233                           
 10234                           ;Config register IDLOC4 @ 0x200004
 10235                           ;	unspecified, using default values
 10236   200004                     	org	2097156
 10237   200004  FF                 	db	255
 10238                           
 10239                           ;Config register IDLOC5 @ 0x200005
 10240                           ;	unspecified, using default values
 10241   200005                     	org	2097157
 10242   200005  FF                 	db	255
 10243                           
 10244                           ;Config register IDLOC6 @ 0x200006
 10245                           ;	unspecified, using default values
 10246   200006                     	org	2097158
 10247   200006  FF                 	db	255
 10248                           
 10249                           ;Config register IDLOC7 @ 0x200007
 10250                           ;	unspecified, using default values
 10251   200007                     	org	2097159
 10252   200007  FF                 	db	255
 10253                           
 10254                           	psect	config
 10255                           
 10256                           ; Padding undefined space
 10257   300000                     	org	3145728
 10258   300000  FF                 	db	255
 10259                           
 10260                           ;Config register CONFIG1H @ 0x300001
 10261                           ;	unspecified, using default values
 10262                           ;	Oscillator Selection bits
 10263                           ;	OSC = 0x7, unprogrammed default
 10264                           ;	Fail-Safe Clock Monitor Enable bit
 10265                           ;	FCMEN = 0x0, unprogrammed default
 10266                           ;	Internal/External Oscillator Switchover bit
 10267                           ;	IESO = 0x0, unprogrammed default
 10268   300001                     	org	3145729
 10269   300001  07                 	db	7
 10270                           
 10271                           ;Config register CONFIG2L @ 0x300002
 10272                           ;	unspecified, using default values
 10273                           ;	Power-up Timer Enable bit
 10274                           ;	PWRT = 0x1, unprogrammed default
 10275                           ;	Brown-out Reset Enable bits
 10276                           ;	BOREN = 0x3, unprogrammed default
 10277                           ;	Brown-out Reset Voltage bits
 10278                           ;	BORV = 0x3, unprogrammed default
 10279   300002                     	org	3145730
 10280   300002  1F                 	db	31
 10281                           
 10282                           ;Config register CONFIG2H @ 0x300003
 10283                           ;	unspecified, using default values
 10284                           ;	Watchdog Timer Enable bit
 10285                           ;	WDT = 0x1, unprogrammed default
 10286                           ;	Watchdog Timer Postscale Select bits
 10287                           ;	WDTPS = 0xF, unprogrammed default
 10288   300003                     	org	3145731
 10289   300003  1F                 	db	31
 10290                           
 10291                           ; Padding undefined space
 10292   300004                     	org	3145732
 10293   300004  FF                 	db	255
 10294                           
 10295                           ;Config register CONFIG3H @ 0x300005
 10296                           ;	unspecified, using default values
 10297                           ;	PORTB A/D Enable bit
 10298                           ;	PBADEN = 0x1, unprogrammed default
 10299                           ;	Low-Power Timer 1 Oscillator Enable bit
 10300                           ;	LPT1OSC = 0x0, unprogrammed default
 10301                           ;	MCLR Pin Enable bit
 10302                           ;	MCLRE = 0x1, unprogrammed default
 10303   300005                     	org	3145733
 10304   300005  82                 	db	130
 10305                           
 10306                           ;Config register CONFIG4L @ 0x300006
 10307                           ;	unspecified, using default values
 10308                           ;	Stack Full/Underflow Reset Enable bit
 10309                           ;	STVREN = 0x1, unprogrammed default
 10310                           ;	Single-Supply ICSP Enable bit
 10311                           ;	LVP = 0x1, unprogrammed default
 10312                           ;	Boot Block Size Select bit
 10313                           ;	BBSIZ = 0x0, unprogrammed default
 10314                           ;	Extended Instruction Set Enable bit
 10315                           ;	XINST = 0x0, unprogrammed default
 10316                           ;	Background Debugger Enable bit
 10317                           ;	DEBUG = 0x1, unprogrammed default
 10318   300006                     	org	3145734
 10319   300006  85                 	db	133
 10320                           
 10321                           ; Padding undefined space
 10322   300007                     	org	3145735
 10323   300007  FF                 	db	255
 10324                           
 10325                           ;Config register CONFIG5L @ 0x300008
 10326                           ;	unspecified, using default values
 10327                           ;	Code Protection bit
 10328                           ;	CP0 = 0x1, unprogrammed default
 10329                           ;	Code Protection bit
 10330                           ;	CP1 = 0x1, unprogrammed default
 10331                           ;	Code Protection bit
 10332                           ;	CP2 = 0x1, unprogrammed default
 10333                           ;	Code Protection bit
 10334                           ;	CP3 = 0x1, unprogrammed default
 10335   300008                     	org	3145736
 10336   300008  0F                 	db	15
 10337                           
 10338                           ;Config register CONFIG5H @ 0x300009
 10339                           ;	unspecified, using default values
 10340                           ;	Boot Block Code Protection bit
 10341                           ;	CPB = 0x1, unprogrammed default
 10342                           ;	Data EEPROM Code Protection bit
 10343                           ;	CPD = 0x1, unprogrammed default
 10344   300009                     	org	3145737
 10345   300009  C0                 	db	192
 10346                           
 10347                           ;Config register CONFIG6L @ 0x30000A
 10348                           ;	unspecified, using default values
 10349                           ;	Write Protection bit
 10350                           ;	WRT0 = 0x1, unprogrammed default
 10351                           ;	Write Protection bit
 10352                           ;	WRT1 = 0x1, unprogrammed default
 10353                           ;	Write Protection bit
 10354                           ;	WRT2 = 0x1, unprogrammed default
 10355                           ;	Write Protection bit
 10356                           ;	WRT3 = 0x1, unprogrammed default
 10357   30000A                     	org	3145738
 10358   30000A  0F                 	db	15
 10359                           
 10360                           ;Config register CONFIG6H @ 0x30000B
 10361                           ;	unspecified, using default values
 10362                           ;	Configuration Register Write Protection bit
 10363                           ;	WRTC = 0x1, unprogrammed default
 10364                           ;	Boot Block Write Protection bit
 10365                           ;	WRTB = 0x1, unprogrammed default
 10366                           ;	Data EEPROM Write Protection bit
 10367                           ;	WRTD = 0x1, unprogrammed default
 10368   30000B                     	org	3145739
 10369   30000B  E0                 	db	224
 10370                           
 10371                           ;Config register CONFIG7L @ 0x30000C
 10372                           ;	unspecified, using default values
 10373                           ;	Table Read Protection bit
 10374                           ;	EBTR0 = 0x1, unprogrammed default
 10375                           ;	Table Read Protection bit
 10376                           ;	EBTR1 = 0x1, unprogrammed default
 10377                           ;	Table Read Protection bit
 10378                           ;	EBTR2 = 0x1, unprogrammed default
 10379                           ;	Table Read Protection bit
 10380                           ;	EBTR3 = 0x1, unprogrammed default
 10381   30000C                     	org	3145740
 10382   30000C  0F                 	db	15
 10383                           
 10384                           ;Config register CONFIG7H @ 0x30000D
 10385                           ;	unspecified, using default values
 10386                           ;	Boot Block Table Read Protection bit
 10387                           ;	EBTRB = 0x1, unprogrammed default
 10388   30000D                     	org	3145741
 10389   30000D  40                 	db	64
 10390                           tosu	equ	0xFFF
 10391                           tosh	equ	0xFFE
 10392                           tosl	equ	0xFFD
 10393                           stkptr	equ	0xFFC
 10394                           pclatu	equ	0xFFB
 10395                           pclath	equ	0xFFA
 10396                           pcl	equ	0xFF9
 10397                           tblptru	equ	0xFF8
 10398                           tblptrh	equ	0xFF7
 10399                           tblptrl	equ	0xFF6
 10400                           tablat	equ	0xFF5
 10401                           prodh	equ	0xFF4
 10402                           prodl	equ	0xFF3
 10403                           indf0	equ	0xFEF
 10404                           postinc0	equ	0xFEE
 10405                           postdec0	equ	0xFED
 10406                           preinc0	equ	0xFEC
 10407                           plusw0	equ	0xFEB
 10408                           fsr0h	equ	0xFEA
 10409                           fsr0l	equ	0xFE9
 10410                           wreg	equ	0xFE8
 10411                           indf1	equ	0xFE7
 10412                           postinc1	equ	0xFE6
 10413                           postdec1	equ	0xFE5
 10414                           preinc1	equ	0xFE4
 10415                           plusw1	equ	0xFE3
 10416                           fsr1h	equ	0xFE2
 10417                           fsr1l	equ	0xFE1
 10418                           bsr	equ	0xFE0
 10419                           indf2	equ	0xFDF
 10420                           postinc2	equ	0xFDE
 10421                           postdec2	equ	0xFDD
 10422                           preinc2	equ	0xFDC
 10423                           plusw2	equ	0xFDB
 10424                           fsr2h	equ	0xFDA
 10425                           fsr2l	equ	0xFD9
 10426                           status	equ	0xFD8

Data Sizes:
    Strings     362
    Constant    0
    Data        151
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      92
    BANK0           160      0     100
    BANK1           256    176     247
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 100
		 -> ev(BANK1[36]), main@array(BANK1[10]), menu(BANK0[100]), STR_1(CODE[5]), 
		 -> STR_10(CODE[9]), STR_11(CODE[6]), STR_12(CODE[17]), STR_13(CODE[3]), 
		 -> STR_14(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), STR_17(CODE[17]), 
		 -> STR_18(CODE[17]), STR_19(CODE[18]), STR_2(CODE[10]), STR_20(CODE[20]), 
		 -> STR_21(CODE[20]), STR_25(CODE[16]), STR_26(CODE[17]), STR_27(CODE[17]), 
		 -> STR_28(CODE[18]), STR_29(CODE[21]), STR_3(CODE[5]), STR_30(CODE[17]), 
		 -> STR_31(CODE[17]), STR_32(CODE[17]), STR_33(CODE[13]), STR_4(CODE[4]), 
		 -> STR_5(CODE[17]), STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[13]), 
		 -> STR_9(CODE[17]), time(COMRAM[9]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_22(CODE[3]), STR_23(CODE[29]), STR_24(CODE[3]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> main@enter_password(BANK1[5]), main@enter_password1(BANK1[5]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> main@enter_password2(BANK1[5]), main@password(BANK1[5]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _write_ext_eeprom->_i2c_write
    _read_ext_eeprom->_i2c_write
    _puts->_putch
    _init_config->_init_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->___awmod
    _init_clcd->_clcd_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clcd_print->___wmul
    _clcd_putch->___awmod
    ___xxtofl->_read_adc
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    ___awmod->___awdiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               179   179      0   42213
                                             56 COMRAM     3     3      0
                                              0 BANK1    176   176      0
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _display_time
                           _get_time
                        _init_config
                          _init_uart
                              _putch
                               _puts
                           _read_adc
                        _read_ds1307
                    _read_ext_eeprom
               _read_internal_eeprom
                      _read_switches
                             _strcmp
                       _write_ds1307
                   _write_ext_eeprom
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_internal_eeprom                                2     1      1     348
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _write_ext_eeprom                                     4     3      1     393
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     416
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_internal_eeprom                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_ext_eeprom                                      2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 2     0      2     295
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2048
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     712
                                             16 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (1) _write_ds1307                                         2     1      1     598
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1336
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (1) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (3) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_time                                         0     0      0    6723
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    6723
                                              6 COMRAM     3     0      3
                             ___wmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    4876
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1336
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1121
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             46 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    5160
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2276
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___lwdiv
   ___lwmod
   ___wmul
   ___xxtofl
   _clcd_print
     ___wmul (ARG)
     _clcd_write (ARG)
   _clcd_putch
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     _clcd_write (ARG)
   _clcd_write
   _display_time
     _clcd_print
   _get_time
     _read_ds1307
       _i2c_read
         _i2c_no_ack
         _i2c_rx_mode
           _i2c_idle
       _i2c_rep_start
         _i2c_idle
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _init_i2c
     _init_matrix_keypad
     _init_timer0
   _init_uart
   _putch
   _puts
     _putch
   _read_adc
   _read_ds1307
   _read_ext_eeprom
     _i2c_read
     _i2c_rep_start
     _i2c_start
     _i2c_stop
     _i2c_write
   _read_internal_eeprom
   _read_switches
     _scan_key
   _strcmp
   _write_ds1307
   _write_ext_eeprom
     _i2c_start
     _i2c_stop
     _i2c_write
   _write_internal_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
BITBIGSFRll        281      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B0      F7       7       96.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      5C       1       97.9%
BITBIGSFRlhhhhh     19      0       0      17        0.0%
BITBIGSFRlhl         F      0       0      25        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRlhhhhh      B      0       0      18        0.0%
BITBIGSFRlhhlhh      8      0       0      20        0.0%
BITBIGSFRlhhlhh      7      0       0      19        0.0%
BITBIGSFRlhhlll      7      0       0      24        0.0%
BITBIGSFRlhhlll      4      0       0      22        0.0%
BITBIGSFRlhhlll      2      0       0      23        0.0%
BITBIGSFRlhhlhl      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B7      27        0.0%
DATA                 0      0     1B7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Dec 29 15:41:57 2023

                 ___fldiv@aexp 002E                   ___fldiv@bexp 002D                   ___fldiv@sign 0026  
               clcd_print@addr 0009                 clcd_print@data 0007                             l72 278E  
                           l67 2D9E                             l75 2CFE                             _GO 7E11  
                           l99 02A8                   ___awdiv@sign 0006                             _ev 01BC  
                           _pq 005A            ___wmul@multiplicand 0003             _init_matrix_keypad 2D6C  
            write_ext_eeprom@i 0003                            l111 04B6                            l107 0396  
                          l300 2CC4                            l303 2A80                            l137 09E8  
                          l306 2AAC                            l330 22D2                            l322 227C  
                          l331 230E                            l323 2368                            l340 2366  
                          l332 22E6                            l324 22B8                            l501 2C7E  
                          l341 2352                            l325 2290                            l157 0BB2  
                          l254 2B66                            l334 22FA                            l255 2B6A  
                          l319 2D7C                            l327 22A4                            l264 2950  
                          l352 2804                            l337 232A                            l258 268A  
                          l194 177C                            l267 2D16                            l339 233E  
                          l460 2D1A                            l380 2D6A                            l541 2D8C  
                          l542 2D8E                            l374 2BF0                            l463 2D2C  
                          l552 2DBE                            l536 2D58                            l376 2BFE  
                          l561 2DD6                            l457 2C54                            l377 2C00  
                          l539 2D7E                            l555 2DCE                            l820 2532  
                          l564 2DDC                            l549 2DC6                            l397 2D42  
                          l469 2BA0                            l558 2DAA                            l567 2DB6  
                          l495 2AF0                            l583 2B30                            l833 25E2  
                          l498 2CE2                            l586 2C2A                            l589 2CA4  
                          _CKE 7E3E                            l886 246E                            _GIE 7F97  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                          _RD7 7C1F                            _PEN 7E2A                            _SEN 7E28  
                          _PSA 7EAB                            _RX9 7D5E                            _SMP 7E3F  
                          _TX9 7D66                  ?_display_time 0001                            _WUE 7DC1  
                          _isr 0008                 clcd_putch@addr 000F                 clcd_putch@data 0010  
                 ___awmod@sign 000E                            wreg 0FE8                    main@address 01EF  
          ?_init_matrix_keypad 0001                    main@eevent1 0146                    main@eevent2 0147  
                  main@eevent3 0148                    main@eevent4 0149                    main@eevent5 014A  
                  main@eevent6 014B                    main@eevent7 014C                    main@eevent8 014D  
                  main@eevent9 014E                   ___fltol@exp1 0038                           l1080 2870  
                         l3000 25F0                           l1090 2A10                           l3010 262C  
                         l3002 2600                           l1171 20AC                           l1251 219C  
                         l1244 2104                           l3020 2658                           l3012 2636  
                         l3004 260A                           l3100 22B2                           l1173 1F0C  
                         l1182 1F52                           l3030 2CA6                           l3022 2660  
                         l3014 263C                           l3006 261A                           l3110 22E0  
                         l1087 2878                           l1247 2260                           l1184 1FCA  
                         l1176 1ED0                           l3032 2CBA                           l3024 266A  
                         l3016 2646                           l3008 2624                           l3040 2D76  
                         l3104 22CC                           l3200 2BDC                           l4000 0A78  
                         l1185 1FB8                           l1097 2A18                           l1258 21F8  
                         l3034 2CC2                           l3026 2678                           l3018 264E  
                         l3050 2D44                           l3042 2D2E                           l3122 2308  
                         l3210 2BE8                           l3202 2BDE                           l4010 0ACC  
                         l4002 0A80                           l3028 2682                           l3060 2D56  
                         l3052 2D48                           l3036 2D6C                           l3044 2D36  
                         l3300 2B84                           l3132 2338                           l3116 22F4  
                         l3220 27A8                           l1268 28E4                           l3212 2BEC  
                         l3204 2BE0                           l4100 0EBC                           l4020 0B40  
                         l4004 0A94                           l4012 0AD2                           l3070 2AD2  
                         l3062 2AAE                           l3054 2D50                           l3038 2D74  
                         l3046 2D3E                           l3126 2324                           l3222 27B8  
                         l3230 27D2                           l3310 2B0A                           l3302 2AF4  
                         l3214 2BEE                           l3206 2BE2                           l4110 0EF4  
                         l4102 0EC6                           l4030 0B72                           l4022 0B44  
                         l4014 0AE6                           l4006 0AA6                           l3400 1EF8  
                         l3152 2D90                           l3160 274C                           l3072 2ADC  
                         l3064 2AB6                           l3056 2D52                           l3048 2D40  
                         l3144 2360                           l3080 2262                           l3232 27E2  
                         l3240 2802                           l3224 27C8                           l3216 2792  
                         l3312 2B0E                           l3304 2AF8                           l3208 2BE4  
                         l4200 10D8                           l4120 0F38                           l4112 0F00  
                         l4104 0ED2                           l4040 0BD2                           l4032 0B8A  
                         l4024 0B54                           l4016 0B0A                           l4008 0AB2  
                         l3410 1F38                           l3402 1EFA                           l3330 1D40  
                         l3322 1D14                           l3170 278A                           l3162 275E  
                         l3154 2710                           l3074 2AE4                           l3066 2AC2  
                         l3058 2D54                           l3250 2AA4                           l3138 234C  
                         l3082 2276                           l3218 27A2                           l3234 27EA  
                         l3314 2B16                           l3306 2AFE                           l4210 1132  
                         l4202 10F4                           l4130 0F6A                           l4122 0F3E  
                         l4114 0F0A                           l4106 0EDE                           l4050 0C58  
                         l4042 0BEC                           l4034 0B92                           l4026 0B66  
                         l4018 0B1C                           l3500 252A                           l3420 1F74  
                         l3412 1F42                           l3404 1F0A                           l3340 1D7A  
                         l3332 1D50                           l3324 1D20                           l3316 2C80  
                         l3164 2762                           l3156 2728                           l3068 2AC8  
                         l3180 2CFA                           l3172 2CE4                           l3076 2D1A  
                         l3244 2A6A                           l3148 2366                           l3236 27FA  
                         l3260 2886                           l3308 2B04                           l4300 1476  
                         l4212 1138                           l4220 1160                           l4204 10FC  
                         l4140 0F80                           l4132 0F70                           l4124 0F46  
                         l4116 0F16                           l4108 0EE8                           l4060 0CAE  
                         l4052 0C60                           l4044 0BF4                           l4036 0BA6  
                         l4028 0B6A                           l3510 254E                           l3430 1FE6  
                         l3422 1F82                           l3414 1F50                           l3406 1F1C  
                         l3350 1DA6                           l3342 1D80                           l3334 1D60  
                         l3326 1D2E                           l3318 2C9C                           l3254 2D02  
                         l3166 276C                           l3158 2736                           l3174 2CE8  
                         l3078 2D28                           l3246 2A7E                           l3190 2C18  
                         l3182 2C04                           l3270 2D60                           l3094 229E  
                         l3262 28A8                           l4310 14F2                           l4302 148A  
                         l4230 11BE                           l4222 1170                           l4214 114C  
                         l4150 0F94                           l4142 0F84                           l4134 0F74  
                         l4126 0F4A                           l4118 0F26                           l4070 0D42  
                         l4062 0CC8                           l4054 0C7A                           l4046 0C08  
                         l4038 0BB6                           l3520 2582                           l3512 2552  
                         l3504 2534                           l3440 2052                           l3432 1FF4  
                         l3424 1FB0                           l3408 1F32                           l3416 1F62  
                         l3360 1DE0                           l3352 1DB6                           l3344 1D86  
                         l3336 1D62                           l3328 1D30                           l3600 2862  
                         l3168 2774                           l3176 2CEC                           l3248 2A8E  
                         l3192 2C24                           l3184 2C08                           l3272 2D62  
                         l3088 228A                           l3264 28C0                           l3256 287A  
                         l4400 199A                           l4320 155C                           l4312 150A  
                         l4304 149A                           l4240 1374                           l4232 11CA  
                         l4224 1178                           l4216 1158                           l4208 111C  
                         l4160 0FD8                           l4152 0F9C                           l4144 0F88  
                         l4136 0F78                           l4128 0F5A                           l4080 0E0A  
                         l4072 0D6A                           l4048 0C18                           l4064 0CCE  
                         l3530 25BC                           l3522 258A                           l3514 2560  
                         l3506 2538                           l3450 20A0                           l3442 206C  
                         l3434 201E                           l3418 1F70                           l3362 1DF6  
                         l3354 1DC6                           l3346 1D94                           l3338 1D6A  
                         l3602 2864                           l3610 29D0                           l3178 2CF4  
                         l3290 2C50                           l3282 2C2C                           l3186 2C0E  
                         l3274 2D64                           l3258 287E                           l4410 19F8  
                         l4402 19AE                           l4330 1612                           l4322 157E  
                         l4314 152A                           l4306 14BA                           l4250 1394  
                         l4242 137A                           l4234 11D8                           l4226 1198  
                         l4170 101C                           l4162 0FEC                           l4146 0F8C  
                         l4138 0F7C                           l4090 0E82                           l4082 0E32  
                         l4074 0D92                           l4066 0CF4                           l4058 0C9A  
                         l3460 2470                           l3524 2598                           l3532 25C2  
                         l3516 2568                           l3508 2546                           l3452 20A2  
                         l3444 2088                           l3428 1FDA                           l3436 2022  
                         l3380 1E4A                           l3364 1E06                           l3372 1E26  
                         l3356 1DC8                           l3348 1D96                           l3540 236A  
                         l3604 286A                           l3620 2A0A                           l3612 29D8  
                         l3292 2C52                           l3284 2C48                           l3188 2C14  
                         l3276 2D66                           l3268 2D5C                           l3196 2BD4  
                         l4420 1A52                           l4412 19FC                           l4404 19C0  
                         l4340 16D8                           l4332 1632                           l4316 1532  
                         l4308 14D2                           l4324 15A0                           l4260 13B8  
                         l4252 139C                           l4244 1380                           l4236 1364  
                         l4228 11B4                           l4180 108E                           l4172 104C  
                         l4164 0FF8                           l4156 0FBC                           l4148 0F90  
                         l4092 0E8E                           l4084 0E5A                           l4076 0DBA  
                         l4068 0D1A                           l3700 0128                           l3470 249C  
                         l3462 2474                           l3534 25D2                           l3526 25AE  
                         l3518 257A                           l3446 208C                           l3438 203C  
                         l3390 1E9C                           l3382 1E64                           l3374 1E36  
                         l3366 1E0E                           l3358 1DD0                           l3550 23C0  
                         l3542 2380                           l3614 29E6                           l3606 29B6  
                         l3630 212A                           l3622 20B0                           l3286 2C4C  
                         l3294 2B6C                           l3278 2D68                           l3198 2BD8  
                         l4430 1AAE                           l4422 1A6E                           l4414 1A1C  
                         l4406 19C4                           l4350 1740                           l4342 16EA  
                         l4334 1652                           l4326 15C8                           l4318 153A  
                         l4270 13DA                           l4262 13C0                           l4254 13A2  
                         l4246 1386                           l4238 136A                           l4190 10AA  
                         l4182 109A                           l4174 1050                           l4158 0FD2  
                         l4094 0E9A                           l4086 0E6A                           l4078 0DE2  
                         l3710 014E                           l3480 24CA                           l3472 24A4  
                         l3464 2482                           l3536 25DA                           l3528 25B6  
                         l3448 209A                           l3392 1EAC                           l3384 1E74  
                         l3376 1E36                           l3368 1E12                           l3552 23D0  
                         l3616 29FC                           l3608 29C8                           l3640 2184  
                         l3624 20C0                           l2912 2D7E                           l2920 2DC0  
                         l3288 2C4E                           l3296 2B70                           l4432 1ABA  
                         l4424 1A7E                           l4416 1A2E                           l4408 19E4  
                         l4360 179E                           l4344 1702                           l4352 1758  
                         l4328 1608                           l4336 16A0                           l4280 13FC  
                         l4272 13E0                           l4264 13C8                           l4256 13AA  
                         l4248 138C                           l4192 10AE                           l4184 109E  
                         l4176 1060                           l4168 1000                           l4096 0EA4  
                         l4088 0E78                           l3800 02FA                           l3720 0176  
                         l3712 0156                           l3704 0132                           l3490 2504  
                         l3482 24D2                           l3474 24A8                           l3466 248A  
                         l3394 1EC0                           l3386 1E84                           l3562 23FA  
                         l3554 23D4                           l3546 2394                           l3618 2A04  
                         l3650 21E8                           l3642 2186                           l3634 213E  
                         l3626 20CE                           l2914 2DD0                           l2922 2DC2  
                         l2930 2DBA                           l3298 2B80                           l4450 1B46  
                         l4442 1AF8                           l4434 1AC4                           l4426 1A88  
                         l4418 1A32                           l4370 17DE                           l4362 17A2  
                         l4354 1770                           l4346 1716                           l4338 16BC  
                         l4290 1424                           l4282 1402                           l4274 13E8  
                         l4266 13CE                           l4258 13B2                           l4194 10B2  
                         l4186 10A2                           l4178 1070                           l4098 0EB0  
                         l3810 0352                           l3802 0306                           l3730 019E  
                         l3722 017E                           l3714 015E                           l3706 013A  
                         l3492 2506                           l3484 24E0                           l3476 24B0  
                         l3468 248E                           l3396 1ECE                           l3388 1E94  
                         l3580 245E                           l3572 2422                           l3564 2404  
                         l3556 23E2                           l3548 23BE                           l3660 2240  
                         l3652 2206                           l3644 2192                           l3636 2146  
                         l3628 2114                           l2916 2DD2                           l2932 2DC8  
                         l2924 2DA2                           l4460 1B8C                           l4452 1B50  
                         l4444 1B0C                           l4436 1AD8                           l4428 1A9E  
                         l4380 18CA                           l4372 1898                           l4364 17AA  
                         l4348 172E                           l4356 177C                           l4284 1408  
                         l4276 13F0                           l4268 13D4                           l4292 142A  
                         l4196 10B8                           l4188 10A6                           l3900 06E8  
                         l3820 03AE                           l3812 036E                           l3804 031A  
                         l3740 01DE                           l3732 01A6                           l3724 0186  
                         l3716 0166                           l3708 0146                           l3494 250C  
                         l3486 24E6                           l3478 24C2                           l3398 1EDA  
                         l3574 242E                           l3566 240E                           l3590 2828  
                         l3662 224E                           l3654 2208                           l3646 21CE  
                         l3638 2152                           l2918 2DD8                           l2934 2DCA  
                         l2926 2DA6                           l2950 2C6C                           l2942 2C58  
                         l4470 1BD4                           l4462 1BA0                           l4454 1B66  
                         l4438 1AE8                           l4446 1B1A                           l4382 18DA  
                         l4374 18A2                           l4366 17C2                           l4390 1932  
                         l4358 178C                           l4294 1448                           l4286 1410  
                         l4278 13F6                           l4198 10BC                           l3910 0742  
                         l3902 06FC                           l3830 0452                           l3822 03C6  
                         l3814 0378                           l3806 0336                           l3750 0206  
                         l3742 01E6                           l3734 01C6                           l3726 018E  
                         l3718 016E                           l3670 0016                           l3488 24FC  
                         l3496 2512                           l3576 243E                           l3592 2830  
                         l3584 2806                           l3664 2250                           l3656 220C  
                         l3648 21DA                           l2960 2B4A                           l2936 2DAC  
                         l2928 2DB8                           l2952 2C78                           l2944 2C5C  
                         l4544 1CCA                           l4480 1C3C                           l4464 1BB0  
                         l4456 1B76                           l4448 1B36                           l4472 1BE2  
                         l4392 1948                           l4384 18F6                           l4376 18AC  
                         l4368 17CA                           l4296 145C                           l4288 1418  
                         l3920 079E                           l3912 0758                           l3904 070C  
                         l3840 04A2                           l3824 0412                           l3816 038A  
                         l3808 033E                           l3760 021E                           l3752 020E  
                         l3744 01EE                           l3736 01CE                           l3728 0196  
                         l3680 005C                           l3672 0020                           l3498 2522  
                         l3578 244E                           l3594 283E                           l3586 280E  
                         l3658 2230                           l2970 2B54                           l2962 2B4C  
                         l2938 2DB4                           l2946 2C62                           l4482 1C46  
                         l4474 1C08                           l4458 1B82                           l4394 195A  
                         l4378 18BC                           l4386 190A                           l4298 146C  
                         l3922 07AC                           l3914 0776                           l3930 07EE  
                         l3850 04CA                           l3842 04AE                           l3834 0472  
                         l3826 042E                           l3818 0396                           l3770 0234  
                         l3762 0222                           l3754 0212                           l3746 01F6  
                         l3738 01D6                           l3690 00D8                           l3682 006C  
                         l3674 0032                           l3596 2844                           l3588 2820  
                         l2972 2B56                           l2964 2B4E                           l2956 2B34  
                         l2948 2C68                           l2980 2CD2                           l4476 1C28  
                         l4484 1C54                           l4468 1BC0                           l4396 1962  
                         l4388 191E                           l3940 086A                           l3932 07F6  
                         l3924 07CA                           l3916 077E                           l3908 071C  
                         l3860 057A                           l3852 04F2                           l4492 1CB4  
                         l3836 0488                           l3828 044A                           l3780 0264  
                         l3772 0238                           l3764 0226                           l3756 0216  
                         l3748 01FE                           l3692 00E8                           l3676 0042  
                         l3668 0012                           l3598 285A                           l2974 2B58  
                         l2966 2B50                           l2958 2B46                           l2990 291C  
                         l2982 2CD8                           l4486 1C74                           l4478 1C32  
                         l4398 1976                           l3950 08BA                           l3942 0886  
                         l3934 0806                           l3926 07D0                           l3918 078E  
                         l3870 0602                           l3862 0592                           l3854 0502  
                         l3846 04C2                           l3838 048E                           l3782 027A  
                         l3774 023C                           l3766 022A                           l3758 021A  
                         l3694 00F2                           l3686 008E                           l3678 0054  
                         l2968 2B52                           l2992 2920                           l2984 2CDE  
                         l2976 2CC8                           l4488 1C90                           l3960 0902  
                         l3952 08BC                           l3944 08A6                           l3936 0816  
                         l3928 07E0                           l3880 0658                           l3872 0616  
                         l3864 05D2                           l3856 0512                           l3848 04C6  
                         l3784 0280                           l3792 02A8                           l3776 0244  
                         l3768 0230                           l3688 00B8                           l2986 28E6  
                         l2994 25E4                           l2978 2CCC                           l3970 0962  
                         l3962 0934                           l3954 08D0                           l3946 08B6  
                         l3938 0836                           l3890 069C                           l3882 0662  
                         l3874 0632                           l3866 05DC                           l3858 0522  
                         l3794 02BC                           l3786 0294                           l3698 0112  
                         l2988 28F4                           l2996 25E8                           l3980 09BE  
                         l3972 097A                           l3964 0944                           l3956 08D6  
                         l3948 08B8                           l3892 06AC                           l3884 066C  
                         l3876 063E                           l3868 05F2                           l3796 02D2  
                         l3788 02A0                           l2998 25EE                           l3990 0A22  
                         l3982 09D2                           l3974 0982                           l3966 0956  
                         l3958 08EE                           l3894 06C2                           l3886 0676  
                         l3878 0650                           l3798 02E6                           l3992 0A2A  
                         l3984 09DA                           l3976 0996                           l3968 095A  
                         l3896 06D2                           l3888 0680                           _ADFM 7E07  
                         l3994 0A3E                           l3978 09A0                           l3986 09EC  
                         l3898 06DE                           l3996 0A50                           l3988 0A08  
                         ?_isr 0001                           l3998 0A5C                           _ADON 7E10  
                  main@event10 0145                           STR_1 2FEE                           STR_2 2FD5  
                         STR_3 2FF3                           STR_4 2FF8                           STR_5 2F01  
                         STR_6 2F56                           STR_7 2F45                           STR_8 2FC8  
                         STR_9 2F9A                    main@attempt 016B                           _BRGH 7D62  
                         _CREN 7D5C                           _T0CS 7EAD                           u2000 2276  
                         u2001 2272                           u2010 228A                           u2011 2286  
                         u2100 234C                           u2020 229E                           u2101 2348  
                         u2021 229A                           u2110 2360                           u2030 22B2  
                         u2111 235C                           u2031 22AE                           u2120 2736  
                         u2040 22CC                           u2200 28A8                           u3000 046E  
                         u2121 2732                           u2041 22C8                           u2201 28A4  
                         u3001 046A                           u2050 22E0                           u2210 28C0  
                         u2130 2BFE                           u3010 04A2                           u2051 22DC  
                         u2211 28BC                           u2131 2BFA                           u3011 049E  
                         u2300 1DF6                           u2220 2BA0                           u2060 22F4  
                         u2140 27A2                           u3100 0776                           u3020 0592  
                         u2301 1DF2                           u2221 2B9C                           u2061 22F0  
                         u2141 279E                           u3101 0772                           u3021 058E  
                         u2310 1E36                           u2070 2308                           u2150 27B8  
                         u2230 2B30                           u3110 07CA                           u3030 05F2  
                         u2311 1E32                           u2071 2304                           u2151 27B4  
                         u2231 2B2C                           u3111 07C6                           u3031 05EE  
                         u2400 1FB0                           u2320 1EAC                           u2240 1D2E  
                         u2080 2324                           u2160 27C8                           u3200 0A50  
                         u3120 08D0                           u3040 0632                           u2401 1FAC  
                         u2321 1EA8                           u2241 1D2A                           u2081 2320  
                         u2161 27C4                           u3201 0A4C                           u3121 08CC  
                         u3041 062E                           u2410 1FC6                           u2330 1ECE  
                         u2250 1D40                           u2090 2338                           u2170 27E2  
                         u3210 0A78                           u3130 0956                           u3050 0650  
                         u2411 1FC2                           u2331 1ECA                           u2251 1D3C  
                         u2091 2334                           u2171 27DE                           u3211 0A74  
                         u3131 0952                           u3051 064C                           u2500 24E0  
                         u2420 1FDA                           u2340 1EF8                           u2260 1D50  
                         u2180 27FA                           u3300 0BD2                           u3220 0A94  
                         u3140 097A                           u3060 069C                           u2501 24DC  
                         u2421 1FD6                           u2341 1EF4                           u2261 1D4C  
                         u2181 27F6                           u3301 0BCE                           u3221 0A90  
                         u3141 0976                           u3061 0698                           u2510 24FC  
                         u2430 1FF4                           u2350 1F1C                           u2270 1D94  
                         u2190 2A8E                           u3310 0BEC                           u3230 0AA6  
                         u3150 0996                           u3070 06C2                           u2511 24F8  
                         u2431 1FF0                           u2351 1F18                           u2271 1D90  
                         u2191 2A8A                           u3311 0BE8                           u3231 0AA2  
                         u3151 0992                           u3071 06BE                           u2520 2522  
                         u2440 203C                           u2360 1F32                           u2280 1DA6  
                         u2600 23B4                           u3400 0FEC                           u3320 0C08  
                         u3240 0ACC                           u3160 09D2                           u3080 06FC  
                         u2521 251E                           u2441 2038                           u2361 1F2E  
                         u2281 1DA2                           u3401 0FE8                           u3321 0C04  
                         u3241 0AC8                           u3161 09CE                           u3081 06F8  
                         u2530 2546                           u2450 206C                           u2370 1F50  
                         u2290 1DB6                           u2610 23E2                           u3410 101C  
                         u3330 0C18                           u3250 0AE6                           u3170 0A08  
                         u3090 0742                           u2531 2542                           u2451 2068  
                         u2371 1F4C                           u2291 1DB2                           u2611 23DE  
                         u3411 1018                           u3331 0C14                           u3251 0AE2  
                         u3171 0A04                           u3091 073E                           u2540 2560  
                         u2460 209A                           u2380 1F70                           u2620 23F6  
                         u2700 29E6                           u3420 108E                           u3340 0C58  
                         u3260 0B1C                           u3180 0A22                           u2541 255C  
                         u2461 2096                           u2381 1F6C                           u2621 23F2  
                         u2605 23AA                           u2701 29E2                           u3421 108A  
                         u3341 0C54                           u3261 0B18                           u3181 0A1E  
                         u2470 2482                           u2550 257A                           u2390 1F82  
                         u2630 241E                           u2710 29FC                           u3510 15C8  
                         u3430 1118                           u3350 0C96                           u3270 0B66  
                         u3190 0A3E                           u2471 247E                           u2551 2576  
                         u2391 1F7E                           u2631 241A                           u2711 29F8  
                         u3511 15C4                           u3431 1114                           u3351 0C92  
                         u3271 0B62                           u3191 0A3A                           u2480 249C  
                         u2560 2598                           u2640 243E                           u2800 2240  
                         u2720 20C0                           u1920 2D8C                           u3600 17DE  
                         u3520 16BC                           u3440 114C                           u3360 0CAE  
                         u3280 0B8A                           u2481 2498                           u2561 2594  
                         u2641 243A                           u2801 223C                           u2721 20BC  
                         u1921 2D88                           u3601 17DA                           u3521 16B8  
                         u3505 1516                           u3441 1148                           u3361 0CAA  
                         u3281 0B86                           u2490 24C2                           u2570 25AE  
                         u2650 244E                           u2810 224E                           u2730 20CE  
                         u1930 2B44                           u3610 18F6                           u3530 16D8  
                         u3450 1170                           u3370 0CC8                           u3290 0BA6  
                         u2491 24BE                           u2571 25AA                           u2651 244A  
                         u2811 224A                           u2731 20CA                           u1931 2B3E  
                         u3611 18F2                           u3531 16D4                           u3451 116C  
                         u3371 0CC4                           u3291 0BA2                           u2580 25D2  
                         u2660 2820                           u2740 212A                           u3700 1A6E  
                         u3620 191E                           u3540 16EA                           u3460 1448  
                         u3380 0F38                           u2900 0294                           u2581 25CE  
                         u2661 281C                           u2741 2126                           u3701 1A6A  
                         u3621 191A                           u3541 16E6                           u3461 1444  
                         u3381 0F34                           u2901 0290                           u2821 002A  
                         u2590 2380                           u2670 283E                           u2750 2180  
                         u1950 2B66                           u3710 1A9E                           u3630 1948  
                         u3550 1716                           u3470 148A                           u3390 0FB8  
                         u2910 02D2                           u2830 008A                           u2591 237C  
                         u2671 283A                           u2751 217C                           u1951 2B62  
                         u3711 1A9A                           u3631 1944                           u3551 1712  
                         u3471 1486                           u3391 0FB4                           u2911 02CE  
                         u2831 0086                           u2680 285A                           u2760 21CA  
                         u1960 2918                           u3720 1AD8                           u3640 195A  
                         u3560 1740                           u2920 02E6                           u2840 00B8  
                         u2681 2856                           u2761 21C6                           u1945 2B46  
                         u3721 1AD4                           u3641 1956                           u3561 173C  
                         u2921 02E2                           u2841 00B4                           u2690 29C8  
                         u2770 21E8                           u1970 2940                           u3730 1B0C  
                         u3650 1976                           u3570 1770                           u2930 02FA  
                         u2850 010E                           u2691 29C4                           u2771 21E4  
                         u3731 1B08                           u3651 1972                           u3571 176C  
                         u2931 02F6                           u2851 010A                           _PEIE 7F96  
                         u2780 21F8                           u1980 2950                           u3740 1B36  
                         u3660 19AE                           u3580 179E                           u2940 031A  
                         u2781 21F4                           u1981 294C                           u3741 1B32  
                         u3661 19AA                           u3581 179A                           u3485 14A6  
                         u2941 0316                           u2861 0140                           u2790 2206  
                         u1990 2D28                           u3750 1B66                           u3670 19C0  
                         u3590 17C2                           u2950 0336                           u2791 2202  
                         u1967 290E                           u1991 2D24                           u3751 1B62  
                         u3671 19BC                           u3591 17BE                           u3495 14DE  
                         u2951 0332                           u2871 01B4                           u3760 1BA0  
                         u3680 19F8                           u2960 0352                           u1977 2936  
                         u3761 1B9C                           u3681 19F4                           u2961 034E  
                         u2881 01C0                           u3770 1BD4                           u3690 1A2E  
                         u2970 036E                           u2890 0260                           u3827 25F6  
                         u3771 1BD0                           u3691 1A2A                           u2971 036A  
                         u2891 025C                           _RCIE 7CED                           u3780 1C08  
                         u2980 038A                           _RCIF 7CF5                           _RCEN 7E2B  
                         u3837 2610                           u3781 1C04                           u2981 0386  
                         u3790 1C90                           u2990 03AE                           u3847 2626  
                         u3791 1C8C                           u2991 03AA                           u3857 2648  
                         u3867 265A                           u3877 2670                           u3887 2684  
                         _RBPU 7F8F                           _TMR0 0FD6                           _SPEN 7D5F  
                         _RSEN 7E29                           _TXIE 7CEC                           _TXIF 7CF4  
                         _TXEN 7D65                           _SYNC 7D64                    main@minutes 0161  
                  main@seconds 0163                           _date 003C                           _main 0012  
                         _menu 0060                           _time 0051                    main@prekey2 015D  
                         fsr0h 0FEA                           fsr1h 0FE2                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005D  
                         _puts 2B6C                    main@settime 0159                           prodh 0FF4  
                         prodl 0FF3                           start 000E                ___fldiv@new_exp 0027  
         ??_init_matrix_keypad 0001                   ___param_bank 0000                 clcd_write@byte 0002  
                _i2c_rep_start 2DC8                  ??_i2c_rx_mode 0001                          ??_isr 0001  
                 ?_init_ds1307 0001                   main@eevent10 014F                   main@comeback 0112  
                ___fltol@sign1 0037                          _ABDEN 7DC0                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0001  
                 ?_read_ds1307 0001                          _ACKEN 7E2C                          _ACKDT 7E2D  
               ??_display_time 000A                          _BCLIF 7D0B                __end_of___fldiv 20AE  
                        _ACQT0 7E03                          _ACQT1 7E04                          _ACQT2 7E05  
              __end_of___awdiv 2534                          _EEADR 0FA9                          STR_10 2FDF  
                        STR_11 2FE8                          STR_12 2F01                          STR_20 2EC7  
                        STR_13 2FFC                          STR_21 2EDB                          STR_22 2EAF  
                        STR_14 2F0F                          STR_30 2F67                          STR_15 2F0F  
                        STR_31 2F23                          STR_23 2E95                          STR_24 2EAF  
                        STR_16 2FFC                          STR_32 2F67                          _BRG16 7DC3  
                        STR_33 2FBB                          STR_25 2FAB                          STR_17 2F89  
                        STR_18 2F78                          STR_26 2F12                          STR_27 2F34  
                        STR_19 2EEF                          STR_28 2EB5                __end_of___awmod 25E4  
                        STR_29 2EB2                __end_of___fltol 2470                          ?_puts 0002  
              ___awdiv@divisor 0003                __end_of___lwdiv 287A                __end_of___lwmod 2A1A  
                 ?_init_config 0001                          i2l412 2A64                ___awdiv@counter 0005  
                        _VCFG0 7E0C                          _VCFG1 7E0D                          _RCREG 0FAE  
                        _SENDB 7D63                          _SPBRG 0FAF                          _PORTB 0F81  
                        _PORTD 0F83                          _TRISB 0F93                          _TRISC 0F94  
                        _TRISD 0F95                          _SSPIF 7CF3                          _TXREG 0FAD  
                 ?_init_timer0 0001                   main@password 01F2                          _count 01BA  
                        _putch 2D18                          main@a 01A9                          main@c 010A  
                        main@d 01AA                          main@g 01A5                          main@h 0120  
                        main@i 012C                          main@m 0191                          main@p 019B  
                        main@q 0132                          main@s 01A7                          tablat 0FF5  
                        plusw1 0FE3                          plusw2 0FDB                          puts@s 0002  
                        ttemp5 005E                          ttemp6 0061                          ttemp7 0065  
                        status 0FD8                          wtemp8 005E        ??_write_internal_eeprom 0002  
             init_ds1307@dummy 0011                     _i2c_no_ack 2DD8                __initialization 268C  
               ?_i2c_rep_start 0001                  main@delay1234 0185                   __end_of_main 1D14  
                 __end_of_puts 2BA2               __end_of_i2c_idle 2D90               __end_of_i2c_read 2DB8  
             __end_of_i2c_stop 2DC0              ??_read_ext_eeprom 0002                         ??_main 0039  
                       ??_puts 0004                  __activetblptr 0002            __end_of_i2c_rx_mode 2DD8  
         write_ext_eeprom@data 0002                         _ADCON0 0FC2                         _ADCON1 0FC1  
                       _ABDOVF 7DC7               read_switches@key 0050                         _ADRESH 0FC4  
                       _ADRESL 0FC3                         _EEDATA 0FA8                         _EECON2 0FA7  
                       _T08BIT 7EAE               ___awdiv@dividend 0001               _write_ext_eeprom 2AF2  
                       ?_putch 0001                         _GODONE 7E11                         i2l4500 2A1C  
                       i2l4502 2A2A                         i2l4504 2A52                         i2l4506 2A5A  
                       i2l4508 2A62                   _write_ds1307 2CC6                         _TMR0IE 7F95  
                       _TMR0IF 7F92                         _TMR0ON 7EAF                         _SSPADD 0FC8  
                       _TRISC3 7CA3                         _TRISC4 7CA4                         _TRISC6 7CA6  
                       _TRISC7 7CA7                         _TRISD7 7CAF                         _SSPBUF 0FC9  
             __end_of___xxtofl 2262               __end_of_get_time 2790                  main@minutes12 0197  
                main@seconds12 0199                         ___wmul 2C80                      ??___fldiv 001E  
                    ??___awdiv 0005                      ??___awmod 000D                      ??___fltol 0033  
                    ??___lwdiv 0005                      ??___lwmod 0005               __end_of_init_i2c 2D5A  
                       _o_flag 01F1               __end_of_init_adc 2CC6               __end_of_read_adc 2AAE  
                       clear_0 26F0                         clear_1 26FC               ___awdiv@quotient 0007  
              ___awmod@divisor 000B                   _calender_reg 0047                         isa$std 0001  
             __end_of_scan_key 236A                ___awmod@counter 000D                         main@h1 0122  
                       main@m1 0126                         main@p1 019D                         main@p2 019F  
                       main@s1 012A                         main@x2 01A3                         main@ad 016F  
                       main@cf 0136                         main@de 0167                         _strcmp 287A  
                 __pdataCOMRAM 005A                   __mediumconst 2E94                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                   ___xxtofl@arg 0012  
                 ___xxtofl@exp 0011                   ___xxtofl@val 0008                     __accesstop 0060  
      __end_of__initialization 2702           __end_of_display_time 2DA0                  ___rparam_used 0001  
                   ___fltol@f1 002F                ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001  
               __pcstackCOMRAM 0001                   __pidataBANK0 2952                   __pidataBANK1 2BA2  
                  _i2c_rx_mode 2DD0                  __end_of_putch 2D2E              __end_of_i2c_start 2DC8  
            __end_of_i2c_write 2DAC                        ??_putch 0001        write_ext_eeprom@address 0005  
                   __pbssBANK1 01E0                      ?_i2c_idle 0001                      ?_i2c_read 0001  
                    ?_i2c_stop 0001                     _clcd_print 28E6                     _clcd_putch 2D00  
                   _clcd_write 2B32                read_ds1307@data 0003                        ?___wmul 0001  
            read_switches@once 005C                        _ACKSTAT 7E2E                        ?_strcmp 0001  
                    ?___xxtofl 0008                        _SSPCON1 0FC6                      ?_get_time 0001  
                _read_switches 2790                     ??_i2c_idle 0001                     ??_i2c_read 0001  
                   ??_i2c_stop 0001                      ?_init_i2c 0001    read_internal_eeprom@address 0001  
                    ?_init_adc 0001                      ?_read_adc 0001                      ?_scan_key 0001  
              _read_ext_eeprom 2C02  __end_of_write_internal_eeprom 2C02                        __Hparam 0000  
                      __Lparam 0000                        ___fldiv 1D14                        ___awdiv 2470  
                      ___awmod 2534                        ___fltol 236A       __end_of_write_ext_eeprom 2B32  
                      ___lwdiv 2806                        ___lwmod 29B6                        __pcinit 268C  
                      __ramtop 0600                        __ptext0 0012                        __ptext1 2BD2  
                      __ptext2 2AF2                        __ptext3 287A                        __ptext4 2790  
                      __ptext5 2262                        __ptext6 2D5A                        __ptext7 2C02  
                      __ptext8 2A68                        __ptext9 2B6C              __end_of_init_clcd 268C  
                   ??___xxtofl 000C              __end_of_init_uart 2C56               ___awmod@dividend 0009  
    write_internal_eeprom@data 0001                 ?_read_switches 0001                        main@del 0134  
                      main@pq1 0183                        main@arr 0187                        main@bsw 0165  
                      main@key 01AC                        main@scv 01AE                     ??_get_time 0004  
               __pintcode_body 2A1A           end_of_initialization 2702                     ??_init_i2c 0001  
                   ??_init_adc 0001                  __Lmediumconst 2E94                     ??_read_adc 0003  
                      int_func 2A1A                     ??_scan_key 0001                 main@previous_g 0130  
                  ?_clcd_print 0007                    ?_clcd_putch 000F                    ?_clcd_write 0001  
                      postdec1 0FE5                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE                     main@F10722 01EA                     main@F10708 01B0  
                   main@F10742 01E5                     main@F10744 01E0                        strcmp@l 0001  
                      strcmp@r 0003                main@adc_reg_val 01A1                      _PORTBbits 0F81  
              read_adc@channel 0007                   _display_time 2D90                  i2c_write@data 0001  
                ___xxtofl@sign 0010                read_adc@reg_val 0005                    ___fldiv@grs 0029  
                  ___fldiv@rem 0022                     main@ad_206 0171                     main@ad_244 0175  
                   main@ad_239 0173        __end_of_read_ext_eeprom 2C2C                     main@hour12 0195  
                   main@event1 013C                     main@event2 013D                     main@event3 013E  
                   main@event4 013F                     main@event5 0140                     main@event6 0141  
                   main@event7 0142                     main@event8 0143                     main@event9 0144  
                   main@time23 017D                     main@prekey 015B                   ??_i2c_no_ack 0001  
 __end_of_read_internal_eeprom 2D6C                   ?_i2c_rx_mode 0001                 __end_of___wmul 2CA6  
                __pidataCOMRAM 2DDE                 __end_of_strcmp 28E6            start_initialization 268C  
          main@enter_password1 011B            main@enter_password2 0150                ??_read_switches 0001  
                    _i2c_start 2DC0                    __end_of_isr 2A68                      _i2c_write 2DA0  
           __end_of_i2c_no_ack 2DDE          __end_of_i2c_rep_start 2DD0                       ??___wmul 0005  
                ??_init_ds1307 0011                    __pdataBANK0 0060                    __pdataBANK1 01B0  
                ??_read_ds1307 0002                       ??_strcmp 0005    read_switches@detection_type 0001  
                ??_init_config 0012                      ___fldiv@a 001A                      ___fldiv@b 0016  
                ??_init_timer0 0001                    __pbssCOMRAM 003C                  __pcstackBANK1 0100  
                   ?_i2c_start 0001                     ?_i2c_write 0001               ?_read_ext_eeprom 0001  
                    _main$1250 012E               ___lwdiv@dividend 0001                      __pintcode 0008  
                __pmediumconst 2E94                       ?___fldiv 0016                       ?___awdiv 0001  
                     ?___awmod 0009                       ?___fltol 002F             read_ds1307@address 0002  
                     ?___lwdiv 0001                      _clock_reg 004B                       ?___lwmod 0001  
            ?_write_ext_eeprom 0002             ??_write_ext_eeprom 0003            __end_of_init_ds1307 2AF2  
          __end_of_read_ds1307 2C80               ___lwdiv@quotient 0005                      _init_clcd 25E4  
          __end_of_init_config 2D00                      _init_uart 2C2C           _read_internal_eeprom 2D5A  
                ?_write_ds1307 000F            __end_of_init_timer0 2D44                 ___wmul@product 0005  
                 ??_clcd_print 000A                   ??_clcd_putch 0010     __end_of_init_matrix_keypad 2D7E  
                 ??_clcd_write 0002                       _PIR2bits 0FA1                       i2u380_40 2A2A  
                     i2u380_41 2A26                       i2u381_40 2A52                       i2u381_41 2A4E  
        _write_internal_eeprom 2BD2          clcd_write@control_bit 0001              ___wmul@multiplier 0001  
                    main@m_263 0124                      main@s_265 0128                      main@del23 013A  
                    main@del24 0157                      main@del25 0110                      main@array 0100  
                    main@once1 010E                      main@time1 0179                      main@time2 017B  
                    main@sflag 0193                    ??_i2c_start 0001             __end_of_clcd_print 2952  
                  ??_i2c_write 0001             __end_of_clcd_putch 2D18             __end_of_clcd_write 2B6C  
                   ?_init_clcd 0001                     ?_init_uart 0001          ?_read_internal_eeprom 0001  
                    copy_data0 26A0                      copy_data1 26C0                 ??_write_ds1307 0010  
                     _i2c_idle 2D7E             main@enter_password 0116                       _i2c_read 2DAC  
                     _i2c_stop 2DB8                     _EECON1bits 0FA6                      isr@count1 004E  
                     __Hrparam 0000                       __Lrparam 0000                    _init_ds1307 2AAE  
       read_ext_eeprom@address 0002                    _read_ds1307 2C56                    _init_config 2CE4  
                     ___xxtofl 20AE            write_ds1307@address 0010                    _init_timer0 2D2E  
              ___lwdiv@divisor 0003                ___lwdiv@counter 0007                       __ptext10 2D18  
                     __ptext11 2C2C                       __ptext20 2710                       __ptext12 2CE4  
                     __ptext21 2C56                       __ptext13 2D2E                       __ptext30 2D90  
                     __ptext22 2DA0                       __ptext14 2D6C                       __ptext31 28E6  
                     __ptext23 2DB8                       __ptext15 2D44                       __ptext40 2534  
                     __ptext32 2D00                       __ptext24 2DC0                       __ptext16 2AAE  
                     __ptext41 2470                       __ptext33 2B32                       __ptext25 2DC8  
                     __ptext17 2CC6                       __ptext34 20AE                       __ptext26 2DAC  
                     __ptext18 25E4                       __ptext35 2C80                       __ptext27 2DD0  
                     __ptext19 2CA6                       __ptext36 29B6                       __ptext28 2D7E  
                     __ptext37 2806                       __ptext29 2DD8                       __ptext38 236A  
                     __ptext39 1D14                       _get_time 2710                       _init_i2c 2D44  
          read_ext_eeprom@data 0003                       _init_adc 2CA6                       _read_adc 2A68  
                     _scan_key 2262         ?_write_internal_eeprom 0001                       isa$xinst 0000  
                     int$flags 005D                       main@del1 0138                       main@flag 010C  
                     main@key1 017F                       main@key2 016D                       main@key3 0181  
                     main@mode 0177                       main@hour 015F                       main@once 0155  
                     main@setf 0114                      putch@byte 0001         ??_read_internal_eeprom 0001  
                  ??_init_clcd 0003          __end_of_read_switches 2806                    ??_init_uart 0001  
                     intlevel2 0000               ___lwmod@dividend 0001           __end_of_write_ds1307 2CE4  
              ___lwmod@divisor 0003                ___lwmod@counter 0005               write_ds1307@data 000F  
 write_internal_eeprom@address 0002  
